*** SIL module before Guaranteed Passes ***
sil_stage raw

import Builtin
import Swift
import SwiftShims

// main
sil [ossa] @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

// Empty.foo()
sil hidden [ossa] @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4file5EmptyC3fooyyF'

// Empty.deinit
sil hidden [ossa] @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Empty to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file5EmptyCfd'

// Empty.__deallocating_deinit
sil hidden [ossa] @$s4file5EmptyCfD : $@convention(method) (@owned Empty) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  // function_ref Empty.deinit
  %2 = function_ref @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Empty                   // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Empty                          // id: %5
  end_lifetime %0 : $Empty                        // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Empty // user: %8
  dealloc_ref %7 : $Empty                         // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file5EmptyCfD'

// Empty.__allocating_init()
sil hidden [exact_self_class] [ossa] @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty {
// %0 "$metatype"
bb0(%0 : $@thick Empty.Type):
  %1 = alloc_ref $Empty                           // user: %3
  // function_ref Empty.init()
  %2 = function_ref @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Empty) -> @owned Empty // user: %4
  return %3 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfC'

// Empty.init()
sil hidden [ossa] @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = mark_uninitialized [rootself] %0 : $Empty  // users: %4, %3
  %3 = copy_value %2 : $Empty                     // user: %5
  destroy_value %2 : $Empty                       // id: %4
  return %3 : $Empty                              // id: %5
} // end sil function '$s4file5EmptyCACycfc'

// Number.number.getter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivg : $@convention(method) (@guaranteed Number) -> Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*Int   // users: %5, %4
  %4 = load [trivial] %3 : $*Int                  // user: %6
  end_access %3 : $*Int                           // id: %5
  return %4 : $Int                                // id: %6
} // end sil function '$s4file6NumberC6numberSivg'

// Number.number.setter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivs : $@convention(method) (Int, @guaranteed Number) -> () {
// %0 "value"                                     // users: %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : @guaranteed $Number):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %7, %6
  assign %0 to %5 : $*Int                         // id: %6
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9
} // end sil function '$s4file6NumberC6numberSivs'

// Number.number.modify
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivM : $@yield_once @convention(method) (@guaranteed Number) -> @yields @inout Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*Int // users: %5, %8, %4
  yield %3 : $*Int, resume bb1, unwind bb2        // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file6NumberC6numberSivM'

// Number.__allocating_init(number:)
sil hidden [exact_self_class] [ossa] @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number {
// %0 "number"                                    // user: %4
// %1 "$metatype"
bb0(%0 : $Int, %1 : $@thick Number.Type):
  %2 = alloc_ref $Number                          // user: %4
  // function_ref Number.init(number:)
  %3 = function_ref @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (Int, @owned Number) -> @owned Number // user: %5
  return %4 : $Number                             // id: %5
} // end sil function '$s4file6NumberC6numberACSi_tcfC'

// Number.init(number:)
sil hidden [ossa] @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %8, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : @owned $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = mark_uninitialized [rootself] %1 : $Number // users: %12, %11, %5
  %5 = begin_borrow %4 : $Number                  // users: %10, %6
  %6 = ref_element_addr %5 : $Number, #Number.number // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*Int // users: %9, %8
  assign %0 to %7 : $*Int                         // id: %8
  end_access %7 : $*Int                           // id: %9
  end_borrow %5 : $Number                         // id: %10
  %11 = copy_value %4 : $Number                   // user: %13
  destroy_value %4 : $Number                      // id: %12
  return %11 : $Number                            // id: %13
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

// Number.deinit
sil hidden [ossa] @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Number to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file6NumberCfd'

// Number.__deallocating_deinit
sil hidden [ossa] @$s4file6NumberCfD : $@convention(method) (@owned Number) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  // function_ref Number.deinit
  %2 = function_ref @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Number                  // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Number                         // id: %5
  end_lifetime %0 : $Number                       // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Number // user: %8
  dealloc_ref %7 : $Number                        // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file6NumberCfD'

// Closure.closure.getter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvg : $@convention(method) (@guaranteed Closure) -> @owned @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  %4 = load [copy] %3 : $*@callee_guaranteed () -> () // user: %6
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  return %4 : $@callee_guaranteed () -> ()        // id: %6
} // end sil function '$s4file7ClosureC7closureyycvg'

// Closure.closure.setter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvs : $@convention(method) (@owned @callee_guaranteed () -> (), @guaranteed Closure) -> () {
// %0 "value"                                     // users: %11, %4, %2
// %1 "self"                                      // users: %6, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @guaranteed $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "value", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %10, %5
  %5 = copy_value %4 : $@callee_guaranteed () -> () // user: %8
  %6 = ref_element_addr %1 : $Closure, #Closure.closure // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*@callee_guaranteed () -> () // users: %9, %8
  assign %5 to %7 : $*@callee_guaranteed () -> () // id: %8
  end_access %7 : $*@callee_guaranteed () -> ()   // id: %9
  end_borrow %4 : $@callee_guaranteed () -> ()    // id: %10
  destroy_value %0 : $@callee_guaranteed () -> () // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file7ClosureC7closureyycvs'

// Closure.closure.modify
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvM : $@yield_once @convention(method) (@guaranteed Closure) -> @yields @inout @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %8, %4
  yield %3 : $*@callee_guaranteed () -> (), resume bb1, unwind bb2 // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file7ClosureC7closureyycvM'

// Closure.__allocating_init(_:)
sil hidden [exact_self_class] [ossa] @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure {
// %0 "block"                                     // user: %4
// %1 "$metatype"
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : $@thick Closure.Type):
  %2 = alloc_ref $Closure                         // user: %4
  // function_ref Closure.init(_:)
  %3 = function_ref @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %5
  return %4 : $Closure                            // id: %5
} // end sil function '$s4file7ClosureCyACyyccfC'

// Closure.init(_:)
sil hidden [ossa] @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %16, %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @owned $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = mark_uninitialized [rootself] %1 : $Closure // users: %15, %14, %5
  %5 = begin_borrow %4 : $Closure                 // users: %13, %8
  %6 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %12, %7
  %7 = copy_value %6 : $@callee_guaranteed () -> () // user: %10
  %8 = ref_element_addr %5 : $Closure, #Closure.closure // user: %9
  %9 = begin_access [modify] [dynamic] %8 : $*@callee_guaranteed () -> () // users: %11, %10
  assign %7 to %9 : $*@callee_guaranteed () -> () // id: %10
  end_access %9 : $*@callee_guaranteed () -> ()   // id: %11
  end_borrow %6 : $@callee_guaranteed () -> ()    // id: %12
  end_borrow %5 : $Closure                        // id: %13
  %14 = copy_value %4 : $Closure                  // user: %17
  destroy_value %4 : $Closure                     // id: %15
  destroy_value %0 : $@callee_guaranteed () -> () // id: %16
  return %14 : $Closure                           // id: %17
} // end sil function '$s4file7ClosureCyACyyccfc'

// Closure.deinit
sil hidden [ossa] @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %6, %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [deinit] [static] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  destroy_addr %3 : $*@callee_guaranteed () -> () // id: %4
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = unchecked_ref_cast %0 : $Closure to $Builtin.NativeObject // user: %7
  %7 = unchecked_ownership_conversion %6 : $Builtin.NativeObject, @guaranteed to @owned // user: %8
  return %7 : $Builtin.NativeObject               // id: %8
} // end sil function '$s4file7ClosureCfd'

// Closure.__deallocating_deinit
sil hidden [ossa] @$s4file7ClosureCfD : $@convention(method) (@owned Closure) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  // function_ref Closure.deinit
  %2 = function_ref @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Closure                 // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Closure                        // id: %5
  end_lifetime %0 : $Closure                      // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Closure // user: %8
  dealloc_ref %7 : $Closure                       // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file7ClosureCfD'

// foo()
sil hidden [ossa] @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %629, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %628, %107, %92, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %13
  %8 = integer_literal $Builtin.IntLiteral, 0     // user: %11
  %9 = metatype $@thin Int.Type                   // user: %11
  // function_ref Int.init(_builtinIntegerLiteral:)
  %10 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %11
  %11 = apply %10(%8, %9) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %13
  // function_ref Number.__allocating_init(number:)
  %12 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %13
  %13 = apply %12(%11, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %627, %103, %88, %77, %68, %14
  debug_value %13 : $Number, let, name "number"   // id: %14
  %15 = integer_literal $Builtin.Word, 1          // user: %17
  // function_ref _allocateUninitializedArray<A>(_:)
  %16 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %17
  %17 = apply %16<Any>(%15) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %18
  (%18, %19) = destructure_tuple %17 : $(Array<Any>, Builtin.RawPointer) // users: %37, %34, %20
  %20 = pointer_to_address %19 : $Builtin.RawPointer to [strict] $*Any // user: %27
  %21 = string_literal utf8 "===== Did init"      // user: %26
  %22 = integer_literal $Builtin.Word, 14         // user: %26
  %23 = integer_literal $Builtin.Int1, -1         // user: %26
  %24 = metatype $@thin String.Type               // user: %26
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %25 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %26 = apply %25(%21, %22, %23, %24) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %27 = init_existential_addr %20 : $*Any, $String // user: %28
  store %26 to [init] %27 : $*String              // id: %28
  // function_ref default argument 1 of print(_:separator:terminator:)
  %29 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %30
  %30 = apply %29() : $@convention(thin) () -> @owned String // users: %36, %34
  // function_ref default argument 2 of print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %32
  %32 = apply %31() : $@convention(thin) () -> @owned String // users: %35, %34
  // function_ref print(_:separator:terminator:)
  %33 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %34
  %34 = apply %33(%18, %30, %32) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %32 : $String                     // id: %35
  destroy_value %30 : $String                     // id: %36
  destroy_value %18 : $Array<Any>                 // id: %37
  %38 = integer_literal $Builtin.Word, 1          // user: %40
  // function_ref _allocateUninitializedArray<A>(_:)
  %39 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %40
  %40 = apply %39<Any>(%38) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %41
  (%41, %42) = destructure_tuple %40 : $(Array<Any>, Builtin.RawPointer) // users: %60, %57, %43
  %43 = pointer_to_address %42 : $Builtin.RawPointer to [strict] $*Any // user: %50
  %44 = string_literal utf8 "===== Did hook"      // user: %49
  %45 = integer_literal $Builtin.Word, 14         // user: %49
  %46 = integer_literal $Builtin.Int1, -1         // user: %49
  %47 = metatype $@thin String.Type               // user: %49
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %48 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %49
  %49 = apply %48(%44, %45, %46, %47) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %51
  %50 = init_existential_addr %43 : $*Any, $String // user: %51
  store %49 to [init] %50 : $*String              // id: %51
  // function_ref default argument 1 of print(_:separator:terminator:)
  %52 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %53
  %53 = apply %52() : $@convention(thin) () -> @owned String // users: %59, %57
  // function_ref default argument 2 of print(_:separator:terminator:)
  %54 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %55
  %55 = apply %54() : $@convention(thin) () -> @owned String // users: %58, %57
  // function_ref print(_:separator:terminator:)
  %56 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %57
  %57 = apply %56(%41, %53, %55) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %55 : $String                     // id: %58
  destroy_value %53 : $String                     // id: %59
  destroy_value %41 : $Array<Any>                 // id: %60
  %61 = alloc_box ${ var Int }, var, name "value" // users: %626, %114, %83, %62
  %62 = project_box %61 : ${ var Int }, 0         // users: %463, %115, %84, %67
  %63 = integer_literal $Builtin.IntLiteral, 0    // user: %66
  %64 = metatype $@thin Int.Type                  // user: %66
  // function_ref Int.init(_builtinIntegerLiteral:)
  %65 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %66
  %66 = apply %65(%63, %64) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %67
  store %66 to [trivial] %62 : $*Int              // id: %67
  %68 = begin_borrow %13 : $Number                // users: %71, %69
  %69 = copy_value %68 : $Number                  // users: %76, %73, %70
  debug_value %69 : $Number, let, name "number"   // id: %70
  end_borrow %68 : $Number                        // id: %71
  // function_ref closure #2 in foo()
  %72 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %74
  %73 = copy_value %69 : $Number                  // user: %74
  %74 = partial_apply [callee_guaranteed] %72(%73) : $@convention(thin) (@guaranteed Number) -> () // users: %625, %246, %75
  debug_value %74 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %75
  destroy_value %69 : $Number                     // id: %76
  %77 = begin_borrow %13 : $Number                // users: %80, %78
  %78 = copy_value %77 : $Number                  // users: %87, %82, %79
  debug_value %78 : $Number, let, name "number"   // id: %79
  end_borrow %77 : $Number                        // id: %80
  // function_ref closure #3 in foo()
  %81 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %85
  %82 = copy_value %78 : $Number                  // user: %85
  %83 = copy_value %61 : ${ var Int }             // user: %85
  mark_function_escape %62 : $*Int                // id: %84
  %85 = partial_apply [callee_guaranteed] %81(%82, %83) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %624, %285, %86
  debug_value %85 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %86
  destroy_value %78 : $Number                     // id: %87
  %88 = begin_borrow %13 : $Number                // users: %91, %89
  %89 = copy_value %88 : $Number                  // users: %102, %97, %90
  debug_value %89 : $Number, let, name "number"   // id: %90
  end_borrow %88 : $Number                        // id: %91
  %92 = begin_borrow %5 : $Empty                  // users: %95, %93
  %93 = copy_value %92 : $Empty                   // users: %101, %98, %94
  debug_value %93 : $Empty, let, name "empty"     // id: %94
  end_borrow %92 : $Empty                         // id: %95
  // function_ref closure #4 in foo()
  %96 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %99
  %97 = copy_value %89 : $Number                  // user: %99
  %98 = copy_value %93 : $Empty                   // user: %99
  %99 = partial_apply [callee_guaranteed] %96(%97, %98) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %623, %324, %100
  debug_value %99 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %100
  destroy_value %93 : $Empty                      // id: %101
  destroy_value %89 : $Number                     // id: %102
  %103 = begin_borrow %13 : $Number               // users: %106, %104
  %104 = copy_value %103 : $Number                // users: %119, %112, %105
  debug_value %104 : $Number, let, name "number"  // id: %105
  end_borrow %103 : $Number                       // id: %106
  %107 = begin_borrow %5 : $Empty                 // users: %110, %108
  %108 = copy_value %107 : $Empty                 // users: %118, %113, %109
  debug_value %108 : $Empty, let, name "empty"    // id: %109
  end_borrow %107 : $Empty                        // id: %110
  // function_ref closure #5 in foo()
  %111 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %116
  %112 = copy_value %104 : $Number                // user: %116
  %113 = copy_value %108 : $Empty                 // user: %116
  %114 = copy_value %61 : ${ var Int }            // user: %116
  mark_function_escape %62 : $*Int                // id: %115
  %116 = partial_apply [callee_guaranteed] %111(%112, %113, %114) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %622, %363, %117
  debug_value %116 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %117
  destroy_value %108 : $Empty                     // id: %118
  destroy_value %104 : $Number                    // id: %119
  %120 = integer_literal $Builtin.Word, 1         // user: %122
  // function_ref _allocateUninitializedArray<A>(_:)
  %121 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %122
  %122 = apply %121<Any>(%120) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %123
  (%123, %124) = destructure_tuple %122 : $(Array<Any>, Builtin.RawPointer) // users: %142, %139, %125
  %125 = pointer_to_address %124 : $Builtin.RawPointer to [strict] $*Any // user: %132
  %126 = string_literal utf8 "===== Did init closures" // user: %131
  %127 = integer_literal $Builtin.Word, 23        // user: %131
  %128 = integer_literal $Builtin.Int1, -1        // user: %131
  %129 = metatype $@thin String.Type              // user: %131
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %130 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %131
  %131 = apply %130(%126, %127, %128, %129) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %133
  %132 = init_existential_addr %125 : $*Any, $String // user: %133
  store %131 to [init] %132 : $*String            // id: %133
  // function_ref default argument 1 of print(_:separator:terminator:)
  %134 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %135
  %135 = apply %134() : $@convention(thin) () -> @owned String // users: %141, %139
  // function_ref default argument 2 of print(_:separator:terminator:)
  %136 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %137
  %137 = apply %136() : $@convention(thin) () -> @owned String // users: %140, %139
  // function_ref print(_:separator:terminator:)
  %138 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %139
  %139 = apply %138(%123, %135, %137) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %137 : $String                    // id: %140
  destroy_value %135 : $String                    // id: %141
  destroy_value %123 : $Array<Any>                // id: %142
  %143 = alloc_box ${ var Array<Closure> }, var, name "storage" // users: %621, %144
  %144 = project_box %143 : ${ var Array<Closure> }, 0 // users: %493, %423, %402, %370, %331, %292, %253, %153, %148
  %145 = metatype $@thin Array<Closure>.Type      // user: %147
  // function_ref Array.init()
  %146 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %147
  %147 = apply %146<Closure>(%145) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %148
  store %147 to [init] %144 : $*Array<Closure>    // id: %148
  %149 = integer_literal $Builtin.IntLiteral, 100 // user: %152
  %150 = metatype $@thin Int.Type                 // user: %152
  // function_ref Int.init(_builtinIntegerLiteral:)
  %151 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %152
  %152 = apply %151(%149, %150) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %155
  %153 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %156, %155
  // function_ref Array.reserveCapacity(_:)
  %154 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %155
  %155 = apply %154<Closure>(%152, %153) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %153 : $*Array<Closure>              // id: %156
  %157 = integer_literal $Builtin.Word, 1         // user: %159
  // function_ref _allocateUninitializedArray<A>(_:)
  %158 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %159
  %159 = apply %158<Any>(%157) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %160
  (%160, %161) = destructure_tuple %159 : $(Array<Any>, Builtin.RawPointer) // users: %179, %176, %162
  %162 = pointer_to_address %161 : $Builtin.RawPointer to [strict] $*Any // user: %169
  %163 = string_literal utf8 "===== Did init array" // user: %168
  %164 = integer_literal $Builtin.Word, 20        // user: %168
  %165 = integer_literal $Builtin.Int1, -1        // user: %168
  %166 = metatype $@thin String.Type              // user: %168
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %167 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %168
  %168 = apply %167(%163, %164, %165, %166) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %170
  %169 = init_existential_addr %162 : $*Any, $String // user: %170
  store %168 to [init] %169 : $*String            // id: %170
  // function_ref default argument 1 of print(_:separator:terminator:)
  %171 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %172
  %172 = apply %171() : $@convention(thin) () -> @owned String // users: %178, %176
  // function_ref default argument 2 of print(_:separator:terminator:)
  %173 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %174
  %174 = apply %173() : $@convention(thin) () -> @owned String // users: %177, %176
  // function_ref print(_:separator:terminator:)
  %175 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %176
  %176 = apply %175(%160, %172, %174) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %174 : $String                    // id: %177
  destroy_value %172 : $String                    // id: %178
  destroy_value %160 : $Array<Any>                // id: %179
  %180 = alloc_box ${ var Bool }, var, name "run" // users: %620, %181
  %181 = project_box %180 : ${ var Bool }, 0      // users: %564, %188, %186
  %182 = integer_literal $Builtin.Int1, -1        // user: %185
  %183 = metatype $@thin Bool.Type                // user: %185
  // function_ref Bool.init(_builtinBooleanLiteral:)
  %184 = function_ref @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %185
  %185 = apply %184(%182, %183) : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %186
  store %185 to [trivial] %181 : $*Bool           // id: %186
  br bb1                                          // id: %187

bb1:                                              // Preds: bb25 bb0
  %188 = begin_access [read] [unknown] %181 : $*Bool // users: %190, %189
  %189 = load [trivial] %188 : $*Bool             // user: %191
  end_access %188 : $*Bool                        // id: %190
  %191 = struct_extract %189 : $Bool, #Bool._value // user: %192
  cond_br %191, bb2, bb26                         // id: %192

bb2:                                              // Preds: bb1
  %193 = integer_literal $Builtin.Word, 1         // user: %195
  // function_ref _allocateUninitializedArray<A>(_:)
  %194 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %195
  %195 = apply %194<Any>(%193) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %196
  (%196, %197) = destructure_tuple %195 : $(Array<Any>, Builtin.RawPointer) // users: %215, %212, %198
  %198 = pointer_to_address %197 : $Builtin.RawPointer to [strict] $*Any // user: %205
  %199 = string_literal utf8 "===== Ask"          // user: %204
  %200 = integer_literal $Builtin.Word, 9         // user: %204
  %201 = integer_literal $Builtin.Int1, -1        // user: %204
  %202 = metatype $@thin String.Type              // user: %204
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %203 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %204
  %204 = apply %203(%199, %200, %201, %202) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %206
  %205 = init_existential_addr %198 : $*Any, $String // user: %206
  store %204 to [init] %205 : $*String            // id: %206
  // function_ref default argument 1 of print(_:separator:terminator:)
  %207 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %208
  %208 = apply %207() : $@convention(thin) () -> @owned String // users: %214, %212
  // function_ref default argument 2 of print(_:separator:terminator:)
  %209 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %210
  %210 = apply %209() : $@convention(thin) () -> @owned String // users: %213, %212
  // function_ref print(_:separator:terminator:)
  %211 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %212
  %212 = apply %211(%196, %208, %210) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %210 : $String                    // id: %213
  destroy_value %208 : $String                    // id: %214
  destroy_value %196 : $Array<Any>                // id: %215
  // function_ref default argument 0 of readLine(strippingNewline:)
  %216 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %217
  %217 = apply %216() : $@convention(thin) () -> Bool // user: %219
  // function_ref readLine(strippingNewline:)
  %218 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %219
  %219 = apply %218(%217) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %595, %221, %220
  debug_value %219 : $Optional<String>, let, name "line" // id: %220
  %221 = begin_borrow %219 : $Optional<String>    // users: %593, %567, %537, %529, %470, %467, %435, %430, %378, %375, %339, %336, %300, %297, %261, %258, %222
  %222 = copy_value %221 : $Optional<String>      // users: %244, %260, %233, %223
  debug_value %222 : $Optional<String>, let, name "$match" // id: %223
  %224 = string_literal utf8 "push1"              // user: %229
  %225 = integer_literal $Builtin.Word, 5         // user: %229
  %226 = integer_literal $Builtin.Int1, -1        // user: %229
  %227 = metatype $@thin String.Type              // user: %229
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %228 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %229
  %229 = apply %228(%224, %225, %226, %227) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %230
  %230 = enum $Optional<String>, #Optional.some!enumelt, %229 : $String // user: %232
  %231 = alloc_stack $Optional<String>            // users: %241, %240, %237, %232
  store %230 to [init] %231 : $*Optional<String>  // id: %232
  %233 = begin_borrow %222 : $Optional<String>    // users: %239, %235
  %234 = alloc_stack $Optional<String>            // users: %238, %237, %235
  %235 = store_borrow %233 to %234 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %236 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %237
  %237 = apply %236<String?>(%231, %234) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %242
  dealloc_stack %234 : $*Optional<String>         // id: %238
  end_borrow %233 : $Optional<String>             // id: %239
  destroy_addr %231 : $*Optional<String>          // id: %240
  dealloc_stack %231 : $*Optional<String>         // id: %241
  %242 = struct_extract %237 : $Bool, #Bool._value // user: %243
  cond_br %242, bb3, bb4                          // id: %243

bb3:                                              // Preds: bb2
  destroy_value %222 : $Optional<String>          // id: %244
  %245 = metatype $@thick Closure.Type            // user: %249
  %246 = begin_borrow %74 : $@callee_guaranteed () -> () // users: %250, %247
  %247 = copy_value %246 : $@callee_guaranteed () -> () // user: %249
  // function_ref Closure.__allocating_init(_:)
  %248 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %249
  %249 = apply %248(%247, %245) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %252
  end_borrow %246 : $@callee_guaranteed () -> ()  // id: %250
  %251 = alloc_stack $Closure                     // users: %257, %255, %252
  store %249 to [init] %251 : $*Closure           // id: %252
  %253 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %256, %255
  // function_ref Array.append(_:)
  %254 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %255
  %255 = apply %254<Closure>(%251, %253) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %253 : $*Array<Closure>              // id: %256
  dealloc_stack %251 : $*Closure                  // id: %257
  end_borrow %221 : $Optional<String>             // id: %258
  br bb25                                         // id: %259

bb4:                                              // Preds: bb2
  destroy_value %222 : $Optional<String>          // id: %260
  %261 = copy_value %221 : $Optional<String>      // users: %283, %299, %272, %262
  debug_value %261 : $Optional<String>, let, name "$match" // id: %262
  %263 = string_literal utf8 "push1_1"            // user: %268
  %264 = integer_literal $Builtin.Word, 7         // user: %268
  %265 = integer_literal $Builtin.Int1, -1        // user: %268
  %266 = metatype $@thin String.Type              // user: %268
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %267 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %268
  %268 = apply %267(%263, %264, %265, %266) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %269
  %269 = enum $Optional<String>, #Optional.some!enumelt, %268 : $String // user: %271
  %270 = alloc_stack $Optional<String>            // users: %280, %279, %276, %271
  store %269 to [init] %270 : $*Optional<String>  // id: %271
  %272 = begin_borrow %261 : $Optional<String>    // users: %278, %274
  %273 = alloc_stack $Optional<String>            // users: %277, %276, %274
  %274 = store_borrow %272 to %273 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %275 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %276
  %276 = apply %275<String?>(%270, %273) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %281
  dealloc_stack %273 : $*Optional<String>         // id: %277
  end_borrow %272 : $Optional<String>             // id: %278
  destroy_addr %270 : $*Optional<String>          // id: %279
  dealloc_stack %270 : $*Optional<String>         // id: %280
  %281 = struct_extract %276 : $Bool, #Bool._value // user: %282
  cond_br %281, bb5, bb6                          // id: %282

bb5:                                              // Preds: bb4
  destroy_value %261 : $Optional<String>          // id: %283
  %284 = metatype $@thick Closure.Type            // user: %288
  %285 = begin_borrow %85 : $@callee_guaranteed () -> () // users: %289, %286
  %286 = copy_value %285 : $@callee_guaranteed () -> () // user: %288
  // function_ref Closure.__allocating_init(_:)
  %287 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %288
  %288 = apply %287(%286, %284) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %291
  end_borrow %285 : $@callee_guaranteed () -> ()  // id: %289
  %290 = alloc_stack $Closure                     // users: %296, %294, %291
  store %288 to [init] %290 : $*Closure           // id: %291
  %292 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %295, %294
  // function_ref Array.append(_:)
  %293 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %294
  %294 = apply %293<Closure>(%290, %292) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %292 : $*Array<Closure>              // id: %295
  dealloc_stack %290 : $*Closure                  // id: %296
  end_borrow %221 : $Optional<String>             // id: %297
  br bb25                                         // id: %298

bb6:                                              // Preds: bb4
  destroy_value %261 : $Optional<String>          // id: %299
  %300 = copy_value %221 : $Optional<String>      // users: %322, %338, %311, %301
  debug_value %300 : $Optional<String>, let, name "$match" // id: %301
  %302 = string_literal utf8 "push2"              // user: %307
  %303 = integer_literal $Builtin.Word, 5         // user: %307
  %304 = integer_literal $Builtin.Int1, -1        // user: %307
  %305 = metatype $@thin String.Type              // user: %307
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %306 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %307
  %307 = apply %306(%302, %303, %304, %305) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %308
  %308 = enum $Optional<String>, #Optional.some!enumelt, %307 : $String // user: %310
  %309 = alloc_stack $Optional<String>            // users: %319, %318, %315, %310
  store %308 to [init] %309 : $*Optional<String>  // id: %310
  %311 = begin_borrow %300 : $Optional<String>    // users: %317, %313
  %312 = alloc_stack $Optional<String>            // users: %316, %315, %313
  %313 = store_borrow %311 to %312 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %314 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %315
  %315 = apply %314<String?>(%309, %312) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %320
  dealloc_stack %312 : $*Optional<String>         // id: %316
  end_borrow %311 : $Optional<String>             // id: %317
  destroy_addr %309 : $*Optional<String>          // id: %318
  dealloc_stack %309 : $*Optional<String>         // id: %319
  %320 = struct_extract %315 : $Bool, #Bool._value // user: %321
  cond_br %320, bb7, bb8                          // id: %321

bb7:                                              // Preds: bb6
  destroy_value %300 : $Optional<String>          // id: %322
  %323 = metatype $@thick Closure.Type            // user: %327
  %324 = begin_borrow %99 : $@callee_guaranteed () -> () // users: %328, %325
  %325 = copy_value %324 : $@callee_guaranteed () -> () // user: %327
  // function_ref Closure.__allocating_init(_:)
  %326 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %327
  %327 = apply %326(%325, %323) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %330
  end_borrow %324 : $@callee_guaranteed () -> ()  // id: %328
  %329 = alloc_stack $Closure                     // users: %335, %333, %330
  store %327 to [init] %329 : $*Closure           // id: %330
  %331 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %334, %333
  // function_ref Array.append(_:)
  %332 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %333
  %333 = apply %332<Closure>(%329, %331) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %331 : $*Array<Closure>              // id: %334
  dealloc_stack %329 : $*Closure                  // id: %335
  end_borrow %221 : $Optional<String>             // id: %336
  br bb25                                         // id: %337

bb8:                                              // Preds: bb6
  destroy_value %300 : $Optional<String>          // id: %338
  %339 = copy_value %221 : $Optional<String>      // users: %361, %377, %350, %340
  debug_value %339 : $Optional<String>, let, name "$match" // id: %340
  %341 = string_literal utf8 "push2_1"            // user: %346
  %342 = integer_literal $Builtin.Word, 7         // user: %346
  %343 = integer_literal $Builtin.Int1, -1        // user: %346
  %344 = metatype $@thin String.Type              // user: %346
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %345 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %346
  %346 = apply %345(%341, %342, %343, %344) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %347
  %347 = enum $Optional<String>, #Optional.some!enumelt, %346 : $String // user: %349
  %348 = alloc_stack $Optional<String>            // users: %358, %357, %354, %349
  store %347 to [init] %348 : $*Optional<String>  // id: %349
  %350 = begin_borrow %339 : $Optional<String>    // users: %356, %352
  %351 = alloc_stack $Optional<String>            // users: %355, %354, %352
  %352 = store_borrow %350 to %351 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %353 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %354
  %354 = apply %353<String?>(%348, %351) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %359
  dealloc_stack %351 : $*Optional<String>         // id: %355
  end_borrow %350 : $Optional<String>             // id: %356
  destroy_addr %348 : $*Optional<String>          // id: %357
  dealloc_stack %348 : $*Optional<String>         // id: %358
  %359 = struct_extract %354 : $Bool, #Bool._value // user: %360
  cond_br %359, bb9, bb10                         // id: %360

bb9:                                              // Preds: bb8
  destroy_value %339 : $Optional<String>          // id: %361
  %362 = metatype $@thick Closure.Type            // user: %366
  %363 = begin_borrow %116 : $@callee_guaranteed () -> () // users: %367, %364
  %364 = copy_value %363 : $@callee_guaranteed () -> () // user: %366
  // function_ref Closure.__allocating_init(_:)
  %365 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %366
  %366 = apply %365(%364, %362) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %369
  end_borrow %363 : $@callee_guaranteed () -> ()  // id: %367
  %368 = alloc_stack $Closure                     // users: %374, %372, %369
  store %366 to [init] %368 : $*Closure           // id: %369
  %370 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %373, %372
  // function_ref Array.append(_:)
  %371 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %372
  %372 = apply %371<Closure>(%368, %370) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %370 : $*Array<Closure>              // id: %373
  dealloc_stack %368 : $*Closure                  // id: %374
  end_borrow %221 : $Optional<String>             // id: %375
  br bb25                                         // id: %376

bb10:                                             // Preds: bb8
  destroy_value %339 : $Optional<String>          // id: %377
  %378 = copy_value %221 : $Optional<String>      // users: %400, %433, %389, %379
  debug_value %378 : $Optional<String>, let, name "$match" // id: %379
  %380 = string_literal utf8 "pop"                // user: %385
  %381 = integer_literal $Builtin.Word, 3         // user: %385
  %382 = integer_literal $Builtin.Int1, -1        // user: %385
  %383 = metatype $@thin String.Type              // user: %385
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %384 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %385
  %385 = apply %384(%380, %381, %382, %383) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %386
  %386 = enum $Optional<String>, #Optional.some!enumelt, %385 : $String // user: %388
  %387 = alloc_stack $Optional<String>            // users: %397, %396, %393, %388
  store %386 to [init] %387 : $*Optional<String>  // id: %388
  %389 = begin_borrow %378 : $Optional<String>    // users: %395, %391
  %390 = alloc_stack $Optional<String>            // users: %394, %393, %391
  %391 = store_borrow %389 to %390 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %392 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %393
  %393 = apply %392<String?>(%387, %390) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %398
  dealloc_stack %390 : $*Optional<String>         // id: %394
  end_borrow %389 : $Optional<String>             // id: %395
  destroy_addr %387 : $*Optional<String>          // id: %396
  dealloc_stack %387 : $*Optional<String>         // id: %397
  %398 = struct_extract %393 : $Bool, #Bool._value // user: %399
  cond_br %398, bb11, bb14                        // id: %399

bb11:                                             // Preds: bb10
  destroy_value %378 : $Optional<String>          // id: %400
  %401 = metatype $@thin Bool.Type                // user: %417
  %402 = begin_access [read] [unknown] %144 : $*Array<Closure> // users: %404, %403
  %403 = load [copy] %402 : $*Array<Closure>      // users: %415, %405
  end_access %402 : $*Array<Closure>              // id: %404
  %405 = begin_borrow %403 : $Array<Closure>      // users: %414, %407
  %406 = alloc_stack $Array<Closure>              // users: %419, %408, %407
  %407 = store_borrow %405 to %406 : $*Array<Closure>
  %408 = load_borrow %406 : $*Array<Closure>      // users: %418, %410
  %409 = alloc_stack $Array<Closure>              // users: %413, %412, %410
  %410 = store_borrow %408 to %409 : $*Array<Closure>
  // function_ref Collection.isEmpty.getter
  %411 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %412
  %412 = apply %411<[Closure]>(%409) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %417
  dealloc_stack %409 : $*Array<Closure>           // id: %413
  end_borrow %405 : $Array<Closure>               // id: %414
  destroy_value %403 : $Array<Closure>            // id: %415
  // function_ref static Bool.! prefix(_:)
  %416 = function_ref @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool // user: %417
  %417 = apply %416(%412, %401) : $@convention(method) (Bool, @thin Bool.Type) -> Bool // user: %420
  end_borrow %408 : $Array<Closure>               // id: %418
  dealloc_stack %406 : $*Array<Closure>           // id: %419
  %420 = struct_extract %417 : $Bool, #Bool._value // user: %421
  cond_br %420, bb12, bb13                        // id: %421

bb12:                                             // Preds: bb11
  %422 = alloc_stack $Closure                     // users: %429, %427, %425
  %423 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %426, %425
  // function_ref RangeReplaceableCollection<>.removeLast()
  %424 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %425
  %425 = apply %424<[Closure]>(%422, %423) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %423 : $*Array<Closure>              // id: %426
  %427 = load [take] %422 : $*Closure             // user: %428
  destroy_value %427 : $Closure                   // id: %428
  dealloc_stack %422 : $*Closure                  // id: %429
  end_borrow %221 : $Optional<String>             // id: %430
  br bb25                                         // id: %431

bb13:                                             // Preds: bb11
  br bb15                                         // id: %432

bb14:                                             // Preds: bb10
  destroy_value %378 : $Optional<String>          // id: %433
  br bb15                                         // id: %434

bb15:                                             // Preds: bb13 bb14
  %435 = copy_value %221 : $Optional<String>      // users: %457, %469, %446, %436
  debug_value %435 : $Optional<String>, let, name "$match" // id: %436
  %437 = string_literal utf8 "inc"                // user: %442
  %438 = integer_literal $Builtin.Word, 3         // user: %442
  %439 = integer_literal $Builtin.Int1, -1        // user: %442
  %440 = metatype $@thin String.Type              // user: %442
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %441 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %442
  %442 = apply %441(%437, %438, %439, %440) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %443
  %443 = enum $Optional<String>, #Optional.some!enumelt, %442 : $String // user: %445
  %444 = alloc_stack $Optional<String>            // users: %454, %453, %450, %445
  store %443 to [init] %444 : $*Optional<String>  // id: %445
  %446 = begin_borrow %435 : $Optional<String>    // users: %452, %448
  %447 = alloc_stack $Optional<String>            // users: %451, %450, %448
  %448 = store_borrow %446 to %447 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %449 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %450
  %450 = apply %449<String?>(%444, %447) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %455
  dealloc_stack %447 : $*Optional<String>         // id: %451
  end_borrow %446 : $Optional<String>             // id: %452
  destroy_addr %444 : $*Optional<String>          // id: %453
  dealloc_stack %444 : $*Optional<String>         // id: %454
  %455 = struct_extract %450 : $Bool, #Bool._value // user: %456
  cond_br %455, bb16, bb17                        // id: %456

bb16:                                             // Preds: bb15
  destroy_value %435 : $Optional<String>          // id: %457
  %458 = metatype $@thin Int.Type                 // user: %465
  %459 = integer_literal $Builtin.IntLiteral, 1   // user: %462
  %460 = metatype $@thin Int.Type                 // user: %462
  // function_ref Int.init(_builtinIntegerLiteral:)
  %461 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %462
  %462 = apply %461(%459, %460) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %465
  %463 = begin_access [modify] [unknown] %62 : $*Int // users: %466, %465
  // function_ref static Int.+= infix(_:_:)
  %464 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %465
  %465 = apply %464(%463, %462, %458) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %463 : $*Int                         // id: %466
  end_borrow %221 : $Optional<String>             // id: %467
  br bb25                                         // id: %468

bb17:                                             // Preds: bb15
  destroy_value %435 : $Optional<String>          // id: %469
  %470 = copy_value %221 : $Optional<String>      // users: %492, %536, %481, %471
  debug_value %470 : $Optional<String>, let, name "$match" // id: %471
  %472 = string_literal utf8 "exec"               // user: %477
  %473 = integer_literal $Builtin.Word, 4         // user: %477
  %474 = integer_literal $Builtin.Int1, -1        // user: %477
  %475 = metatype $@thin String.Type              // user: %477
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %476 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %477
  %477 = apply %476(%472, %473, %474, %475) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %478
  %478 = enum $Optional<String>, #Optional.some!enumelt, %477 : $String // user: %480
  %479 = alloc_stack $Optional<String>            // users: %489, %488, %485, %480
  store %478 to [init] %479 : $*Optional<String>  // id: %480
  %481 = begin_borrow %470 : $Optional<String>    // users: %487, %483
  %482 = alloc_stack $Optional<String>            // users: %486, %485, %483
  %483 = store_borrow %481 to %482 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %484 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %485
  %485 = apply %484<String?>(%479, %482) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %490
  dealloc_stack %482 : $*Optional<String>         // id: %486
  end_borrow %481 : $Optional<String>             // id: %487
  destroy_addr %479 : $*Optional<String>          // id: %488
  dealloc_stack %479 : $*Optional<String>         // id: %489
  %490 = struct_extract %485 : $Bool, #Bool._value // user: %491
  cond_br %490, bb18, bb22                        // id: %491

bb18:                                             // Preds: bb17
  destroy_value %470 : $Optional<String>          // id: %492
  %493 = begin_access [read] [unknown] %144 : $*Array<Closure> // users: %495, %494
  %494 = load [copy] %493 : $*Array<Closure>      // users: %508, %496
  end_access %493 : $*Array<Closure>              // id: %495
  %496 = begin_borrow %494 : $Array<Closure>      // users: %507, %498
  %497 = alloc_stack $Array<Closure>              // users: %526, %533, %499, %498
  %498 = store_borrow %496 to %497 : $*Array<Closure>
  %499 = load_borrow %497 : $*Array<Closure>      // users: %525, %532, %502
  %500 = alloc_stack $Optional<Closure>           // users: %524, %531, %506, %504
  %501 = alloc_stack $Array<Closure>              // users: %505, %504, %502
  %502 = store_borrow %499 to %501 : $*Array<Closure>
  // function_ref BidirectionalCollection.last.getter
  %503 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %504
  %504 = apply %503<[Closure]>(%500, %501) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %501 : $*Array<Closure>           // id: %505
  %506 = load [take] %500 : $*Optional<Closure>   // user: %509
  end_borrow %496 : $Array<Closure>               // id: %507
  destroy_value %494 : $Array<Closure>            // id: %508
  switch_enum %506 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %509

// %510                                           // users: %517, %511
bb19(%510 : @owned $Closure):                     // Preds: bb18
  %511 = begin_borrow %510 : $Closure             // users: %516, %512
  %512 = ref_element_addr %511 : $Closure, #Closure.closure // user: %513
  %513 = begin_access [read] [dynamic] %512 : $*@callee_guaranteed () -> () // users: %515, %514
  %514 = load [copy] %513 : $*@callee_guaranteed () -> () // users: %523, %518
  end_access %513 : $*@callee_guaranteed () -> () // id: %515
  end_borrow %511 : $Closure                      // id: %516
  destroy_value %510 : $Closure                   // id: %517
  %518 = begin_borrow %514 : $@callee_guaranteed () -> () // users: %520, %519
  %519 = apply %518() : $@callee_guaranteed () -> ()
  end_borrow %518 : $@callee_guaranteed () -> ()  // id: %520
  %521 = tuple ()                                 // user: %522
  %522 = enum $Optional<()>, #Optional.some!enumelt, %521 : $() // user: %527
  destroy_value %514 : $@callee_guaranteed () -> () // id: %523
  dealloc_stack %500 : $*Optional<Closure>        // id: %524
  end_borrow %499 : $Array<Closure>               // id: %525
  dealloc_stack %497 : $*Array<Closure>           // id: %526
  br bb20(%522 : $Optional<()>)                   // id: %527

bb20(%528 : $Optional<()>):                       // Preds: bb21 bb19
  end_borrow %221 : $Optional<String>             // id: %529
  br bb25                                         // id: %530

bb21:                                             // Preds: bb18
  dealloc_stack %500 : $*Optional<Closure>        // id: %531
  end_borrow %499 : $Array<Closure>               // id: %532
  dealloc_stack %497 : $*Array<Closure>           // id: %533
  %534 = enum $Optional<()>, #Optional.none!enumelt // user: %535
  br bb20(%534 : $Optional<()>)                   // id: %535

bb22:                                             // Preds: bb17
  destroy_value %470 : $Optional<String>          // id: %536
  %537 = copy_value %221 : $Optional<String>      // users: %559, %569, %548, %538
  debug_value %537 : $Optional<String>, let, name "$match" // id: %538
  %539 = string_literal utf8 "exit"               // user: %544
  %540 = integer_literal $Builtin.Word, 4         // user: %544
  %541 = integer_literal $Builtin.Int1, -1        // user: %544
  %542 = metatype $@thin String.Type              // user: %544
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %543 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %544
  %544 = apply %543(%539, %540, %541, %542) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %545
  %545 = enum $Optional<String>, #Optional.some!enumelt, %544 : $String // user: %547
  %546 = alloc_stack $Optional<String>            // users: %556, %555, %552, %547
  store %545 to [init] %546 : $*Optional<String>  // id: %547
  %548 = begin_borrow %537 : $Optional<String>    // users: %554, %550
  %549 = alloc_stack $Optional<String>            // users: %553, %552, %550
  %550 = store_borrow %548 to %549 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %551 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %552
  %552 = apply %551<String?>(%546, %549) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %557
  dealloc_stack %549 : $*Optional<String>         // id: %553
  end_borrow %548 : $Optional<String>             // id: %554
  destroy_addr %546 : $*Optional<String>          // id: %555
  dealloc_stack %546 : $*Optional<String>         // id: %556
  %557 = struct_extract %552 : $Bool, #Bool._value // user: %558
  cond_br %557, bb23, bb24                        // id: %558

bb23:                                             // Preds: bb22
  destroy_value %537 : $Optional<String>          // id: %559
  %560 = integer_literal $Builtin.Int1, 0         // user: %563
  %561 = metatype $@thin Bool.Type                // user: %563
  // function_ref Bool.init(_builtinBooleanLiteral:)
  %562 = function_ref @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %563
  %563 = apply %562(%560, %561) : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %565
  %564 = begin_access [modify] [unknown] %181 : $*Bool // users: %566, %565
  assign %563 to %564 : $*Bool                    // id: %565
  end_access %564 : $*Bool                        // id: %566
  end_borrow %221 : $Optional<String>             // id: %567
  br bb25                                         // id: %568

bb24:                                             // Preds: bb22
  destroy_value %537 : $Optional<String>          // id: %569
  %570 = integer_literal $Builtin.Word, 1         // user: %572
  // function_ref _allocateUninitializedArray<A>(_:)
  %571 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %572
  %572 = apply %571<Any>(%570) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %573
  (%573, %574) = destructure_tuple %572 : $(Array<Any>, Builtin.RawPointer) // users: %592, %589, %575
  %575 = pointer_to_address %574 : $Builtin.RawPointer to [strict] $*Any // user: %582
  %576 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %581
  %577 = integer_literal $Builtin.Word, 44        // user: %581
  %578 = integer_literal $Builtin.Int1, 0         // user: %581
  %579 = metatype $@thin String.Type              // user: %581
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %580 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %581
  %581 = apply %580(%576, %577, %578, %579) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %583
  %582 = init_existential_addr %575 : $*Any, $String // user: %583
  store %581 to [init] %582 : $*String            // id: %583
  // function_ref default argument 1 of print(_:separator:terminator:)
  %584 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %585
  %585 = apply %584() : $@convention(thin) () -> @owned String // users: %591, %589
  // function_ref default argument 2 of print(_:separator:terminator:)
  %586 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %587
  %587 = apply %586() : $@convention(thin) () -> @owned String // users: %590, %589
  // function_ref print(_:separator:terminator:)
  %588 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %589
  %589 = apply %588(%573, %585, %587) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %587 : $String                    // id: %590
  destroy_value %585 : $String                    // id: %591
  destroy_value %573 : $Array<Any>                // id: %592
  end_borrow %221 : $Optional<String>             // id: %593
  br bb25                                         // id: %594

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  destroy_value %219 : $Optional<String>          // id: %595
  br bb1                                          // id: %596

bb26:                                             // Preds: bb1
  %597 = integer_literal $Builtin.Word, 1         // user: %599
  // function_ref _allocateUninitializedArray<A>(_:)
  %598 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %599
  %599 = apply %598<Any>(%597) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %600
  (%600, %601) = destructure_tuple %599 : $(Array<Any>, Builtin.RawPointer) // users: %619, %616, %602
  %602 = pointer_to_address %601 : $Builtin.RawPointer to [strict] $*Any // user: %609
  %603 = string_literal utf8 "===== will end"     // user: %608
  %604 = integer_literal $Builtin.Word, 14        // user: %608
  %605 = integer_literal $Builtin.Int1, -1        // user: %608
  %606 = metatype $@thin String.Type              // user: %608
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %607 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %608
  %608 = apply %607(%603, %604, %605, %606) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %610
  %609 = init_existential_addr %602 : $*Any, $String // user: %610
  store %608 to [init] %609 : $*String            // id: %610
  // function_ref default argument 1 of print(_:separator:terminator:)
  %611 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %612
  %612 = apply %611() : $@convention(thin) () -> @owned String // users: %618, %616
  // function_ref default argument 2 of print(_:separator:terminator:)
  %613 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %614
  %614 = apply %613() : $@convention(thin) () -> @owned String // users: %617, %616
  // function_ref print(_:separator:terminator:)
  %615 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %616
  %616 = apply %615(%600, %612, %614) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %614 : $String                    // id: %617
  destroy_value %612 : $String                    // id: %618
  destroy_value %600 : $Array<Any>                // id: %619
  destroy_value %180 : ${ var Bool }              // id: %620
  destroy_value %143 : ${ var Array<Closure> }    // id: %621
  destroy_value %116 : $@callee_guaranteed () -> () // id: %622
  destroy_value %99 : $@callee_guaranteed () -> () // id: %623
  destroy_value %85 : $@callee_guaranteed () -> () // id: %624
  destroy_value %74 : $@callee_guaranteed () -> () // id: %625
  destroy_value %61 : ${ var Int }                // id: %626
  destroy_value %13 : $Number                     // id: %627
  destroy_value %5 : $Empty                       // id: %628
  destroy_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %629
  %630 = tuple ()                                 // user: %631
  return %630 : $()                               // id: %631
} // end sil function '$s4file3fooyyF'

// closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () {
// %0 "name"                                      // users: %3, %1
bb0(%0 : @guaranteed $String):
  debug_value %0 : $String, let, name "name", argno 1 // id: %1
  // function_ref closure #1 in closure #1 in foo()
  %2 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %4
  %3 = copy_value %0 : $String                    // user: %4
  %4 = partial_apply [callee_guaranteed] %2(%3) : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %5
  return %4 : $@callee_guaranteed (Int, Int, Int) -> () // id: %5
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_'

// closure #1 in closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %58, %4
// %1 "weak"                                      // users: %76, %5
// %2 "unowned"                                   // users: %94, %6
// %3 "name"                                      // users: %40, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : @guaranteed $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %11
  (%11, %12) = destructure_tuple %10 : $(Array<Any>, Builtin.RawPointer) // users: %126, %123, %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %116
  %14 = alloc_box ${ var DefaultStringInterpolation }, var, name "$interpolation" // users: %112, %15
  %15 = project_box %14 : ${ var DefaultStringInterpolation }, 0 // users: %111, %106, %95, %88, %77, %70, %59, %52, %41, %34, %27
  %16 = integer_literal $Builtin.IntLiteral, 39   // user: %19
  %17 = metatype $@thin Int.Type                  // user: %19
  // function_ref Int.init(_builtinIntegerLiteral:)
  %18 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %19
  %19 = apply %18(%16, %17) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %26
  %20 = integer_literal $Builtin.IntLiteral, 4    // user: %23
  %21 = metatype $@thin Int.Type                  // user: %23
  // function_ref Int.init(_builtinIntegerLiteral:)
  %22 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %23
  %23 = apply %22(%20, %21) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %26
  %24 = metatype $@thin DefaultStringInterpolation.Type // user: %26
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %25 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %26
  %26 = apply %25(%19, %23, %24) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %27
  store %26 to [init] %15 : $*DefaultStringInterpolation // id: %27
  %28 = string_literal utf8 "Name: "              // user: %33
  %29 = integer_literal $Builtin.Word, 6          // user: %33
  %30 = integer_literal $Builtin.Int1, -1         // user: %33
  %31 = metatype $@thin String.Type               // user: %33
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %32 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %33
  %33 = apply %32(%28, %29, %30, %31) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %38, %36
  %34 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %37, %36
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %35 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %36
  %36 = apply %35(%33, %34) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %34 : $*DefaultStringInterpolation   // id: %37
  destroy_value %33 : $String                     // id: %38
  %39 = alloc_stack $String                       // users: %45, %43, %40
  %40 = store_borrow %3 to %39 : $*String
  %41 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %44, %43
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %42 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %43
  %43 = apply %42<String>(%39, %41) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %41 : $*DefaultStringInterpolation   // id: %44
  dealloc_stack %39 : $*String                    // id: %45
  %46 = string_literal utf8 "; Strong: ("         // user: %51
  %47 = integer_literal $Builtin.Word, 11         // user: %51
  %48 = integer_literal $Builtin.Int1, -1         // user: %51
  %49 = metatype $@thin String.Type               // user: %51
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %50 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %51
  %51 = apply %50(%46, %47, %48, %49) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %56, %54
  %52 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %55, %54
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %53 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %54
  %54 = apply %53(%51, %52) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %52 : $*DefaultStringInterpolation   // id: %55
  destroy_value %51 : $String                     // id: %56
  %57 = alloc_stack $Int                          // users: %63, %61, %58
  store %0 to [trivial] %57 : $*Int               // id: %58
  %59 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %62, %61
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %60 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %61
  %61 = apply %60<Int>(%57, %59) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %59 : $*DefaultStringInterpolation   // id: %62
  dealloc_stack %57 : $*Int                       // id: %63
  %64 = string_literal utf8 "); Weak: ("          // user: %69
  %65 = integer_literal $Builtin.Word, 10         // user: %69
  %66 = integer_literal $Builtin.Int1, -1         // user: %69
  %67 = metatype $@thin String.Type               // user: %69
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %68 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %69
  %69 = apply %68(%64, %65, %66, %67) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %74, %72
  %70 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %73, %72
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %71 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %72
  %72 = apply %71(%69, %70) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %70 : $*DefaultStringInterpolation   // id: %73
  destroy_value %69 : $String                     // id: %74
  %75 = alloc_stack $Int                          // users: %81, %79, %76
  store %1 to [trivial] %75 : $*Int               // id: %76
  %77 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %80, %79
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %78 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %79
  %79 = apply %78<Int>(%75, %77) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %77 : $*DefaultStringInterpolation   // id: %80
  dealloc_stack %75 : $*Int                       // id: %81
  %82 = string_literal utf8 "); Unowned("         // user: %87
  %83 = integer_literal $Builtin.Word, 11         // user: %87
  %84 = integer_literal $Builtin.Int1, -1         // user: %87
  %85 = metatype $@thin String.Type               // user: %87
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %86 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %87
  %87 = apply %86(%82, %83, %84, %85) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %92, %90
  %88 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %91, %90
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %89 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %90
  %90 = apply %89(%87, %88) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %88 : $*DefaultStringInterpolation   // id: %91
  destroy_value %87 : $String                     // id: %92
  %93 = alloc_stack $Int                          // users: %99, %97, %94
  store %2 to [trivial] %93 : $*Int               // id: %94
  %95 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %98, %97
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %96 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %97
  %97 = apply %96<Int>(%93, %95) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %95 : $*DefaultStringInterpolation   // id: %98
  dealloc_stack %93 : $*Int                       // id: %99
  %100 = string_literal utf8 ")"                  // user: %105
  %101 = integer_literal $Builtin.Word, 1         // user: %105
  %102 = integer_literal $Builtin.Int1, -1        // user: %105
  %103 = metatype $@thin String.Type              // user: %105
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %104 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %105
  %105 = apply %104(%100, %101, %102, %103) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %110, %108
  %106 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %109, %108
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %107 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %108
  %108 = apply %107(%105, %106) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %106 : $*DefaultStringInterpolation  // id: %109
  destroy_value %105 : $String                    // id: %110
  %111 = load [copy] %15 : $*DefaultStringInterpolation // user: %115
  destroy_value %14 : ${ var DefaultStringInterpolation } // id: %112
  %113 = metatype $@thin String.Type              // user: %115
  // function_ref String.init(stringInterpolation:)
  %114 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %115
  %115 = apply %114(%111, %113) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %117
  %116 = init_existential_addr %13 : $*Any, $String // user: %117
  store %115 to [init] %116 : $*String            // id: %117
  // function_ref default argument 1 of print(_:separator:terminator:)
  %118 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %119
  %119 = apply %118() : $@convention(thin) () -> @owned String // users: %125, %123
  // function_ref default argument 2 of print(_:separator:terminator:)
  %120 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %121
  %121 = apply %120() : $@convention(thin) () -> @owned String // users: %124, %123
  // function_ref print(_:separator:terminator:)
  %122 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %123
  %123 = apply %122(%11, %119, %121) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %121 : $String                    // id: %124
  destroy_value %119 : $String                    // id: %125
  destroy_value %11 : $Array<Any>                 // id: %126
  %127 = tuple ()                                 // user: %128
  return %127 : $()                               // id: %128
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] [_semantics "array.uninitialized_intrinsic"] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer)

// Int.init(_builtinIntegerLiteral:)
sil [transparent] [serialized] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int

// DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
sil [serialized] @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// DefaultStringInterpolation.appendLiteral(_:)
sil [serialized] @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// String.init(stringInterpolation:)
sil [serialized] [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String

// default argument 1 of print(_:separator:terminator:)
sil hidden_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String

// default argument 2 of print(_:separator:terminator:)
sil hidden_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String

// print(_:separator:terminator:)
sil @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()

// closure #2 in foo()
sil private [ossa] @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () {
// %0 "number"                                    // users: %7, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %1
  %2 = metatype $@thin Int.Type                   // user: %10
  %3 = integer_literal $Builtin.IntLiteral, 1     // user: %6
  %4 = metatype $@thin Int.Type                   // user: %6
  // function_ref Int.init(_builtinIntegerLiteral:)
  %5 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %6
  %6 = apply %5(%3, %4) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %10
  %7 = ref_element_addr %0 : $Number, #Number.number // user: %8
  %8 = begin_access [modify] [dynamic] %7 : $*Int // users: %11, %10
  // function_ref static Int.+= infix(_:_:)
  %9 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %10
  %10 = apply %9(%8, %6, %2) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %8 : $*Int                           // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file3fooyyFyycfU0_'

// static Int.+= infix(_:_:)
sil [transparent] [serialized] @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()

// closure #3 in foo()
sil private [ossa] @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %10, %2
// %1 "value"                                     // user: %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %46, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = metatype $@thin Int.Type                   // user: %13
  %6 = integer_literal $Builtin.IntLiteral, 1     // user: %9
  %7 = metatype $@thin Int.Type                   // user: %9
  // function_ref Int.init(_builtinIntegerLiteral:)
  %8 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %9
  %9 = apply %8(%6, %7) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %13
  %10 = ref_element_addr %0 : $Number, #Number.number // user: %11
  %11 = begin_access [modify] [dynamic] %10 : $*Int // users: %14, %13
  // function_ref static Int.+= infix(_:_:)
  %12 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %13
  %13 = apply %12(%11, %9, %5) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %11 : $*Int                          // id: %14
  %15 = integer_literal $Builtin.Word, 1          // user: %17
  // function_ref _allocateUninitializedArray<A>(_:)
  %16 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %17
  %17 = apply %16<Any>(%15) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %18
  (%18, %19) = destructure_tuple %17 : $(Array<Any>, Builtin.RawPointer) // users: %82, %79, %20
  %20 = pointer_to_address %19 : $Builtin.RawPointer to [strict] $*Any // user: %72
  %21 = alloc_box ${ var DefaultStringInterpolation }, var, name "$interpolation" // users: %68, %22
  %22 = project_box %21 : ${ var DefaultStringInterpolation }, 0 // users: %67, %62, %51, %41, %34
  %23 = integer_literal $Builtin.IntLiteral, 3    // user: %26
  %24 = metatype $@thin Int.Type                  // user: %26
  // function_ref Int.init(_builtinIntegerLiteral:)
  %25 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %26
  %26 = apply %25(%23, %24) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %33
  %27 = integer_literal $Builtin.IntLiteral, 1    // user: %30
  %28 = metatype $@thin Int.Type                  // user: %30
  // function_ref Int.init(_builtinIntegerLiteral:)
  %29 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %30
  %30 = apply %29(%27, %28) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %33
  %31 = metatype $@thin DefaultStringInterpolation.Type // user: %33
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %32 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %33
  %33 = apply %32(%26, %30, %31) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %34
  store %33 to [init] %22 : $*DefaultStringInterpolation // id: %34
  %35 = string_literal utf8 "v: "                 // user: %40
  %36 = integer_literal $Builtin.Word, 3          // user: %40
  %37 = integer_literal $Builtin.Int1, -1         // user: %40
  %38 = metatype $@thin String.Type               // user: %40
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %39 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %40
  %40 = apply %39(%35, %36, %37, %38) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %45, %43
  %41 = begin_access [modify] [unknown] %22 : $*DefaultStringInterpolation // users: %44, %43
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %42 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %43
  %43 = apply %42(%40, %41) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %41 : $*DefaultStringInterpolation   // id: %44
  destroy_value %40 : $String                     // id: %45
  %46 = begin_access [read] [unknown] %3 : $*Int  // users: %48, %47
  %47 = load [trivial] %46 : $*Int                // user: %50
  end_access %46 : $*Int                          // id: %48
  %49 = alloc_stack $Int                          // users: %55, %53, %50
  store %47 to [trivial] %49 : $*Int              // id: %50
  %51 = begin_access [modify] [unknown] %22 : $*DefaultStringInterpolation // users: %54, %53
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %52 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %53
  %53 = apply %52<Int>(%49, %51) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %51 : $*DefaultStringInterpolation   // id: %54
  dealloc_stack %49 : $*Int                       // id: %55
  %56 = string_literal utf8 ""                    // user: %61
  %57 = integer_literal $Builtin.Word, 0          // user: %61
  %58 = integer_literal $Builtin.Int1, -1         // user: %61
  %59 = metatype $@thin String.Type               // user: %61
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %60 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %61
  %61 = apply %60(%56, %57, %58, %59) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %66, %64
  %62 = begin_access [modify] [unknown] %22 : $*DefaultStringInterpolation // users: %65, %64
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %63 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %64
  %64 = apply %63(%61, %62) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %62 : $*DefaultStringInterpolation   // id: %65
  destroy_value %61 : $String                     // id: %66
  %67 = load [copy] %22 : $*DefaultStringInterpolation // user: %71
  destroy_value %21 : ${ var DefaultStringInterpolation } // id: %68
  %69 = metatype $@thin String.Type               // user: %71
  // function_ref String.init(stringInterpolation:)
  %70 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %71
  %71 = apply %70(%67, %69) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %73
  %72 = init_existential_addr %20 : $*Any, $String // user: %73
  store %71 to [init] %72 : $*String              // id: %73
  // function_ref default argument 1 of print(_:separator:terminator:)
  %74 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %75
  %75 = apply %74() : $@convention(thin) () -> @owned String // users: %81, %79
  // function_ref default argument 2 of print(_:separator:terminator:)
  %76 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %77
  %77 = apply %76() : $@convention(thin) () -> @owned String // users: %80, %79
  // function_ref print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %79
  %79 = apply %78(%18, %75, %77) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %77 : $String                     // id: %80
  destroy_value %75 : $String                     // id: %81
  destroy_value %18 : $Array<Any>                 // id: %82
  %83 = tuple ()                                  // user: %84
  return %83 : $()                                // id: %84
} // end sil function '$s4file3fooyyFyycfU1_'

// closure #4 in foo()
sil private [ossa] @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () {
// %0 "number"                                    // users: %9, %2
// %1 "empty"                                     // users: %15, %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %3
  %4 = metatype $@thin Int.Type                   // user: %12
  %5 = integer_literal $Builtin.IntLiteral, 1     // user: %8
  %6 = metatype $@thin Int.Type                   // user: %8
  // function_ref Int.init(_builtinIntegerLiteral:)
  %7 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %8
  %8 = apply %7(%5, %6) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %12
  %9 = ref_element_addr %0 : $Number, #Number.number // user: %10
  %10 = begin_access [modify] [dynamic] %9 : $*Int // users: %13, %12
  // function_ref static Int.+= infix(_:_:)
  %11 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %12
  %12 = apply %11(%10, %8, %4) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %10 : $*Int                          // id: %13
  // function_ref Empty.foo()
  %14 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %15
  %15 = apply %14(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %16 = tuple ()                                  // user: %17
  return %16 : $()                                // id: %17
} // end sil function '$s4file3fooyyFyycfU2_'

// closure #5 in foo()
sil private [ossa] @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %12, %3
// %1 "empty"                                     // users: %18, %4
// %2 "value"                                     // user: %5
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty, %2 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %50, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = metatype $@thin Int.Type                   // user: %15
  %8 = integer_literal $Builtin.IntLiteral, 1     // user: %11
  %9 = metatype $@thin Int.Type                   // user: %11
  // function_ref Int.init(_builtinIntegerLiteral:)
  %10 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %11
  %11 = apply %10(%8, %9) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %15
  %12 = ref_element_addr %0 : $Number, #Number.number // user: %13
  %13 = begin_access [modify] [dynamic] %12 : $*Int // users: %16, %15
  // function_ref static Int.+= infix(_:_:)
  %14 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %15
  %15 = apply %14(%13, %11, %7) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %13 : $*Int                          // id: %16
  // function_ref Empty.foo()
  %17 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %18
  %18 = apply %17(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %19 = integer_literal $Builtin.Word, 1          // user: %21
  // function_ref _allocateUninitializedArray<A>(_:)
  %20 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %21
  %21 = apply %20<Any>(%19) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %22
  (%22, %23) = destructure_tuple %21 : $(Array<Any>, Builtin.RawPointer) // users: %86, %83, %24
  %24 = pointer_to_address %23 : $Builtin.RawPointer to [strict] $*Any // user: %76
  %25 = alloc_box ${ var DefaultStringInterpolation }, var, name "$interpolation" // users: %72, %26
  %26 = project_box %25 : ${ var DefaultStringInterpolation }, 0 // users: %71, %66, %55, %45, %38
  %27 = integer_literal $Builtin.IntLiteral, 3    // user: %30
  %28 = metatype $@thin Int.Type                  // user: %30
  // function_ref Int.init(_builtinIntegerLiteral:)
  %29 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %30
  %30 = apply %29(%27, %28) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %37
  %31 = integer_literal $Builtin.IntLiteral, 1    // user: %34
  %32 = metatype $@thin Int.Type                  // user: %34
  // function_ref Int.init(_builtinIntegerLiteral:)
  %33 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %34
  %34 = apply %33(%31, %32) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %37
  %35 = metatype $@thin DefaultStringInterpolation.Type // user: %37
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %36 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %37
  %37 = apply %36(%30, %34, %35) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %38
  store %37 to [init] %26 : $*DefaultStringInterpolation // id: %38
  %39 = string_literal utf8 "v: "                 // user: %44
  %40 = integer_literal $Builtin.Word, 3          // user: %44
  %41 = integer_literal $Builtin.Int1, -1         // user: %44
  %42 = metatype $@thin String.Type               // user: %44
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %43 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %44
  %44 = apply %43(%39, %40, %41, %42) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %49, %47
  %45 = begin_access [modify] [unknown] %26 : $*DefaultStringInterpolation // users: %48, %47
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %46 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %47
  %47 = apply %46(%44, %45) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %45 : $*DefaultStringInterpolation   // id: %48
  destroy_value %44 : $String                     // id: %49
  %50 = begin_access [read] [unknown] %5 : $*Int  // users: %52, %51
  %51 = load [trivial] %50 : $*Int                // user: %54
  end_access %50 : $*Int                          // id: %52
  %53 = alloc_stack $Int                          // users: %59, %57, %54
  store %51 to [trivial] %53 : $*Int              // id: %54
  %55 = begin_access [modify] [unknown] %26 : $*DefaultStringInterpolation // users: %58, %57
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %56 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %57
  %57 = apply %56<Int>(%53, %55) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %55 : $*DefaultStringInterpolation   // id: %58
  dealloc_stack %53 : $*Int                       // id: %59
  %60 = string_literal utf8 ""                    // user: %65
  %61 = integer_literal $Builtin.Word, 0          // user: %65
  %62 = integer_literal $Builtin.Int1, -1         // user: %65
  %63 = metatype $@thin String.Type               // user: %65
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %64 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %65
  %65 = apply %64(%60, %61, %62, %63) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %70, %68
  %66 = begin_access [modify] [unknown] %26 : $*DefaultStringInterpolation // users: %69, %68
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %67 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %68
  %68 = apply %67(%65, %66) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %66 : $*DefaultStringInterpolation   // id: %69
  destroy_value %65 : $String                     // id: %70
  %71 = load [copy] %26 : $*DefaultStringInterpolation // user: %75
  destroy_value %25 : ${ var DefaultStringInterpolation } // id: %72
  %73 = metatype $@thin String.Type               // user: %75
  // function_ref String.init(stringInterpolation:)
  %74 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %75
  %75 = apply %74(%71, %73) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %77
  %76 = init_existential_addr %24 : $*Any, $String // user: %77
  store %75 to [init] %76 : $*String              // id: %77
  // function_ref default argument 1 of print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %79
  %79 = apply %78() : $@convention(thin) () -> @owned String // users: %85, %83
  // function_ref default argument 2 of print(_:separator:terminator:)
  %80 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %81
  %81 = apply %80() : $@convention(thin) () -> @owned String // users: %84, %83
  // function_ref print(_:separator:terminator:)
  %82 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %83
  %83 = apply %82(%22, %79, %81) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %81 : $String                     // id: %84
  destroy_value %79 : $String                     // id: %85
  destroy_value %22 : $Array<Any>                 // id: %86
  %87 = tuple ()                                  // user: %88
  return %87 : $()                                // id: %88
} // end sil function '$s4file3fooyyFyycfU3_'

// Array.init()
sil [serialized] [_semantics "array.init.empty"] @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>

// Array.reserveCapacity(_:)
sil [serialized] [_semantics "array.mutate_unknown"] @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()

// Bool.init(_builtinBooleanLiteral:)
sil [transparent] [serialized] @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool

// default argument 0 of readLine(strippingNewline:)
sil hidden_external [serialized] @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool

// readLine(strippingNewline:)
sil @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String>

// ~= infix<A>(_:_:)
sil [transparent] [serialized] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool

// Array.append(_:)
sil [serialized] [_semantics "array.append_element"] @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()

// Collection.isEmpty.getter
sil [serialized] @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool

// static Bool.! prefix(_:)
sil [transparent] [serialized] @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool

// RangeReplaceableCollection<>.removeLast()
sil [serialized] @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element

// BidirectionalCollection.last.getter
sil [serialized] @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>

sil_vtable Empty {
  #Empty.init!allocator: (Empty.Type) -> () -> Empty : @$s4file5EmptyCACycfC	// Empty.__allocating_init()
  #Empty.deinit!deallocator: @$s4file5EmptyCfD	// Empty.__deallocating_deinit
}

sil_vtable Number {
  #Number.init!allocator: (Number.Type) -> (Int) -> Number : @$s4file6NumberC6numberACSi_tcfC	// Number.__allocating_init(number:)
  #Number.deinit!deallocator: @$s4file6NumberCfD	// Number.__deallocating_deinit
}

sil_vtable Closure {
  #Closure.init!allocator: (Closure.Type) -> (@escaping () -> ()) -> Closure : @$s4file7ClosureCyACyyccfC	// Closure.__allocating_init(_:)
  #Closure.deinit!deallocator: @$s4file7ClosureCfD	// Closure.__deallocating_deinit
}



  *** SIL module after #0, stage Guaranteed Passes, pass 0: SILGenCleanup (silgen-cleanup)
sil_stage raw

import Builtin
import Swift
import SwiftShims

// main
sil [ossa] @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

// Empty.foo()
sil hidden [ossa] @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4file5EmptyC3fooyyF'

// Empty.deinit
sil hidden [ossa] @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Empty to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file5EmptyCfd'

// Empty.__deallocating_deinit
sil hidden [ossa] @$s4file5EmptyCfD : $@convention(method) (@owned Empty) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  // function_ref Empty.deinit
  %2 = function_ref @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Empty                   // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Empty                          // id: %5
  end_lifetime %0 : $Empty                        // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Empty // user: %8
  dealloc_ref %7 : $Empty                         // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file5EmptyCfD'

// Empty.__allocating_init()
sil hidden [exact_self_class] [ossa] @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty {
// %0 "$metatype"
bb0(%0 : $@thick Empty.Type):
  %1 = alloc_ref $Empty                           // user: %3
  // function_ref Empty.init()
  %2 = function_ref @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Empty) -> @owned Empty // user: %4
  return %3 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfC'

// Empty.init()
sil hidden [ossa] @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = mark_uninitialized [rootself] %0 : $Empty  // users: %4, %3
  %3 = copy_value %2 : $Empty                     // user: %5
  destroy_value %2 : $Empty                       // id: %4
  return %3 : $Empty                              // id: %5
} // end sil function '$s4file5EmptyCACycfc'

// Number.number.getter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivg : $@convention(method) (@guaranteed Number) -> Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*Int   // users: %5, %4
  %4 = load [trivial] %3 : $*Int                  // user: %6
  end_access %3 : $*Int                           // id: %5
  return %4 : $Int                                // id: %6
} // end sil function '$s4file6NumberC6numberSivg'

// Number.number.setter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivs : $@convention(method) (Int, @guaranteed Number) -> () {
// %0 "value"                                     // users: %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : @guaranteed $Number):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %7, %6
  assign %0 to %5 : $*Int                         // id: %6
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9
} // end sil function '$s4file6NumberC6numberSivs'

// Number.number.modify
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivM : $@yield_once @convention(method) (@guaranteed Number) -> @yields @inout Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*Int // users: %5, %8, %4
  yield %3 : $*Int, resume bb1, unwind bb2        // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file6NumberC6numberSivM'

// Number.__allocating_init(number:)
sil hidden [exact_self_class] [ossa] @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number {
// %0 "number"                                    // user: %4
// %1 "$metatype"
bb0(%0 : $Int, %1 : $@thick Number.Type):
  %2 = alloc_ref $Number                          // user: %4
  // function_ref Number.init(number:)
  %3 = function_ref @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (Int, @owned Number) -> @owned Number // user: %5
  return %4 : $Number                             // id: %5
} // end sil function '$s4file6NumberC6numberACSi_tcfC'

// Number.init(number:)
sil hidden [ossa] @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %8, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : @owned $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = mark_uninitialized [rootself] %1 : $Number // users: %12, %11, %5
  %5 = begin_borrow %4 : $Number                  // users: %10, %6
  %6 = ref_element_addr %5 : $Number, #Number.number // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*Int // users: %9, %8
  assign %0 to %7 : $*Int                         // id: %8
  end_access %7 : $*Int                           // id: %9
  end_borrow %5 : $Number                         // id: %10
  %11 = copy_value %4 : $Number                   // user: %13
  destroy_value %4 : $Number                      // id: %12
  return %11 : $Number                            // id: %13
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

// Number.deinit
sil hidden [ossa] @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Number to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file6NumberCfd'

// Number.__deallocating_deinit
sil hidden [ossa] @$s4file6NumberCfD : $@convention(method) (@owned Number) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  // function_ref Number.deinit
  %2 = function_ref @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Number                  // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Number                         // id: %5
  end_lifetime %0 : $Number                       // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Number // user: %8
  dealloc_ref %7 : $Number                        // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file6NumberCfD'

// Closure.closure.getter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvg : $@convention(method) (@guaranteed Closure) -> @owned @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  %4 = load [copy] %3 : $*@callee_guaranteed () -> () // user: %6
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  return %4 : $@callee_guaranteed () -> ()        // id: %6
} // end sil function '$s4file7ClosureC7closureyycvg'

// Closure.closure.setter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvs : $@convention(method) (@owned @callee_guaranteed () -> (), @guaranteed Closure) -> () {
// %0 "value"                                     // users: %11, %4, %2
// %1 "self"                                      // users: %6, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @guaranteed $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "value", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %10, %5
  %5 = copy_value %4 : $@callee_guaranteed () -> () // user: %8
  %6 = ref_element_addr %1 : $Closure, #Closure.closure // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*@callee_guaranteed () -> () // users: %9, %8
  assign %5 to %7 : $*@callee_guaranteed () -> () // id: %8
  end_access %7 : $*@callee_guaranteed () -> ()   // id: %9
  end_borrow %4 : $@callee_guaranteed () -> ()    // id: %10
  destroy_value %0 : $@callee_guaranteed () -> () // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file7ClosureC7closureyycvs'

// Closure.closure.modify
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvM : $@yield_once @convention(method) (@guaranteed Closure) -> @yields @inout @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %8, %4
  yield %3 : $*@callee_guaranteed () -> (), resume bb1, unwind bb2 // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file7ClosureC7closureyycvM'

// Closure.__allocating_init(_:)
sil hidden [exact_self_class] [ossa] @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure {
// %0 "block"                                     // user: %4
// %1 "$metatype"
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : $@thick Closure.Type):
  %2 = alloc_ref $Closure                         // user: %4
  // function_ref Closure.init(_:)
  %3 = function_ref @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %5
  return %4 : $Closure                            // id: %5
} // end sil function '$s4file7ClosureCyACyyccfC'

// Closure.init(_:)
sil hidden [ossa] @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %16, %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @owned $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = mark_uninitialized [rootself] %1 : $Closure // users: %15, %14, %5
  %5 = begin_borrow %4 : $Closure                 // users: %13, %8
  %6 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %12, %7
  %7 = copy_value %6 : $@callee_guaranteed () -> () // user: %10
  %8 = ref_element_addr %5 : $Closure, #Closure.closure // user: %9
  %9 = begin_access [modify] [dynamic] %8 : $*@callee_guaranteed () -> () // users: %11, %10
  assign %7 to %9 : $*@callee_guaranteed () -> () // id: %10
  end_access %9 : $*@callee_guaranteed () -> ()   // id: %11
  end_borrow %6 : $@callee_guaranteed () -> ()    // id: %12
  end_borrow %5 : $Closure                        // id: %13
  %14 = copy_value %4 : $Closure                  // user: %17
  destroy_value %4 : $Closure                     // id: %15
  destroy_value %0 : $@callee_guaranteed () -> () // id: %16
  return %14 : $Closure                           // id: %17
} // end sil function '$s4file7ClosureCyACyyccfc'

// Closure.deinit
sil hidden [ossa] @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %6, %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [deinit] [static] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  destroy_addr %3 : $*@callee_guaranteed () -> () // id: %4
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = unchecked_ref_cast %0 : $Closure to $Builtin.NativeObject // user: %7
  %7 = unchecked_ownership_conversion %6 : $Builtin.NativeObject, @guaranteed to @owned // user: %8
  return %7 : $Builtin.NativeObject               // id: %8
} // end sil function '$s4file7ClosureCfd'

// Closure.__deallocating_deinit
sil hidden [ossa] @$s4file7ClosureCfD : $@convention(method) (@owned Closure) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  // function_ref Closure.deinit
  %2 = function_ref @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Closure                 // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Closure                        // id: %5
  end_lifetime %0 : $Closure                      // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Closure // user: %8
  dealloc_ref %7 : $Closure                       // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file7ClosureCfD'

// foo()
sil hidden [ossa] @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %629, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %628, %107, %92, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %13
  %8 = integer_literal $Builtin.IntLiteral, 0     // user: %11
  %9 = metatype $@thin Int.Type                   // user: %11
  // function_ref Int.init(_builtinIntegerLiteral:)
  %10 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %11
  %11 = apply %10(%8, %9) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %13
  // function_ref Number.__allocating_init(number:)
  %12 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %13
  %13 = apply %12(%11, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %627, %103, %88, %77, %68, %14
  debug_value %13 : $Number, let, name "number"   // id: %14
  %15 = integer_literal $Builtin.Word, 1          // user: %17
  // function_ref _allocateUninitializedArray<A>(_:)
  %16 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %17
  %17 = apply %16<Any>(%15) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %18
  (%18, %19) = destructure_tuple %17 : $(Array<Any>, Builtin.RawPointer) // users: %37, %34, %20
  %20 = pointer_to_address %19 : $Builtin.RawPointer to [strict] $*Any // user: %27
  %21 = string_literal utf8 "===== Did init"      // user: %26
  %22 = integer_literal $Builtin.Word, 14         // user: %26
  %23 = integer_literal $Builtin.Int1, -1         // user: %26
  %24 = metatype $@thin String.Type               // user: %26
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %25 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %26 = apply %25(%21, %22, %23, %24) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %27 = init_existential_addr %20 : $*Any, $String // user: %28
  store %26 to [init] %27 : $*String              // id: %28
  // function_ref default argument 1 of print(_:separator:terminator:)
  %29 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %30
  %30 = apply %29() : $@convention(thin) () -> @owned String // users: %36, %34
  // function_ref default argument 2 of print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %32
  %32 = apply %31() : $@convention(thin) () -> @owned String // users: %35, %34
  // function_ref print(_:separator:terminator:)
  %33 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %34
  %34 = apply %33(%18, %30, %32) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %32 : $String                     // id: %35
  destroy_value %30 : $String                     // id: %36
  destroy_value %18 : $Array<Any>                 // id: %37
  %38 = integer_literal $Builtin.Word, 1          // user: %40
  // function_ref _allocateUninitializedArray<A>(_:)
  %39 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %40
  %40 = apply %39<Any>(%38) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %41
  (%41, %42) = destructure_tuple %40 : $(Array<Any>, Builtin.RawPointer) // users: %60, %57, %43
  %43 = pointer_to_address %42 : $Builtin.RawPointer to [strict] $*Any // user: %50
  %44 = string_literal utf8 "===== Did hook"      // user: %49
  %45 = integer_literal $Builtin.Word, 14         // user: %49
  %46 = integer_literal $Builtin.Int1, -1         // user: %49
  %47 = metatype $@thin String.Type               // user: %49
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %48 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %49
  %49 = apply %48(%44, %45, %46, %47) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %51
  %50 = init_existential_addr %43 : $*Any, $String // user: %51
  store %49 to [init] %50 : $*String              // id: %51
  // function_ref default argument 1 of print(_:separator:terminator:)
  %52 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %53
  %53 = apply %52() : $@convention(thin) () -> @owned String // users: %59, %57
  // function_ref default argument 2 of print(_:separator:terminator:)
  %54 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %55
  %55 = apply %54() : $@convention(thin) () -> @owned String // users: %58, %57
  // function_ref print(_:separator:terminator:)
  %56 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %57
  %57 = apply %56(%41, %53, %55) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %55 : $String                     // id: %58
  destroy_value %53 : $String                     // id: %59
  destroy_value %41 : $Array<Any>                 // id: %60
  %61 = alloc_box ${ var Int }, var, name "value" // users: %626, %114, %83, %62
  %62 = project_box %61 : ${ var Int }, 0         // users: %463, %115, %84, %67
  %63 = integer_literal $Builtin.IntLiteral, 0    // user: %66
  %64 = metatype $@thin Int.Type                  // user: %66
  // function_ref Int.init(_builtinIntegerLiteral:)
  %65 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %66
  %66 = apply %65(%63, %64) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %67
  store %66 to [trivial] %62 : $*Int              // id: %67
  %68 = begin_borrow %13 : $Number                // users: %71, %69
  %69 = copy_value %68 : $Number                  // users: %76, %73, %70
  debug_value %69 : $Number, let, name "number"   // id: %70
  end_borrow %68 : $Number                        // id: %71
  // function_ref closure #2 in foo()
  %72 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %74
  %73 = copy_value %69 : $Number                  // user: %74
  %74 = partial_apply [callee_guaranteed] %72(%73) : $@convention(thin) (@guaranteed Number) -> () // users: %625, %246, %75
  debug_value %74 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %75
  destroy_value %69 : $Number                     // id: %76
  %77 = begin_borrow %13 : $Number                // users: %80, %78
  %78 = copy_value %77 : $Number                  // users: %87, %82, %79
  debug_value %78 : $Number, let, name "number"   // id: %79
  end_borrow %77 : $Number                        // id: %80
  // function_ref closure #3 in foo()
  %81 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %85
  %82 = copy_value %78 : $Number                  // user: %85
  %83 = copy_value %61 : ${ var Int }             // user: %85
  mark_function_escape %62 : $*Int                // id: %84
  %85 = partial_apply [callee_guaranteed] %81(%82, %83) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %624, %285, %86
  debug_value %85 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %86
  destroy_value %78 : $Number                     // id: %87
  %88 = begin_borrow %13 : $Number                // users: %91, %89
  %89 = copy_value %88 : $Number                  // users: %102, %97, %90
  debug_value %89 : $Number, let, name "number"   // id: %90
  end_borrow %88 : $Number                        // id: %91
  %92 = begin_borrow %5 : $Empty                  // users: %95, %93
  %93 = copy_value %92 : $Empty                   // users: %101, %98, %94
  debug_value %93 : $Empty, let, name "empty"     // id: %94
  end_borrow %92 : $Empty                         // id: %95
  // function_ref closure #4 in foo()
  %96 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %99
  %97 = copy_value %89 : $Number                  // user: %99
  %98 = copy_value %93 : $Empty                   // user: %99
  %99 = partial_apply [callee_guaranteed] %96(%97, %98) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %623, %324, %100
  debug_value %99 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %100
  destroy_value %93 : $Empty                      // id: %101
  destroy_value %89 : $Number                     // id: %102
  %103 = begin_borrow %13 : $Number               // users: %106, %104
  %104 = copy_value %103 : $Number                // users: %119, %112, %105
  debug_value %104 : $Number, let, name "number"  // id: %105
  end_borrow %103 : $Number                       // id: %106
  %107 = begin_borrow %5 : $Empty                 // users: %110, %108
  %108 = copy_value %107 : $Empty                 // users: %118, %113, %109
  debug_value %108 : $Empty, let, name "empty"    // id: %109
  end_borrow %107 : $Empty                        // id: %110
  // function_ref closure #5 in foo()
  %111 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %116
  %112 = copy_value %104 : $Number                // user: %116
  %113 = copy_value %108 : $Empty                 // user: %116
  %114 = copy_value %61 : ${ var Int }            // user: %116
  mark_function_escape %62 : $*Int                // id: %115
  %116 = partial_apply [callee_guaranteed] %111(%112, %113, %114) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %622, %363, %117
  debug_value %116 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %117
  destroy_value %108 : $Empty                     // id: %118
  destroy_value %104 : $Number                    // id: %119
  %120 = integer_literal $Builtin.Word, 1         // user: %122
  // function_ref _allocateUninitializedArray<A>(_:)
  %121 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %122
  %122 = apply %121<Any>(%120) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %123
  (%123, %124) = destructure_tuple %122 : $(Array<Any>, Builtin.RawPointer) // users: %142, %139, %125
  %125 = pointer_to_address %124 : $Builtin.RawPointer to [strict] $*Any // user: %132
  %126 = string_literal utf8 "===== Did init closures" // user: %131
  %127 = integer_literal $Builtin.Word, 23        // user: %131
  %128 = integer_literal $Builtin.Int1, -1        // user: %131
  %129 = metatype $@thin String.Type              // user: %131
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %130 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %131
  %131 = apply %130(%126, %127, %128, %129) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %133
  %132 = init_existential_addr %125 : $*Any, $String // user: %133
  store %131 to [init] %132 : $*String            // id: %133
  // function_ref default argument 1 of print(_:separator:terminator:)
  %134 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %135
  %135 = apply %134() : $@convention(thin) () -> @owned String // users: %141, %139
  // function_ref default argument 2 of print(_:separator:terminator:)
  %136 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %137
  %137 = apply %136() : $@convention(thin) () -> @owned String // users: %140, %139
  // function_ref print(_:separator:terminator:)
  %138 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %139
  %139 = apply %138(%123, %135, %137) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %137 : $String                    // id: %140
  destroy_value %135 : $String                    // id: %141
  destroy_value %123 : $Array<Any>                // id: %142
  %143 = alloc_box ${ var Array<Closure> }, var, name "storage" // users: %621, %144
  %144 = project_box %143 : ${ var Array<Closure> }, 0 // users: %493, %423, %402, %370, %331, %292, %253, %153, %148
  %145 = metatype $@thin Array<Closure>.Type      // user: %147
  // function_ref Array.init()
  %146 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %147
  %147 = apply %146<Closure>(%145) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %148
  store %147 to [init] %144 : $*Array<Closure>    // id: %148
  %149 = integer_literal $Builtin.IntLiteral, 100 // user: %152
  %150 = metatype $@thin Int.Type                 // user: %152
  // function_ref Int.init(_builtinIntegerLiteral:)
  %151 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %152
  %152 = apply %151(%149, %150) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %155
  %153 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %156, %155
  // function_ref Array.reserveCapacity(_:)
  %154 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %155
  %155 = apply %154<Closure>(%152, %153) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %153 : $*Array<Closure>              // id: %156
  %157 = integer_literal $Builtin.Word, 1         // user: %159
  // function_ref _allocateUninitializedArray<A>(_:)
  %158 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %159
  %159 = apply %158<Any>(%157) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %160
  (%160, %161) = destructure_tuple %159 : $(Array<Any>, Builtin.RawPointer) // users: %179, %176, %162
  %162 = pointer_to_address %161 : $Builtin.RawPointer to [strict] $*Any // user: %169
  %163 = string_literal utf8 "===== Did init array" // user: %168
  %164 = integer_literal $Builtin.Word, 20        // user: %168
  %165 = integer_literal $Builtin.Int1, -1        // user: %168
  %166 = metatype $@thin String.Type              // user: %168
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %167 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %168
  %168 = apply %167(%163, %164, %165, %166) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %170
  %169 = init_existential_addr %162 : $*Any, $String // user: %170
  store %168 to [init] %169 : $*String            // id: %170
  // function_ref default argument 1 of print(_:separator:terminator:)
  %171 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %172
  %172 = apply %171() : $@convention(thin) () -> @owned String // users: %178, %176
  // function_ref default argument 2 of print(_:separator:terminator:)
  %173 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %174
  %174 = apply %173() : $@convention(thin) () -> @owned String // users: %177, %176
  // function_ref print(_:separator:terminator:)
  %175 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %176
  %176 = apply %175(%160, %172, %174) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %174 : $String                    // id: %177
  destroy_value %172 : $String                    // id: %178
  destroy_value %160 : $Array<Any>                // id: %179
  %180 = alloc_box ${ var Bool }, var, name "run" // users: %620, %181
  %181 = project_box %180 : ${ var Bool }, 0      // users: %564, %188, %186
  %182 = integer_literal $Builtin.Int1, -1        // user: %185
  %183 = metatype $@thin Bool.Type                // user: %185
  // function_ref Bool.init(_builtinBooleanLiteral:)
  %184 = function_ref @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %185
  %185 = apply %184(%182, %183) : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %186
  store %185 to [trivial] %181 : $*Bool           // id: %186
  br bb1                                          // id: %187

bb1:                                              // Preds: bb25 bb0
  %188 = begin_access [read] [unknown] %181 : $*Bool // users: %189, %191
  %189 = struct_element_addr %188 : $*Bool, #Bool._value // user: %190
  %190 = load [trivial] %189 : $*Builtin.Int1     // user: %192
  end_access %188 : $*Bool                        // id: %191
  cond_br %190, bb2, bb26                         // id: %192

bb2:                                              // Preds: bb1
  %193 = integer_literal $Builtin.Word, 1         // user: %195
  // function_ref _allocateUninitializedArray<A>(_:)
  %194 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %195
  %195 = apply %194<Any>(%193) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %196
  (%196, %197) = destructure_tuple %195 : $(Array<Any>, Builtin.RawPointer) // users: %215, %212, %198
  %198 = pointer_to_address %197 : $Builtin.RawPointer to [strict] $*Any // user: %205
  %199 = string_literal utf8 "===== Ask"          // user: %204
  %200 = integer_literal $Builtin.Word, 9         // user: %204
  %201 = integer_literal $Builtin.Int1, -1        // user: %204
  %202 = metatype $@thin String.Type              // user: %204
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %203 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %204
  %204 = apply %203(%199, %200, %201, %202) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %206
  %205 = init_existential_addr %198 : $*Any, $String // user: %206
  store %204 to [init] %205 : $*String            // id: %206
  // function_ref default argument 1 of print(_:separator:terminator:)
  %207 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %208
  %208 = apply %207() : $@convention(thin) () -> @owned String // users: %214, %212
  // function_ref default argument 2 of print(_:separator:terminator:)
  %209 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %210
  %210 = apply %209() : $@convention(thin) () -> @owned String // users: %213, %212
  // function_ref print(_:separator:terminator:)
  %211 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %212
  %212 = apply %211(%196, %208, %210) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %210 : $String                    // id: %213
  destroy_value %208 : $String                    // id: %214
  destroy_value %196 : $Array<Any>                // id: %215
  // function_ref default argument 0 of readLine(strippingNewline:)
  %216 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %217
  %217 = apply %216() : $@convention(thin) () -> Bool // user: %219
  // function_ref readLine(strippingNewline:)
  %218 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %219
  %219 = apply %218(%217) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %595, %221, %220
  debug_value %219 : $Optional<String>, let, name "line" // id: %220
  %221 = begin_borrow %219 : $Optional<String>    // users: %593, %567, %537, %529, %470, %467, %435, %430, %378, %375, %339, %336, %300, %297, %261, %258, %222
  %222 = copy_value %221 : $Optional<String>      // users: %244, %260, %233, %223
  debug_value %222 : $Optional<String>, let, name "$match" // id: %223
  %224 = string_literal utf8 "push1"              // user: %229
  %225 = integer_literal $Builtin.Word, 5         // user: %229
  %226 = integer_literal $Builtin.Int1, -1        // user: %229
  %227 = metatype $@thin String.Type              // user: %229
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %228 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %229
  %229 = apply %228(%224, %225, %226, %227) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %230
  %230 = enum $Optional<String>, #Optional.some!enumelt, %229 : $String // user: %232
  %231 = alloc_stack $Optional<String>            // users: %241, %240, %237, %232
  store %230 to [init] %231 : $*Optional<String>  // id: %232
  %233 = begin_borrow %222 : $Optional<String>    // users: %239, %235
  %234 = alloc_stack $Optional<String>            // users: %238, %237, %235
  %235 = store_borrow %233 to %234 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %236 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %237
  %237 = apply %236<String?>(%231, %234) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %242
  dealloc_stack %234 : $*Optional<String>         // id: %238
  end_borrow %233 : $Optional<String>             // id: %239
  destroy_addr %231 : $*Optional<String>          // id: %240
  dealloc_stack %231 : $*Optional<String>         // id: %241
  %242 = struct_extract %237 : $Bool, #Bool._value // user: %243
  cond_br %242, bb3, bb4                          // id: %243

bb3:                                              // Preds: bb2
  destroy_value %222 : $Optional<String>          // id: %244
  %245 = metatype $@thick Closure.Type            // user: %249
  %246 = begin_borrow %74 : $@callee_guaranteed () -> () // users: %250, %247
  %247 = copy_value %246 : $@callee_guaranteed () -> () // user: %249
  // function_ref Closure.__allocating_init(_:)
  %248 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %249
  %249 = apply %248(%247, %245) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %252
  end_borrow %246 : $@callee_guaranteed () -> ()  // id: %250
  %251 = alloc_stack $Closure                     // users: %257, %255, %252
  store %249 to [init] %251 : $*Closure           // id: %252
  %253 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %256, %255
  // function_ref Array.append(_:)
  %254 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %255
  %255 = apply %254<Closure>(%251, %253) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %253 : $*Array<Closure>              // id: %256
  dealloc_stack %251 : $*Closure                  // id: %257
  end_borrow %221 : $Optional<String>             // id: %258
  br bb25                                         // id: %259

bb4:                                              // Preds: bb2
  destroy_value %222 : $Optional<String>          // id: %260
  %261 = copy_value %221 : $Optional<String>      // users: %283, %299, %272, %262
  debug_value %261 : $Optional<String>, let, name "$match" // id: %262
  %263 = string_literal utf8 "push1_1"            // user: %268
  %264 = integer_literal $Builtin.Word, 7         // user: %268
  %265 = integer_literal $Builtin.Int1, -1        // user: %268
  %266 = metatype $@thin String.Type              // user: %268
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %267 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %268
  %268 = apply %267(%263, %264, %265, %266) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %269
  %269 = enum $Optional<String>, #Optional.some!enumelt, %268 : $String // user: %271
  %270 = alloc_stack $Optional<String>            // users: %280, %279, %276, %271
  store %269 to [init] %270 : $*Optional<String>  // id: %271
  %272 = begin_borrow %261 : $Optional<String>    // users: %278, %274
  %273 = alloc_stack $Optional<String>            // users: %277, %276, %274
  %274 = store_borrow %272 to %273 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %275 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %276
  %276 = apply %275<String?>(%270, %273) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %281
  dealloc_stack %273 : $*Optional<String>         // id: %277
  end_borrow %272 : $Optional<String>             // id: %278
  destroy_addr %270 : $*Optional<String>          // id: %279
  dealloc_stack %270 : $*Optional<String>         // id: %280
  %281 = struct_extract %276 : $Bool, #Bool._value // user: %282
  cond_br %281, bb5, bb6                          // id: %282

bb5:                                              // Preds: bb4
  destroy_value %261 : $Optional<String>          // id: %283
  %284 = metatype $@thick Closure.Type            // user: %288
  %285 = begin_borrow %85 : $@callee_guaranteed () -> () // users: %289, %286
  %286 = copy_value %285 : $@callee_guaranteed () -> () // user: %288
  // function_ref Closure.__allocating_init(_:)
  %287 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %288
  %288 = apply %287(%286, %284) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %291
  end_borrow %285 : $@callee_guaranteed () -> ()  // id: %289
  %290 = alloc_stack $Closure                     // users: %296, %294, %291
  store %288 to [init] %290 : $*Closure           // id: %291
  %292 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %295, %294
  // function_ref Array.append(_:)
  %293 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %294
  %294 = apply %293<Closure>(%290, %292) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %292 : $*Array<Closure>              // id: %295
  dealloc_stack %290 : $*Closure                  // id: %296
  end_borrow %221 : $Optional<String>             // id: %297
  br bb25                                         // id: %298

bb6:                                              // Preds: bb4
  destroy_value %261 : $Optional<String>          // id: %299
  %300 = copy_value %221 : $Optional<String>      // users: %322, %338, %311, %301
  debug_value %300 : $Optional<String>, let, name "$match" // id: %301
  %302 = string_literal utf8 "push2"              // user: %307
  %303 = integer_literal $Builtin.Word, 5         // user: %307
  %304 = integer_literal $Builtin.Int1, -1        // user: %307
  %305 = metatype $@thin String.Type              // user: %307
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %306 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %307
  %307 = apply %306(%302, %303, %304, %305) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %308
  %308 = enum $Optional<String>, #Optional.some!enumelt, %307 : $String // user: %310
  %309 = alloc_stack $Optional<String>            // users: %319, %318, %315, %310
  store %308 to [init] %309 : $*Optional<String>  // id: %310
  %311 = begin_borrow %300 : $Optional<String>    // users: %317, %313
  %312 = alloc_stack $Optional<String>            // users: %316, %315, %313
  %313 = store_borrow %311 to %312 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %314 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %315
  %315 = apply %314<String?>(%309, %312) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %320
  dealloc_stack %312 : $*Optional<String>         // id: %316
  end_borrow %311 : $Optional<String>             // id: %317
  destroy_addr %309 : $*Optional<String>          // id: %318
  dealloc_stack %309 : $*Optional<String>         // id: %319
  %320 = struct_extract %315 : $Bool, #Bool._value // user: %321
  cond_br %320, bb7, bb8                          // id: %321

bb7:                                              // Preds: bb6
  destroy_value %300 : $Optional<String>          // id: %322
  %323 = metatype $@thick Closure.Type            // user: %327
  %324 = begin_borrow %99 : $@callee_guaranteed () -> () // users: %328, %325
  %325 = copy_value %324 : $@callee_guaranteed () -> () // user: %327
  // function_ref Closure.__allocating_init(_:)
  %326 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %327
  %327 = apply %326(%325, %323) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %330
  end_borrow %324 : $@callee_guaranteed () -> ()  // id: %328
  %329 = alloc_stack $Closure                     // users: %335, %333, %330
  store %327 to [init] %329 : $*Closure           // id: %330
  %331 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %334, %333
  // function_ref Array.append(_:)
  %332 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %333
  %333 = apply %332<Closure>(%329, %331) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %331 : $*Array<Closure>              // id: %334
  dealloc_stack %329 : $*Closure                  // id: %335
  end_borrow %221 : $Optional<String>             // id: %336
  br bb25                                         // id: %337

bb8:                                              // Preds: bb6
  destroy_value %300 : $Optional<String>          // id: %338
  %339 = copy_value %221 : $Optional<String>      // users: %361, %377, %350, %340
  debug_value %339 : $Optional<String>, let, name "$match" // id: %340
  %341 = string_literal utf8 "push2_1"            // user: %346
  %342 = integer_literal $Builtin.Word, 7         // user: %346
  %343 = integer_literal $Builtin.Int1, -1        // user: %346
  %344 = metatype $@thin String.Type              // user: %346
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %345 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %346
  %346 = apply %345(%341, %342, %343, %344) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %347
  %347 = enum $Optional<String>, #Optional.some!enumelt, %346 : $String // user: %349
  %348 = alloc_stack $Optional<String>            // users: %358, %357, %354, %349
  store %347 to [init] %348 : $*Optional<String>  // id: %349
  %350 = begin_borrow %339 : $Optional<String>    // users: %356, %352
  %351 = alloc_stack $Optional<String>            // users: %355, %354, %352
  %352 = store_borrow %350 to %351 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %353 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %354
  %354 = apply %353<String?>(%348, %351) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %359
  dealloc_stack %351 : $*Optional<String>         // id: %355
  end_borrow %350 : $Optional<String>             // id: %356
  destroy_addr %348 : $*Optional<String>          // id: %357
  dealloc_stack %348 : $*Optional<String>         // id: %358
  %359 = struct_extract %354 : $Bool, #Bool._value // user: %360
  cond_br %359, bb9, bb10                         // id: %360

bb9:                                              // Preds: bb8
  destroy_value %339 : $Optional<String>          // id: %361
  %362 = metatype $@thick Closure.Type            // user: %366
  %363 = begin_borrow %116 : $@callee_guaranteed () -> () // users: %367, %364
  %364 = copy_value %363 : $@callee_guaranteed () -> () // user: %366
  // function_ref Closure.__allocating_init(_:)
  %365 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %366
  %366 = apply %365(%364, %362) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %369
  end_borrow %363 : $@callee_guaranteed () -> ()  // id: %367
  %368 = alloc_stack $Closure                     // users: %374, %372, %369
  store %366 to [init] %368 : $*Closure           // id: %369
  %370 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %373, %372
  // function_ref Array.append(_:)
  %371 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %372
  %372 = apply %371<Closure>(%368, %370) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %370 : $*Array<Closure>              // id: %373
  dealloc_stack %368 : $*Closure                  // id: %374
  end_borrow %221 : $Optional<String>             // id: %375
  br bb25                                         // id: %376

bb10:                                             // Preds: bb8
  destroy_value %339 : $Optional<String>          // id: %377
  %378 = copy_value %221 : $Optional<String>      // users: %400, %433, %389, %379
  debug_value %378 : $Optional<String>, let, name "$match" // id: %379
  %380 = string_literal utf8 "pop"                // user: %385
  %381 = integer_literal $Builtin.Word, 3         // user: %385
  %382 = integer_literal $Builtin.Int1, -1        // user: %385
  %383 = metatype $@thin String.Type              // user: %385
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %384 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %385
  %385 = apply %384(%380, %381, %382, %383) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %386
  %386 = enum $Optional<String>, #Optional.some!enumelt, %385 : $String // user: %388
  %387 = alloc_stack $Optional<String>            // users: %397, %396, %393, %388
  store %386 to [init] %387 : $*Optional<String>  // id: %388
  %389 = begin_borrow %378 : $Optional<String>    // users: %395, %391
  %390 = alloc_stack $Optional<String>            // users: %394, %393, %391
  %391 = store_borrow %389 to %390 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %392 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %393
  %393 = apply %392<String?>(%387, %390) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %398
  dealloc_stack %390 : $*Optional<String>         // id: %394
  end_borrow %389 : $Optional<String>             // id: %395
  destroy_addr %387 : $*Optional<String>          // id: %396
  dealloc_stack %387 : $*Optional<String>         // id: %397
  %398 = struct_extract %393 : $Bool, #Bool._value // user: %399
  cond_br %398, bb11, bb14                        // id: %399

bb11:                                             // Preds: bb10
  destroy_value %378 : $Optional<String>          // id: %400
  %401 = metatype $@thin Bool.Type                // user: %417
  %402 = begin_access [read] [unknown] %144 : $*Array<Closure> // users: %404, %403
  %403 = load [copy] %402 : $*Array<Closure>      // users: %415, %405
  end_access %402 : $*Array<Closure>              // id: %404
  %405 = begin_borrow %403 : $Array<Closure>      // users: %414, %407
  %406 = alloc_stack $Array<Closure>              // users: %419, %408, %407
  %407 = store_borrow %405 to %406 : $*Array<Closure>
  %408 = load_borrow %406 : $*Array<Closure>      // users: %418, %410
  %409 = alloc_stack $Array<Closure>              // users: %413, %412, %410
  %410 = store_borrow %408 to %409 : $*Array<Closure>
  // function_ref Collection.isEmpty.getter
  %411 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %412
  %412 = apply %411<[Closure]>(%409) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %417
  dealloc_stack %409 : $*Array<Closure>           // id: %413
  end_borrow %405 : $Array<Closure>               // id: %414
  destroy_value %403 : $Array<Closure>            // id: %415
  // function_ref static Bool.! prefix(_:)
  %416 = function_ref @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool // user: %417
  %417 = apply %416(%412, %401) : $@convention(method) (Bool, @thin Bool.Type) -> Bool // user: %420
  end_borrow %408 : $Array<Closure>               // id: %418
  dealloc_stack %406 : $*Array<Closure>           // id: %419
  %420 = struct_extract %417 : $Bool, #Bool._value // user: %421
  cond_br %420, bb12, bb13                        // id: %421

bb12:                                             // Preds: bb11
  %422 = alloc_stack $Closure                     // users: %429, %427, %425
  %423 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %426, %425
  // function_ref RangeReplaceableCollection<>.removeLast()
  %424 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %425
  %425 = apply %424<[Closure]>(%422, %423) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %423 : $*Array<Closure>              // id: %426
  %427 = load [take] %422 : $*Closure             // user: %428
  destroy_value %427 : $Closure                   // id: %428
  dealloc_stack %422 : $*Closure                  // id: %429
  end_borrow %221 : $Optional<String>             // id: %430
  br bb25                                         // id: %431

bb13:                                             // Preds: bb11
  br bb15                                         // id: %432

bb14:                                             // Preds: bb10
  destroy_value %378 : $Optional<String>          // id: %433
  br bb15                                         // id: %434

bb15:                                             // Preds: bb13 bb14
  %435 = copy_value %221 : $Optional<String>      // users: %457, %469, %446, %436
  debug_value %435 : $Optional<String>, let, name "$match" // id: %436
  %437 = string_literal utf8 "inc"                // user: %442
  %438 = integer_literal $Builtin.Word, 3         // user: %442
  %439 = integer_literal $Builtin.Int1, -1        // user: %442
  %440 = metatype $@thin String.Type              // user: %442
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %441 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %442
  %442 = apply %441(%437, %438, %439, %440) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %443
  %443 = enum $Optional<String>, #Optional.some!enumelt, %442 : $String // user: %445
  %444 = alloc_stack $Optional<String>            // users: %454, %453, %450, %445
  store %443 to [init] %444 : $*Optional<String>  // id: %445
  %446 = begin_borrow %435 : $Optional<String>    // users: %452, %448
  %447 = alloc_stack $Optional<String>            // users: %451, %450, %448
  %448 = store_borrow %446 to %447 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %449 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %450
  %450 = apply %449<String?>(%444, %447) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %455
  dealloc_stack %447 : $*Optional<String>         // id: %451
  end_borrow %446 : $Optional<String>             // id: %452
  destroy_addr %444 : $*Optional<String>          // id: %453
  dealloc_stack %444 : $*Optional<String>         // id: %454
  %455 = struct_extract %450 : $Bool, #Bool._value // user: %456
  cond_br %455, bb16, bb17                        // id: %456

bb16:                                             // Preds: bb15
  destroy_value %435 : $Optional<String>          // id: %457
  %458 = metatype $@thin Int.Type                 // user: %465
  %459 = integer_literal $Builtin.IntLiteral, 1   // user: %462
  %460 = metatype $@thin Int.Type                 // user: %462
  // function_ref Int.init(_builtinIntegerLiteral:)
  %461 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %462
  %462 = apply %461(%459, %460) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %465
  %463 = begin_access [modify] [unknown] %62 : $*Int // users: %466, %465
  // function_ref static Int.+= infix(_:_:)
  %464 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %465
  %465 = apply %464(%463, %462, %458) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %463 : $*Int                         // id: %466
  end_borrow %221 : $Optional<String>             // id: %467
  br bb25                                         // id: %468

bb17:                                             // Preds: bb15
  destroy_value %435 : $Optional<String>          // id: %469
  %470 = copy_value %221 : $Optional<String>      // users: %492, %536, %481, %471
  debug_value %470 : $Optional<String>, let, name "$match" // id: %471
  %472 = string_literal utf8 "exec"               // user: %477
  %473 = integer_literal $Builtin.Word, 4         // user: %477
  %474 = integer_literal $Builtin.Int1, -1        // user: %477
  %475 = metatype $@thin String.Type              // user: %477
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %476 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %477
  %477 = apply %476(%472, %473, %474, %475) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %478
  %478 = enum $Optional<String>, #Optional.some!enumelt, %477 : $String // user: %480
  %479 = alloc_stack $Optional<String>            // users: %489, %488, %485, %480
  store %478 to [init] %479 : $*Optional<String>  // id: %480
  %481 = begin_borrow %470 : $Optional<String>    // users: %487, %483
  %482 = alloc_stack $Optional<String>            // users: %486, %485, %483
  %483 = store_borrow %481 to %482 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %484 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %485
  %485 = apply %484<String?>(%479, %482) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %490
  dealloc_stack %482 : $*Optional<String>         // id: %486
  end_borrow %481 : $Optional<String>             // id: %487
  destroy_addr %479 : $*Optional<String>          // id: %488
  dealloc_stack %479 : $*Optional<String>         // id: %489
  %490 = struct_extract %485 : $Bool, #Bool._value // user: %491
  cond_br %490, bb18, bb22                        // id: %491

bb18:                                             // Preds: bb17
  destroy_value %470 : $Optional<String>          // id: %492
  %493 = begin_access [read] [unknown] %144 : $*Array<Closure> // users: %495, %494
  %494 = load [copy] %493 : $*Array<Closure>      // users: %508, %496
  end_access %493 : $*Array<Closure>              // id: %495
  %496 = begin_borrow %494 : $Array<Closure>      // users: %507, %498
  %497 = alloc_stack $Array<Closure>              // users: %526, %533, %499, %498
  %498 = store_borrow %496 to %497 : $*Array<Closure>
  %499 = load_borrow %497 : $*Array<Closure>      // users: %525, %532, %502
  %500 = alloc_stack $Optional<Closure>           // users: %524, %531, %506, %504
  %501 = alloc_stack $Array<Closure>              // users: %505, %504, %502
  %502 = store_borrow %499 to %501 : $*Array<Closure>
  // function_ref BidirectionalCollection.last.getter
  %503 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %504
  %504 = apply %503<[Closure]>(%500, %501) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %501 : $*Array<Closure>           // id: %505
  %506 = load [take] %500 : $*Optional<Closure>   // user: %509
  end_borrow %496 : $Array<Closure>               // id: %507
  destroy_value %494 : $Array<Closure>            // id: %508
  switch_enum %506 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %509

// %510                                           // users: %517, %511
bb19(%510 : @owned $Closure):                     // Preds: bb18
  %511 = begin_borrow %510 : $Closure             // users: %516, %512
  %512 = ref_element_addr %511 : $Closure, #Closure.closure // user: %513
  %513 = begin_access [read] [dynamic] %512 : $*@callee_guaranteed () -> () // users: %515, %514
  %514 = load [copy] %513 : $*@callee_guaranteed () -> () // users: %523, %518
  end_access %513 : $*@callee_guaranteed () -> () // id: %515
  end_borrow %511 : $Closure                      // id: %516
  destroy_value %510 : $Closure                   // id: %517
  %518 = begin_borrow %514 : $@callee_guaranteed () -> () // users: %520, %519
  %519 = apply %518() : $@callee_guaranteed () -> ()
  end_borrow %518 : $@callee_guaranteed () -> ()  // id: %520
  %521 = tuple ()                                 // user: %522
  %522 = enum $Optional<()>, #Optional.some!enumelt, %521 : $() // user: %527
  destroy_value %514 : $@callee_guaranteed () -> () // id: %523
  dealloc_stack %500 : $*Optional<Closure>        // id: %524
  end_borrow %499 : $Array<Closure>               // id: %525
  dealloc_stack %497 : $*Array<Closure>           // id: %526
  br bb20(%522 : $Optional<()>)                   // id: %527

bb20(%528 : $Optional<()>):                       // Preds: bb21 bb19
  end_borrow %221 : $Optional<String>             // id: %529
  br bb25                                         // id: %530

bb21:                                             // Preds: bb18
  dealloc_stack %500 : $*Optional<Closure>        // id: %531
  end_borrow %499 : $Array<Closure>               // id: %532
  dealloc_stack %497 : $*Array<Closure>           // id: %533
  %534 = enum $Optional<()>, #Optional.none!enumelt // user: %535
  br bb20(%534 : $Optional<()>)                   // id: %535

bb22:                                             // Preds: bb17
  destroy_value %470 : $Optional<String>          // id: %536
  %537 = copy_value %221 : $Optional<String>      // users: %559, %569, %548, %538
  debug_value %537 : $Optional<String>, let, name "$match" // id: %538
  %539 = string_literal utf8 "exit"               // user: %544
  %540 = integer_literal $Builtin.Word, 4         // user: %544
  %541 = integer_literal $Builtin.Int1, -1        // user: %544
  %542 = metatype $@thin String.Type              // user: %544
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %543 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %544
  %544 = apply %543(%539, %540, %541, %542) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %545
  %545 = enum $Optional<String>, #Optional.some!enumelt, %544 : $String // user: %547
  %546 = alloc_stack $Optional<String>            // users: %556, %555, %552, %547
  store %545 to [init] %546 : $*Optional<String>  // id: %547
  %548 = begin_borrow %537 : $Optional<String>    // users: %554, %550
  %549 = alloc_stack $Optional<String>            // users: %553, %552, %550
  %550 = store_borrow %548 to %549 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %551 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %552
  %552 = apply %551<String?>(%546, %549) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %557
  dealloc_stack %549 : $*Optional<String>         // id: %553
  end_borrow %548 : $Optional<String>             // id: %554
  destroy_addr %546 : $*Optional<String>          // id: %555
  dealloc_stack %546 : $*Optional<String>         // id: %556
  %557 = struct_extract %552 : $Bool, #Bool._value // user: %558
  cond_br %557, bb23, bb24                        // id: %558

bb23:                                             // Preds: bb22
  destroy_value %537 : $Optional<String>          // id: %559
  %560 = integer_literal $Builtin.Int1, 0         // user: %563
  %561 = metatype $@thin Bool.Type                // user: %563
  // function_ref Bool.init(_builtinBooleanLiteral:)
  %562 = function_ref @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %563
  %563 = apply %562(%560, %561) : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %565
  %564 = begin_access [modify] [unknown] %181 : $*Bool // users: %566, %565
  assign %563 to %564 : $*Bool                    // id: %565
  end_access %564 : $*Bool                        // id: %566
  end_borrow %221 : $Optional<String>             // id: %567
  br bb25                                         // id: %568

bb24:                                             // Preds: bb22
  destroy_value %537 : $Optional<String>          // id: %569
  %570 = integer_literal $Builtin.Word, 1         // user: %572
  // function_ref _allocateUninitializedArray<A>(_:)
  %571 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %572
  %572 = apply %571<Any>(%570) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %573
  (%573, %574) = destructure_tuple %572 : $(Array<Any>, Builtin.RawPointer) // users: %592, %589, %575
  %575 = pointer_to_address %574 : $Builtin.RawPointer to [strict] $*Any // user: %582
  %576 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %581
  %577 = integer_literal $Builtin.Word, 44        // user: %581
  %578 = integer_literal $Builtin.Int1, 0         // user: %581
  %579 = metatype $@thin String.Type              // user: %581
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %580 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %581
  %581 = apply %580(%576, %577, %578, %579) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %583
  %582 = init_existential_addr %575 : $*Any, $String // user: %583
  store %581 to [init] %582 : $*String            // id: %583
  // function_ref default argument 1 of print(_:separator:terminator:)
  %584 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %585
  %585 = apply %584() : $@convention(thin) () -> @owned String // users: %591, %589
  // function_ref default argument 2 of print(_:separator:terminator:)
  %586 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %587
  %587 = apply %586() : $@convention(thin) () -> @owned String // users: %590, %589
  // function_ref print(_:separator:terminator:)
  %588 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %589
  %589 = apply %588(%573, %585, %587) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %587 : $String                    // id: %590
  destroy_value %585 : $String                    // id: %591
  destroy_value %573 : $Array<Any>                // id: %592
  end_borrow %221 : $Optional<String>             // id: %593
  br bb25                                         // id: %594

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  destroy_value %219 : $Optional<String>          // id: %595
  br bb1                                          // id: %596

bb26:                                             // Preds: bb1
  %597 = integer_literal $Builtin.Word, 1         // user: %599
  // function_ref _allocateUninitializedArray<A>(_:)
  %598 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %599
  %599 = apply %598<Any>(%597) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %600
  (%600, %601) = destructure_tuple %599 : $(Array<Any>, Builtin.RawPointer) // users: %619, %616, %602
  %602 = pointer_to_address %601 : $Builtin.RawPointer to [strict] $*Any // user: %609
  %603 = string_literal utf8 "===== will end"     // user: %608
  %604 = integer_literal $Builtin.Word, 14        // user: %608
  %605 = integer_literal $Builtin.Int1, -1        // user: %608
  %606 = metatype $@thin String.Type              // user: %608
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %607 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %608
  %608 = apply %607(%603, %604, %605, %606) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %610
  %609 = init_existential_addr %602 : $*Any, $String // user: %610
  store %608 to [init] %609 : $*String            // id: %610
  // function_ref default argument 1 of print(_:separator:terminator:)
  %611 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %612
  %612 = apply %611() : $@convention(thin) () -> @owned String // users: %618, %616
  // function_ref default argument 2 of print(_:separator:terminator:)
  %613 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %614
  %614 = apply %613() : $@convention(thin) () -> @owned String // users: %617, %616
  // function_ref print(_:separator:terminator:)
  %615 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %616
  %616 = apply %615(%600, %612, %614) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %614 : $String                    // id: %617
  destroy_value %612 : $String                    // id: %618
  destroy_value %600 : $Array<Any>                // id: %619
  destroy_value %180 : ${ var Bool }              // id: %620
  destroy_value %143 : ${ var Array<Closure> }    // id: %621
  destroy_value %116 : $@callee_guaranteed () -> () // id: %622
  destroy_value %99 : $@callee_guaranteed () -> () // id: %623
  destroy_value %85 : $@callee_guaranteed () -> () // id: %624
  destroy_value %74 : $@callee_guaranteed () -> () // id: %625
  destroy_value %61 : ${ var Int }                // id: %626
  destroy_value %13 : $Number                     // id: %627
  destroy_value %5 : $Empty                       // id: %628
  destroy_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %629
  %630 = tuple ()                                 // user: %631
  return %630 : $()                               // id: %631
} // end sil function '$s4file3fooyyF'

// closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () {
// %0 "name"                                      // users: %3, %1
bb0(%0 : @guaranteed $String):
  debug_value %0 : $String, let, name "name", argno 1 // id: %1
  // function_ref closure #1 in closure #1 in foo()
  %2 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %4
  %3 = copy_value %0 : $String                    // user: %4
  %4 = partial_apply [callee_guaranteed] %2(%3) : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %5
  return %4 : $@callee_guaranteed (Int, Int, Int) -> () // id: %5
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_'

// closure #1 in closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %58, %4
// %1 "weak"                                      // users: %76, %5
// %2 "unowned"                                   // users: %94, %6
// %3 "name"                                      // users: %40, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : @guaranteed $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %11
  (%11, %12) = destructure_tuple %10 : $(Array<Any>, Builtin.RawPointer) // users: %126, %123, %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %116
  %14 = alloc_box ${ var DefaultStringInterpolation }, var, name "$interpolation" // users: %112, %15
  %15 = project_box %14 : ${ var DefaultStringInterpolation }, 0 // users: %111, %106, %95, %88, %77, %70, %59, %52, %41, %34, %27
  %16 = integer_literal $Builtin.IntLiteral, 39   // user: %19
  %17 = metatype $@thin Int.Type                  // user: %19
  // function_ref Int.init(_builtinIntegerLiteral:)
  %18 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %19
  %19 = apply %18(%16, %17) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %26
  %20 = integer_literal $Builtin.IntLiteral, 4    // user: %23
  %21 = metatype $@thin Int.Type                  // user: %23
  // function_ref Int.init(_builtinIntegerLiteral:)
  %22 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %23
  %23 = apply %22(%20, %21) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %26
  %24 = metatype $@thin DefaultStringInterpolation.Type // user: %26
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %25 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %26
  %26 = apply %25(%19, %23, %24) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %27
  store %26 to [init] %15 : $*DefaultStringInterpolation // id: %27
  %28 = string_literal utf8 "Name: "              // user: %33
  %29 = integer_literal $Builtin.Word, 6          // user: %33
  %30 = integer_literal $Builtin.Int1, -1         // user: %33
  %31 = metatype $@thin String.Type               // user: %33
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %32 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %33
  %33 = apply %32(%28, %29, %30, %31) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %38, %36
  %34 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %37, %36
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %35 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %36
  %36 = apply %35(%33, %34) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %34 : $*DefaultStringInterpolation   // id: %37
  destroy_value %33 : $String                     // id: %38
  %39 = alloc_stack $String                       // users: %45, %43, %40
  %40 = store_borrow %3 to %39 : $*String
  %41 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %44, %43
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %42 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %43
  %43 = apply %42<String>(%39, %41) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %41 : $*DefaultStringInterpolation   // id: %44
  dealloc_stack %39 : $*String                    // id: %45
  %46 = string_literal utf8 "; Strong: ("         // user: %51
  %47 = integer_literal $Builtin.Word, 11         // user: %51
  %48 = integer_literal $Builtin.Int1, -1         // user: %51
  %49 = metatype $@thin String.Type               // user: %51
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %50 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %51
  %51 = apply %50(%46, %47, %48, %49) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %56, %54
  %52 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %55, %54
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %53 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %54
  %54 = apply %53(%51, %52) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %52 : $*DefaultStringInterpolation   // id: %55
  destroy_value %51 : $String                     // id: %56
  %57 = alloc_stack $Int                          // users: %63, %61, %58
  store %0 to [trivial] %57 : $*Int               // id: %58
  %59 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %62, %61
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %60 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %61
  %61 = apply %60<Int>(%57, %59) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %59 : $*DefaultStringInterpolation   // id: %62
  dealloc_stack %57 : $*Int                       // id: %63
  %64 = string_literal utf8 "); Weak: ("          // user: %69
  %65 = integer_literal $Builtin.Word, 10         // user: %69
  %66 = integer_literal $Builtin.Int1, -1         // user: %69
  %67 = metatype $@thin String.Type               // user: %69
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %68 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %69
  %69 = apply %68(%64, %65, %66, %67) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %74, %72
  %70 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %73, %72
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %71 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %72
  %72 = apply %71(%69, %70) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %70 : $*DefaultStringInterpolation   // id: %73
  destroy_value %69 : $String                     // id: %74
  %75 = alloc_stack $Int                          // users: %81, %79, %76
  store %1 to [trivial] %75 : $*Int               // id: %76
  %77 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %80, %79
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %78 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %79
  %79 = apply %78<Int>(%75, %77) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %77 : $*DefaultStringInterpolation   // id: %80
  dealloc_stack %75 : $*Int                       // id: %81
  %82 = string_literal utf8 "); Unowned("         // user: %87
  %83 = integer_literal $Builtin.Word, 11         // user: %87
  %84 = integer_literal $Builtin.Int1, -1         // user: %87
  %85 = metatype $@thin String.Type               // user: %87
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %86 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %87
  %87 = apply %86(%82, %83, %84, %85) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %92, %90
  %88 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %91, %90
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %89 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %90
  %90 = apply %89(%87, %88) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %88 : $*DefaultStringInterpolation   // id: %91
  destroy_value %87 : $String                     // id: %92
  %93 = alloc_stack $Int                          // users: %99, %97, %94
  store %2 to [trivial] %93 : $*Int               // id: %94
  %95 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %98, %97
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %96 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %97
  %97 = apply %96<Int>(%93, %95) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %95 : $*DefaultStringInterpolation   // id: %98
  dealloc_stack %93 : $*Int                       // id: %99
  %100 = string_literal utf8 ")"                  // user: %105
  %101 = integer_literal $Builtin.Word, 1         // user: %105
  %102 = integer_literal $Builtin.Int1, -1        // user: %105
  %103 = metatype $@thin String.Type              // user: %105
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %104 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %105
  %105 = apply %104(%100, %101, %102, %103) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %110, %108
  %106 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %109, %108
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %107 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %108
  %108 = apply %107(%105, %106) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %106 : $*DefaultStringInterpolation  // id: %109
  destroy_value %105 : $String                    // id: %110
  %111 = load [copy] %15 : $*DefaultStringInterpolation // user: %115
  destroy_value %14 : ${ var DefaultStringInterpolation } // id: %112
  %113 = metatype $@thin String.Type              // user: %115
  // function_ref String.init(stringInterpolation:)
  %114 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %115
  %115 = apply %114(%111, %113) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %117
  %116 = init_existential_addr %13 : $*Any, $String // user: %117
  store %115 to [init] %116 : $*String            // id: %117
  // function_ref default argument 1 of print(_:separator:terminator:)
  %118 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %119
  %119 = apply %118() : $@convention(thin) () -> @owned String // users: %125, %123
  // function_ref default argument 2 of print(_:separator:terminator:)
  %120 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %121
  %121 = apply %120() : $@convention(thin) () -> @owned String // users: %124, %123
  // function_ref print(_:separator:terminator:)
  %122 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %123
  %123 = apply %122(%11, %119, %121) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %121 : $String                    // id: %124
  destroy_value %119 : $String                    // id: %125
  destroy_value %11 : $Array<Any>                 // id: %126
  %127 = tuple ()                                 // user: %128
  return %127 : $()                               // id: %128
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] [_semantics "array.uninitialized_intrinsic"] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer)

// Int.init(_builtinIntegerLiteral:)
sil [transparent] [serialized] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int

// DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
sil [serialized] @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// DefaultStringInterpolation.appendLiteral(_:)
sil [serialized] @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// String.init(stringInterpolation:)
sil [serialized] [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String

// default argument 1 of print(_:separator:terminator:)
sil hidden_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String

// default argument 2 of print(_:separator:terminator:)
sil hidden_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String

// print(_:separator:terminator:)
sil @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()

// closure #2 in foo()
sil private [ossa] @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () {
// %0 "number"                                    // users: %7, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %1
  %2 = metatype $@thin Int.Type                   // user: %10
  %3 = integer_literal $Builtin.IntLiteral, 1     // user: %6
  %4 = metatype $@thin Int.Type                   // user: %6
  // function_ref Int.init(_builtinIntegerLiteral:)
  %5 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %6
  %6 = apply %5(%3, %4) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %10
  %7 = ref_element_addr %0 : $Number, #Number.number // user: %8
  %8 = begin_access [modify] [dynamic] %7 : $*Int // users: %11, %10
  // function_ref static Int.+= infix(_:_:)
  %9 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %10
  %10 = apply %9(%8, %6, %2) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %8 : $*Int                           // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file3fooyyFyycfU0_'

// static Int.+= infix(_:_:)
sil [transparent] [serialized] @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()

// closure #3 in foo()
sil private [ossa] @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %10, %2
// %1 "value"                                     // user: %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %46, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = metatype $@thin Int.Type                   // user: %13
  %6 = integer_literal $Builtin.IntLiteral, 1     // user: %9
  %7 = metatype $@thin Int.Type                   // user: %9
  // function_ref Int.init(_builtinIntegerLiteral:)
  %8 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %9
  %9 = apply %8(%6, %7) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %13
  %10 = ref_element_addr %0 : $Number, #Number.number // user: %11
  %11 = begin_access [modify] [dynamic] %10 : $*Int // users: %14, %13
  // function_ref static Int.+= infix(_:_:)
  %12 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %13
  %13 = apply %12(%11, %9, %5) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %11 : $*Int                          // id: %14
  %15 = integer_literal $Builtin.Word, 1          // user: %17
  // function_ref _allocateUninitializedArray<A>(_:)
  %16 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %17
  %17 = apply %16<Any>(%15) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %18
  (%18, %19) = destructure_tuple %17 : $(Array<Any>, Builtin.RawPointer) // users: %82, %79, %20
  %20 = pointer_to_address %19 : $Builtin.RawPointer to [strict] $*Any // user: %72
  %21 = alloc_box ${ var DefaultStringInterpolation }, var, name "$interpolation" // users: %68, %22
  %22 = project_box %21 : ${ var DefaultStringInterpolation }, 0 // users: %67, %62, %51, %41, %34
  %23 = integer_literal $Builtin.IntLiteral, 3    // user: %26
  %24 = metatype $@thin Int.Type                  // user: %26
  // function_ref Int.init(_builtinIntegerLiteral:)
  %25 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %26
  %26 = apply %25(%23, %24) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %33
  %27 = integer_literal $Builtin.IntLiteral, 1    // user: %30
  %28 = metatype $@thin Int.Type                  // user: %30
  // function_ref Int.init(_builtinIntegerLiteral:)
  %29 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %30
  %30 = apply %29(%27, %28) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %33
  %31 = metatype $@thin DefaultStringInterpolation.Type // user: %33
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %32 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %33
  %33 = apply %32(%26, %30, %31) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %34
  store %33 to [init] %22 : $*DefaultStringInterpolation // id: %34
  %35 = string_literal utf8 "v: "                 // user: %40
  %36 = integer_literal $Builtin.Word, 3          // user: %40
  %37 = integer_literal $Builtin.Int1, -1         // user: %40
  %38 = metatype $@thin String.Type               // user: %40
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %39 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %40
  %40 = apply %39(%35, %36, %37, %38) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %45, %43
  %41 = begin_access [modify] [unknown] %22 : $*DefaultStringInterpolation // users: %44, %43
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %42 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %43
  %43 = apply %42(%40, %41) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %41 : $*DefaultStringInterpolation   // id: %44
  destroy_value %40 : $String                     // id: %45
  %46 = begin_access [read] [unknown] %3 : $*Int  // users: %48, %47
  %47 = load [trivial] %46 : $*Int                // user: %50
  end_access %46 : $*Int                          // id: %48
  %49 = alloc_stack $Int                          // users: %55, %53, %50
  store %47 to [trivial] %49 : $*Int              // id: %50
  %51 = begin_access [modify] [unknown] %22 : $*DefaultStringInterpolation // users: %54, %53
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %52 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %53
  %53 = apply %52<Int>(%49, %51) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %51 : $*DefaultStringInterpolation   // id: %54
  dealloc_stack %49 : $*Int                       // id: %55
  %56 = string_literal utf8 ""                    // user: %61
  %57 = integer_literal $Builtin.Word, 0          // user: %61
  %58 = integer_literal $Builtin.Int1, -1         // user: %61
  %59 = metatype $@thin String.Type               // user: %61
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %60 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %61
  %61 = apply %60(%56, %57, %58, %59) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %66, %64
  %62 = begin_access [modify] [unknown] %22 : $*DefaultStringInterpolation // users: %65, %64
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %63 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %64
  %64 = apply %63(%61, %62) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %62 : $*DefaultStringInterpolation   // id: %65
  destroy_value %61 : $String                     // id: %66
  %67 = load [copy] %22 : $*DefaultStringInterpolation // user: %71
  destroy_value %21 : ${ var DefaultStringInterpolation } // id: %68
  %69 = metatype $@thin String.Type               // user: %71
  // function_ref String.init(stringInterpolation:)
  %70 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %71
  %71 = apply %70(%67, %69) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %73
  %72 = init_existential_addr %20 : $*Any, $String // user: %73
  store %71 to [init] %72 : $*String              // id: %73
  // function_ref default argument 1 of print(_:separator:terminator:)
  %74 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %75
  %75 = apply %74() : $@convention(thin) () -> @owned String // users: %81, %79
  // function_ref default argument 2 of print(_:separator:terminator:)
  %76 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %77
  %77 = apply %76() : $@convention(thin) () -> @owned String // users: %80, %79
  // function_ref print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %79
  %79 = apply %78(%18, %75, %77) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %77 : $String                     // id: %80
  destroy_value %75 : $String                     // id: %81
  destroy_value %18 : $Array<Any>                 // id: %82
  %83 = tuple ()                                  // user: %84
  return %83 : $()                                // id: %84
} // end sil function '$s4file3fooyyFyycfU1_'

// closure #4 in foo()
sil private [ossa] @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () {
// %0 "number"                                    // users: %9, %2
// %1 "empty"                                     // users: %15, %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %3
  %4 = metatype $@thin Int.Type                   // user: %12
  %5 = integer_literal $Builtin.IntLiteral, 1     // user: %8
  %6 = metatype $@thin Int.Type                   // user: %8
  // function_ref Int.init(_builtinIntegerLiteral:)
  %7 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %8
  %8 = apply %7(%5, %6) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %12
  %9 = ref_element_addr %0 : $Number, #Number.number // user: %10
  %10 = begin_access [modify] [dynamic] %9 : $*Int // users: %13, %12
  // function_ref static Int.+= infix(_:_:)
  %11 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %12
  %12 = apply %11(%10, %8, %4) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %10 : $*Int                          // id: %13
  // function_ref Empty.foo()
  %14 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %15
  %15 = apply %14(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %16 = tuple ()                                  // user: %17
  return %16 : $()                                // id: %17
} // end sil function '$s4file3fooyyFyycfU2_'

// closure #5 in foo()
sil private [ossa] @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %12, %3
// %1 "empty"                                     // users: %18, %4
// %2 "value"                                     // user: %5
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty, %2 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %50, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = metatype $@thin Int.Type                   // user: %15
  %8 = integer_literal $Builtin.IntLiteral, 1     // user: %11
  %9 = metatype $@thin Int.Type                   // user: %11
  // function_ref Int.init(_builtinIntegerLiteral:)
  %10 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %11
  %11 = apply %10(%8, %9) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %15
  %12 = ref_element_addr %0 : $Number, #Number.number // user: %13
  %13 = begin_access [modify] [dynamic] %12 : $*Int // users: %16, %15
  // function_ref static Int.+= infix(_:_:)
  %14 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %15
  %15 = apply %14(%13, %11, %7) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %13 : $*Int                          // id: %16
  // function_ref Empty.foo()
  %17 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %18
  %18 = apply %17(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %19 = integer_literal $Builtin.Word, 1          // user: %21
  // function_ref _allocateUninitializedArray<A>(_:)
  %20 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %21
  %21 = apply %20<Any>(%19) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %22
  (%22, %23) = destructure_tuple %21 : $(Array<Any>, Builtin.RawPointer) // users: %86, %83, %24
  %24 = pointer_to_address %23 : $Builtin.RawPointer to [strict] $*Any // user: %76
  %25 = alloc_box ${ var DefaultStringInterpolation }, var, name "$interpolation" // users: %72, %26
  %26 = project_box %25 : ${ var DefaultStringInterpolation }, 0 // users: %71, %66, %55, %45, %38
  %27 = integer_literal $Builtin.IntLiteral, 3    // user: %30
  %28 = metatype $@thin Int.Type                  // user: %30
  // function_ref Int.init(_builtinIntegerLiteral:)
  %29 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %30
  %30 = apply %29(%27, %28) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %37
  %31 = integer_literal $Builtin.IntLiteral, 1    // user: %34
  %32 = metatype $@thin Int.Type                  // user: %34
  // function_ref Int.init(_builtinIntegerLiteral:)
  %33 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %34
  %34 = apply %33(%31, %32) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %37
  %35 = metatype $@thin DefaultStringInterpolation.Type // user: %37
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %36 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %37
  %37 = apply %36(%30, %34, %35) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %38
  store %37 to [init] %26 : $*DefaultStringInterpolation // id: %38
  %39 = string_literal utf8 "v: "                 // user: %44
  %40 = integer_literal $Builtin.Word, 3          // user: %44
  %41 = integer_literal $Builtin.Int1, -1         // user: %44
  %42 = metatype $@thin String.Type               // user: %44
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %43 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %44
  %44 = apply %43(%39, %40, %41, %42) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %49, %47
  %45 = begin_access [modify] [unknown] %26 : $*DefaultStringInterpolation // users: %48, %47
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %46 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %47
  %47 = apply %46(%44, %45) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %45 : $*DefaultStringInterpolation   // id: %48
  destroy_value %44 : $String                     // id: %49
  %50 = begin_access [read] [unknown] %5 : $*Int  // users: %52, %51
  %51 = load [trivial] %50 : $*Int                // user: %54
  end_access %50 : $*Int                          // id: %52
  %53 = alloc_stack $Int                          // users: %59, %57, %54
  store %51 to [trivial] %53 : $*Int              // id: %54
  %55 = begin_access [modify] [unknown] %26 : $*DefaultStringInterpolation // users: %58, %57
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %56 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %57
  %57 = apply %56<Int>(%53, %55) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %55 : $*DefaultStringInterpolation   // id: %58
  dealloc_stack %53 : $*Int                       // id: %59
  %60 = string_literal utf8 ""                    // user: %65
  %61 = integer_literal $Builtin.Word, 0          // user: %65
  %62 = integer_literal $Builtin.Int1, -1         // user: %65
  %63 = metatype $@thin String.Type               // user: %65
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %64 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %65
  %65 = apply %64(%60, %61, %62, %63) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %70, %68
  %66 = begin_access [modify] [unknown] %26 : $*DefaultStringInterpolation // users: %69, %68
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %67 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %68
  %68 = apply %67(%65, %66) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %66 : $*DefaultStringInterpolation   // id: %69
  destroy_value %65 : $String                     // id: %70
  %71 = load [copy] %26 : $*DefaultStringInterpolation // user: %75
  destroy_value %25 : ${ var DefaultStringInterpolation } // id: %72
  %73 = metatype $@thin String.Type               // user: %75
  // function_ref String.init(stringInterpolation:)
  %74 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %75
  %75 = apply %74(%71, %73) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %77
  %76 = init_existential_addr %24 : $*Any, $String // user: %77
  store %75 to [init] %76 : $*String              // id: %77
  // function_ref default argument 1 of print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %79
  %79 = apply %78() : $@convention(thin) () -> @owned String // users: %85, %83
  // function_ref default argument 2 of print(_:separator:terminator:)
  %80 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %81
  %81 = apply %80() : $@convention(thin) () -> @owned String // users: %84, %83
  // function_ref print(_:separator:terminator:)
  %82 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %83
  %83 = apply %82(%22, %79, %81) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %81 : $String                     // id: %84
  destroy_value %79 : $String                     // id: %85
  destroy_value %22 : $Array<Any>                 // id: %86
  %87 = tuple ()                                  // user: %88
  return %87 : $()                                // id: %88
} // end sil function '$s4file3fooyyFyycfU3_'

// Array.init()
sil [serialized] [_semantics "array.init.empty"] @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>

// Array.reserveCapacity(_:)
sil [serialized] [_semantics "array.mutate_unknown"] @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()

// Bool.init(_builtinBooleanLiteral:)
sil [transparent] [serialized] @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool

// default argument 0 of readLine(strippingNewline:)
sil hidden_external [serialized] @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool

// readLine(strippingNewline:)
sil @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String>

// ~= infix<A>(_:_:)
sil [transparent] [serialized] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool

// Array.append(_:)
sil [serialized] [_semantics "array.append_element"] @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()

// Collection.isEmpty.getter
sil [serialized] @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool

// static Bool.! prefix(_:)
sil [transparent] [serialized] @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool

// RangeReplaceableCollection<>.removeLast()
sil [serialized] @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element

// BidirectionalCollection.last.getter
sil [serialized] @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>

sil_vtable Empty {
  #Empty.init!allocator: (Empty.Type) -> () -> Empty : @$s4file5EmptyCACycfC	// Empty.__allocating_init()
  #Empty.deinit!deallocator: @$s4file5EmptyCfD	// Empty.__deallocating_deinit
}

sil_vtable Number {
  #Number.init!allocator: (Number.Type) -> (Int) -> Number : @$s4file6NumberC6numberACSi_tcfC	// Number.__allocating_init(number:)
  #Number.deinit!deallocator: @$s4file6NumberCfD	// Number.__deallocating_deinit
}

sil_vtable Closure {
  #Closure.init!allocator: (Closure.Type) -> (@escaping () -> ()) -> Closure : @$s4file7ClosureCyACyyccfC	// Closure.__allocating_init(_:)
  #Closure.deinit!deallocator: @$s4file7ClosureCfD	// Closure.__deallocating_deinit
}



  *** SIL module after #55, stage Guaranteed Passes, pass 3: CapturePromotion (capture-promotion)
sil_stage raw

import Builtin
import Swift
import SwiftShims

// main
sil [ossa] @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

// Empty.foo()
sil hidden [ossa] @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4file5EmptyC3fooyyF'

// Empty.deinit
sil hidden [ossa] @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Empty to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file5EmptyCfd'

// Empty.__deallocating_deinit
sil hidden [ossa] @$s4file5EmptyCfD : $@convention(method) (@owned Empty) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  // function_ref Empty.deinit
  %2 = function_ref @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Empty                   // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Empty                          // id: %5
  end_lifetime %0 : $Empty                        // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Empty // user: %8
  dealloc_ref %7 : $Empty                         // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file5EmptyCfD'

// Empty.__allocating_init()
sil hidden [exact_self_class] [ossa] @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty {
// %0 "$metatype"
bb0(%0 : $@thick Empty.Type):
  %1 = alloc_ref $Empty                           // user: %3
  // function_ref Empty.init()
  %2 = function_ref @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Empty) -> @owned Empty // user: %4
  return %3 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfC'

// Empty.init()
sil hidden [ossa] @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = mark_uninitialized [rootself] %0 : $Empty  // users: %4, %3
  %3 = copy_value %2 : $Empty                     // user: %5
  destroy_value %2 : $Empty                       // id: %4
  return %3 : $Empty                              // id: %5
} // end sil function '$s4file5EmptyCACycfc'

// Number.number.getter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivg : $@convention(method) (@guaranteed Number) -> Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*Int   // users: %5, %4
  %4 = load [trivial] %3 : $*Int                  // user: %6
  end_access %3 : $*Int                           // id: %5
  return %4 : $Int                                // id: %6
} // end sil function '$s4file6NumberC6numberSivg'

// Number.number.setter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivs : $@convention(method) (Int, @guaranteed Number) -> () {
// %0 "value"                                     // users: %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : @guaranteed $Number):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %7, %6
  assign %0 to %5 : $*Int                         // id: %6
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9
} // end sil function '$s4file6NumberC6numberSivs'

// Number.number.modify
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivM : $@yield_once @convention(method) (@guaranteed Number) -> @yields @inout Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*Int // users: %5, %8, %4
  yield %3 : $*Int, resume bb1, unwind bb2        // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file6NumberC6numberSivM'

// Number.__allocating_init(number:)
sil hidden [exact_self_class] [ossa] @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number {
// %0 "number"                                    // user: %4
// %1 "$metatype"
bb0(%0 : $Int, %1 : $@thick Number.Type):
  %2 = alloc_ref $Number                          // user: %4
  // function_ref Number.init(number:)
  %3 = function_ref @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (Int, @owned Number) -> @owned Number // user: %5
  return %4 : $Number                             // id: %5
} // end sil function '$s4file6NumberC6numberACSi_tcfC'

// Number.init(number:)
sil hidden [ossa] @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %8, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : @owned $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = mark_uninitialized [rootself] %1 : $Number // users: %12, %11, %5
  %5 = begin_borrow %4 : $Number                  // users: %10, %6
  %6 = ref_element_addr %5 : $Number, #Number.number // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*Int // users: %9, %8
  assign %0 to %7 : $*Int                         // id: %8
  end_access %7 : $*Int                           // id: %9
  end_borrow %5 : $Number                         // id: %10
  %11 = copy_value %4 : $Number                   // user: %13
  destroy_value %4 : $Number                      // id: %12
  return %11 : $Number                            // id: %13
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

// Number.deinit
sil hidden [ossa] @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Number to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file6NumberCfd'

// Number.__deallocating_deinit
sil hidden [ossa] @$s4file6NumberCfD : $@convention(method) (@owned Number) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  // function_ref Number.deinit
  %2 = function_ref @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Number                  // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Number                         // id: %5
  end_lifetime %0 : $Number                       // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Number // user: %8
  dealloc_ref %7 : $Number                        // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file6NumberCfD'

// Closure.closure.getter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvg : $@convention(method) (@guaranteed Closure) -> @owned @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  %4 = load [copy] %3 : $*@callee_guaranteed () -> () // user: %6
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  return %4 : $@callee_guaranteed () -> ()        // id: %6
} // end sil function '$s4file7ClosureC7closureyycvg'

// Closure.closure.setter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvs : $@convention(method) (@owned @callee_guaranteed () -> (), @guaranteed Closure) -> () {
// %0 "value"                                     // users: %11, %4, %2
// %1 "self"                                      // users: %6, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @guaranteed $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "value", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %10, %5
  %5 = copy_value %4 : $@callee_guaranteed () -> () // user: %8
  %6 = ref_element_addr %1 : $Closure, #Closure.closure // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*@callee_guaranteed () -> () // users: %9, %8
  assign %5 to %7 : $*@callee_guaranteed () -> () // id: %8
  end_access %7 : $*@callee_guaranteed () -> ()   // id: %9
  end_borrow %4 : $@callee_guaranteed () -> ()    // id: %10
  destroy_value %0 : $@callee_guaranteed () -> () // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file7ClosureC7closureyycvs'

// Closure.closure.modify
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvM : $@yield_once @convention(method) (@guaranteed Closure) -> @yields @inout @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %8, %4
  yield %3 : $*@callee_guaranteed () -> (), resume bb1, unwind bb2 // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file7ClosureC7closureyycvM'

// Closure.__allocating_init(_:)
sil hidden [exact_self_class] [ossa] @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure {
// %0 "block"                                     // user: %4
// %1 "$metatype"
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : $@thick Closure.Type):
  %2 = alloc_ref $Closure                         // user: %4
  // function_ref Closure.init(_:)
  %3 = function_ref @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %5
  return %4 : $Closure                            // id: %5
} // end sil function '$s4file7ClosureCyACyyccfC'

// Closure.init(_:)
sil hidden [ossa] @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %16, %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @owned $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = mark_uninitialized [rootself] %1 : $Closure // users: %15, %14, %5
  %5 = begin_borrow %4 : $Closure                 // users: %13, %8
  %6 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %12, %7
  %7 = copy_value %6 : $@callee_guaranteed () -> () // user: %10
  %8 = ref_element_addr %5 : $Closure, #Closure.closure // user: %9
  %9 = begin_access [modify] [dynamic] %8 : $*@callee_guaranteed () -> () // users: %11, %10
  assign %7 to %9 : $*@callee_guaranteed () -> () // id: %10
  end_access %9 : $*@callee_guaranteed () -> ()   // id: %11
  end_borrow %6 : $@callee_guaranteed () -> ()    // id: %12
  end_borrow %5 : $Closure                        // id: %13
  %14 = copy_value %4 : $Closure                  // user: %17
  destroy_value %4 : $Closure                     // id: %15
  destroy_value %0 : $@callee_guaranteed () -> () // id: %16
  return %14 : $Closure                           // id: %17
} // end sil function '$s4file7ClosureCyACyyccfc'

// Closure.deinit
sil hidden [ossa] @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %6, %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [deinit] [static] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  destroy_addr %3 : $*@callee_guaranteed () -> () // id: %4
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = unchecked_ref_cast %0 : $Closure to $Builtin.NativeObject // user: %7
  %7 = unchecked_ownership_conversion %6 : $Builtin.NativeObject, @guaranteed to @owned // user: %8
  return %7 : $Builtin.NativeObject               // id: %8
} // end sil function '$s4file7ClosureCfd'

// Closure.__deallocating_deinit
sil hidden [ossa] @$s4file7ClosureCfD : $@convention(method) (@owned Closure) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  // function_ref Closure.deinit
  %2 = function_ref @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Closure                 // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Closure                        // id: %5
  end_lifetime %0 : $Closure                      // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Closure // user: %8
  dealloc_ref %7 : $Closure                       // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file7ClosureCfD'

// foo()
sil hidden [ossa] @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %629, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %628, %107, %92, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %13
  %8 = integer_literal $Builtin.IntLiteral, 0     // user: %11
  %9 = metatype $@thin Int.Type                   // user: %11
  // function_ref Int.init(_builtinIntegerLiteral:)
  %10 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %11
  %11 = apply %10(%8, %9) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %13
  // function_ref Number.__allocating_init(number:)
  %12 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %13
  %13 = apply %12(%11, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %627, %103, %88, %77, %68, %14
  debug_value %13 : $Number, let, name "number"   // id: %14
  %15 = integer_literal $Builtin.Word, 1          // user: %17
  // function_ref _allocateUninitializedArray<A>(_:)
  %16 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %17
  %17 = apply %16<Any>(%15) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %18
  (%18, %19) = destructure_tuple %17 : $(Array<Any>, Builtin.RawPointer) // users: %37, %34, %20
  %20 = pointer_to_address %19 : $Builtin.RawPointer to [strict] $*Any // user: %27
  %21 = string_literal utf8 "===== Did init"      // user: %26
  %22 = integer_literal $Builtin.Word, 14         // user: %26
  %23 = integer_literal $Builtin.Int1, -1         // user: %26
  %24 = metatype $@thin String.Type               // user: %26
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %25 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %26 = apply %25(%21, %22, %23, %24) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %27 = init_existential_addr %20 : $*Any, $String // user: %28
  store %26 to [init] %27 : $*String              // id: %28
  // function_ref default argument 1 of print(_:separator:terminator:)
  %29 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %30
  %30 = apply %29() : $@convention(thin) () -> @owned String // users: %36, %34
  // function_ref default argument 2 of print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %32
  %32 = apply %31() : $@convention(thin) () -> @owned String // users: %35, %34
  // function_ref print(_:separator:terminator:)
  %33 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %34
  %34 = apply %33(%18, %30, %32) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %32 : $String                     // id: %35
  destroy_value %30 : $String                     // id: %36
  destroy_value %18 : $Array<Any>                 // id: %37
  %38 = integer_literal $Builtin.Word, 1          // user: %40
  // function_ref _allocateUninitializedArray<A>(_:)
  %39 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %40
  %40 = apply %39<Any>(%38) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %41
  (%41, %42) = destructure_tuple %40 : $(Array<Any>, Builtin.RawPointer) // users: %60, %57, %43
  %43 = pointer_to_address %42 : $Builtin.RawPointer to [strict] $*Any // user: %50
  %44 = string_literal utf8 "===== Did hook"      // user: %49
  %45 = integer_literal $Builtin.Word, 14         // user: %49
  %46 = integer_literal $Builtin.Int1, -1         // user: %49
  %47 = metatype $@thin String.Type               // user: %49
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %48 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %49
  %49 = apply %48(%44, %45, %46, %47) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %51
  %50 = init_existential_addr %43 : $*Any, $String // user: %51
  store %49 to [init] %50 : $*String              // id: %51
  // function_ref default argument 1 of print(_:separator:terminator:)
  %52 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %53
  %53 = apply %52() : $@convention(thin) () -> @owned String // users: %59, %57
  // function_ref default argument 2 of print(_:separator:terminator:)
  %54 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %55
  %55 = apply %54() : $@convention(thin) () -> @owned String // users: %58, %57
  // function_ref print(_:separator:terminator:)
  %56 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %57
  %57 = apply %56(%41, %53, %55) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %55 : $String                     // id: %58
  destroy_value %53 : $String                     // id: %59
  destroy_value %41 : $Array<Any>                 // id: %60
  %61 = alloc_box ${ var Int }, var, name "value" // users: %626, %114, %83, %62
  %62 = project_box %61 : ${ var Int }, 0         // users: %463, %115, %84, %67
  %63 = integer_literal $Builtin.IntLiteral, 0    // user: %66
  %64 = metatype $@thin Int.Type                  // user: %66
  // function_ref Int.init(_builtinIntegerLiteral:)
  %65 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %66
  %66 = apply %65(%63, %64) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %67
  store %66 to [trivial] %62 : $*Int              // id: %67
  %68 = begin_borrow %13 : $Number                // users: %71, %69
  %69 = copy_value %68 : $Number                  // users: %76, %73, %70
  debug_value %69 : $Number, let, name "number"   // id: %70
  end_borrow %68 : $Number                        // id: %71
  // function_ref closure #2 in foo()
  %72 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %74
  %73 = copy_value %69 : $Number                  // user: %74
  %74 = partial_apply [callee_guaranteed] %72(%73) : $@convention(thin) (@guaranteed Number) -> () // users: %625, %246, %75
  debug_value %74 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %75
  destroy_value %69 : $Number                     // id: %76
  %77 = begin_borrow %13 : $Number                // users: %80, %78
  %78 = copy_value %77 : $Number                  // users: %87, %82, %79
  debug_value %78 : $Number, let, name "number"   // id: %79
  end_borrow %77 : $Number                        // id: %80
  // function_ref closure #3 in foo()
  %81 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %85
  %82 = copy_value %78 : $Number                  // user: %85
  %83 = copy_value %61 : ${ var Int }             // user: %85
  mark_function_escape %62 : $*Int                // id: %84
  %85 = partial_apply [callee_guaranteed] %81(%82, %83) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %624, %285, %86
  debug_value %85 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %86
  destroy_value %78 : $Number                     // id: %87
  %88 = begin_borrow %13 : $Number                // users: %91, %89
  %89 = copy_value %88 : $Number                  // users: %102, %97, %90
  debug_value %89 : $Number, let, name "number"   // id: %90
  end_borrow %88 : $Number                        // id: %91
  %92 = begin_borrow %5 : $Empty                  // users: %95, %93
  %93 = copy_value %92 : $Empty                   // users: %101, %98, %94
  debug_value %93 : $Empty, let, name "empty"     // id: %94
  end_borrow %92 : $Empty                         // id: %95
  // function_ref closure #4 in foo()
  %96 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %99
  %97 = copy_value %89 : $Number                  // user: %99
  %98 = copy_value %93 : $Empty                   // user: %99
  %99 = partial_apply [callee_guaranteed] %96(%97, %98) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %623, %324, %100
  debug_value %99 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %100
  destroy_value %93 : $Empty                      // id: %101
  destroy_value %89 : $Number                     // id: %102
  %103 = begin_borrow %13 : $Number               // users: %106, %104
  %104 = copy_value %103 : $Number                // users: %119, %112, %105
  debug_value %104 : $Number, let, name "number"  // id: %105
  end_borrow %103 : $Number                       // id: %106
  %107 = begin_borrow %5 : $Empty                 // users: %110, %108
  %108 = copy_value %107 : $Empty                 // users: %118, %113, %109
  debug_value %108 : $Empty, let, name "empty"    // id: %109
  end_borrow %107 : $Empty                        // id: %110
  // function_ref closure #5 in foo()
  %111 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %116
  %112 = copy_value %104 : $Number                // user: %116
  %113 = copy_value %108 : $Empty                 // user: %116
  %114 = copy_value %61 : ${ var Int }            // user: %116
  mark_function_escape %62 : $*Int                // id: %115
  %116 = partial_apply [callee_guaranteed] %111(%112, %113, %114) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %622, %363, %117
  debug_value %116 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %117
  destroy_value %108 : $Empty                     // id: %118
  destroy_value %104 : $Number                    // id: %119
  %120 = integer_literal $Builtin.Word, 1         // user: %122
  // function_ref _allocateUninitializedArray<A>(_:)
  %121 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %122
  %122 = apply %121<Any>(%120) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %123
  (%123, %124) = destructure_tuple %122 : $(Array<Any>, Builtin.RawPointer) // users: %142, %139, %125
  %125 = pointer_to_address %124 : $Builtin.RawPointer to [strict] $*Any // user: %132
  %126 = string_literal utf8 "===== Did init closures" // user: %131
  %127 = integer_literal $Builtin.Word, 23        // user: %131
  %128 = integer_literal $Builtin.Int1, -1        // user: %131
  %129 = metatype $@thin String.Type              // user: %131
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %130 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %131
  %131 = apply %130(%126, %127, %128, %129) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %133
  %132 = init_existential_addr %125 : $*Any, $String // user: %133
  store %131 to [init] %132 : $*String            // id: %133
  // function_ref default argument 1 of print(_:separator:terminator:)
  %134 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %135
  %135 = apply %134() : $@convention(thin) () -> @owned String // users: %141, %139
  // function_ref default argument 2 of print(_:separator:terminator:)
  %136 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %137
  %137 = apply %136() : $@convention(thin) () -> @owned String // users: %140, %139
  // function_ref print(_:separator:terminator:)
  %138 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %139
  %139 = apply %138(%123, %135, %137) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %137 : $String                    // id: %140
  destroy_value %135 : $String                    // id: %141
  destroy_value %123 : $Array<Any>                // id: %142
  %143 = alloc_box ${ var Array<Closure> }, var, name "storage" // users: %621, %144
  %144 = project_box %143 : ${ var Array<Closure> }, 0 // users: %493, %423, %402, %370, %331, %292, %253, %153, %148
  %145 = metatype $@thin Array<Closure>.Type      // user: %147
  // function_ref Array.init()
  %146 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %147
  %147 = apply %146<Closure>(%145) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %148
  store %147 to [init] %144 : $*Array<Closure>    // id: %148
  %149 = integer_literal $Builtin.IntLiteral, 100 // user: %152
  %150 = metatype $@thin Int.Type                 // user: %152
  // function_ref Int.init(_builtinIntegerLiteral:)
  %151 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %152
  %152 = apply %151(%149, %150) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %155
  %153 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %156, %155
  // function_ref Array.reserveCapacity(_:)
  %154 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %155
  %155 = apply %154<Closure>(%152, %153) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %153 : $*Array<Closure>              // id: %156
  %157 = integer_literal $Builtin.Word, 1         // user: %159
  // function_ref _allocateUninitializedArray<A>(_:)
  %158 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %159
  %159 = apply %158<Any>(%157) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %160
  (%160, %161) = destructure_tuple %159 : $(Array<Any>, Builtin.RawPointer) // users: %179, %176, %162
  %162 = pointer_to_address %161 : $Builtin.RawPointer to [strict] $*Any // user: %169
  %163 = string_literal utf8 "===== Did init array" // user: %168
  %164 = integer_literal $Builtin.Word, 20        // user: %168
  %165 = integer_literal $Builtin.Int1, -1        // user: %168
  %166 = metatype $@thin String.Type              // user: %168
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %167 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %168
  %168 = apply %167(%163, %164, %165, %166) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %170
  %169 = init_existential_addr %162 : $*Any, $String // user: %170
  store %168 to [init] %169 : $*String            // id: %170
  // function_ref default argument 1 of print(_:separator:terminator:)
  %171 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %172
  %172 = apply %171() : $@convention(thin) () -> @owned String // users: %178, %176
  // function_ref default argument 2 of print(_:separator:terminator:)
  %173 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %174
  %174 = apply %173() : $@convention(thin) () -> @owned String // users: %177, %176
  // function_ref print(_:separator:terminator:)
  %175 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %176
  %176 = apply %175(%160, %172, %174) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %174 : $String                    // id: %177
  destroy_value %172 : $String                    // id: %178
  destroy_value %160 : $Array<Any>                // id: %179
  %180 = alloc_box ${ var Bool }, var, name "run" // users: %620, %181
  %181 = project_box %180 : ${ var Bool }, 0      // users: %564, %188, %186
  %182 = integer_literal $Builtin.Int1, -1        // user: %185
  %183 = metatype $@thin Bool.Type                // user: %185
  // function_ref Bool.init(_builtinBooleanLiteral:)
  %184 = function_ref @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %185
  %185 = apply %184(%182, %183) : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %186
  store %185 to [trivial] %181 : $*Bool           // id: %186
  br bb1                                          // id: %187

bb1:                                              // Preds: bb25 bb0
  %188 = begin_access [read] [unknown] %181 : $*Bool // users: %189, %191
  %189 = struct_element_addr %188 : $*Bool, #Bool._value // user: %190
  %190 = load [trivial] %189 : $*Builtin.Int1     // user: %192
  end_access %188 : $*Bool                        // id: %191
  cond_br %190, bb2, bb26                         // id: %192

bb2:                                              // Preds: bb1
  %193 = integer_literal $Builtin.Word, 1         // user: %195
  // function_ref _allocateUninitializedArray<A>(_:)
  %194 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %195
  %195 = apply %194<Any>(%193) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %196
  (%196, %197) = destructure_tuple %195 : $(Array<Any>, Builtin.RawPointer) // users: %215, %212, %198
  %198 = pointer_to_address %197 : $Builtin.RawPointer to [strict] $*Any // user: %205
  %199 = string_literal utf8 "===== Ask"          // user: %204
  %200 = integer_literal $Builtin.Word, 9         // user: %204
  %201 = integer_literal $Builtin.Int1, -1        // user: %204
  %202 = metatype $@thin String.Type              // user: %204
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %203 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %204
  %204 = apply %203(%199, %200, %201, %202) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %206
  %205 = init_existential_addr %198 : $*Any, $String // user: %206
  store %204 to [init] %205 : $*String            // id: %206
  // function_ref default argument 1 of print(_:separator:terminator:)
  %207 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %208
  %208 = apply %207() : $@convention(thin) () -> @owned String // users: %214, %212
  // function_ref default argument 2 of print(_:separator:terminator:)
  %209 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %210
  %210 = apply %209() : $@convention(thin) () -> @owned String // users: %213, %212
  // function_ref print(_:separator:terminator:)
  %211 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %212
  %212 = apply %211(%196, %208, %210) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %210 : $String                    // id: %213
  destroy_value %208 : $String                    // id: %214
  destroy_value %196 : $Array<Any>                // id: %215
  // function_ref default argument 0 of readLine(strippingNewline:)
  %216 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %217
  %217 = apply %216() : $@convention(thin) () -> Bool // user: %219
  // function_ref readLine(strippingNewline:)
  %218 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %219
  %219 = apply %218(%217) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %595, %221, %220
  debug_value %219 : $Optional<String>, let, name "line" // id: %220
  %221 = begin_borrow %219 : $Optional<String>    // users: %593, %567, %537, %529, %470, %467, %435, %430, %378, %375, %339, %336, %300, %297, %261, %258, %222
  %222 = copy_value %221 : $Optional<String>      // users: %244, %260, %233, %223
  debug_value %222 : $Optional<String>, let, name "$match" // id: %223
  %224 = string_literal utf8 "push1"              // user: %229
  %225 = integer_literal $Builtin.Word, 5         // user: %229
  %226 = integer_literal $Builtin.Int1, -1        // user: %229
  %227 = metatype $@thin String.Type              // user: %229
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %228 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %229
  %229 = apply %228(%224, %225, %226, %227) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %230
  %230 = enum $Optional<String>, #Optional.some!enumelt, %229 : $String // user: %232
  %231 = alloc_stack $Optional<String>            // users: %241, %240, %237, %232
  store %230 to [init] %231 : $*Optional<String>  // id: %232
  %233 = begin_borrow %222 : $Optional<String>    // users: %239, %235
  %234 = alloc_stack $Optional<String>            // users: %238, %237, %235
  %235 = store_borrow %233 to %234 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %236 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %237
  %237 = apply %236<String?>(%231, %234) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %242
  dealloc_stack %234 : $*Optional<String>         // id: %238
  end_borrow %233 : $Optional<String>             // id: %239
  destroy_addr %231 : $*Optional<String>          // id: %240
  dealloc_stack %231 : $*Optional<String>         // id: %241
  %242 = struct_extract %237 : $Bool, #Bool._value // user: %243
  cond_br %242, bb3, bb4                          // id: %243

bb3:                                              // Preds: bb2
  destroy_value %222 : $Optional<String>          // id: %244
  %245 = metatype $@thick Closure.Type            // user: %249
  %246 = begin_borrow %74 : $@callee_guaranteed () -> () // users: %250, %247
  %247 = copy_value %246 : $@callee_guaranteed () -> () // user: %249
  // function_ref Closure.__allocating_init(_:)
  %248 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %249
  %249 = apply %248(%247, %245) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %252
  end_borrow %246 : $@callee_guaranteed () -> ()  // id: %250
  %251 = alloc_stack $Closure                     // users: %257, %255, %252
  store %249 to [init] %251 : $*Closure           // id: %252
  %253 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %256, %255
  // function_ref Array.append(_:)
  %254 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %255
  %255 = apply %254<Closure>(%251, %253) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %253 : $*Array<Closure>              // id: %256
  dealloc_stack %251 : $*Closure                  // id: %257
  end_borrow %221 : $Optional<String>             // id: %258
  br bb25                                         // id: %259

bb4:                                              // Preds: bb2
  destroy_value %222 : $Optional<String>          // id: %260
  %261 = copy_value %221 : $Optional<String>      // users: %283, %299, %272, %262
  debug_value %261 : $Optional<String>, let, name "$match" // id: %262
  %263 = string_literal utf8 "push1_1"            // user: %268
  %264 = integer_literal $Builtin.Word, 7         // user: %268
  %265 = integer_literal $Builtin.Int1, -1        // user: %268
  %266 = metatype $@thin String.Type              // user: %268
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %267 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %268
  %268 = apply %267(%263, %264, %265, %266) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %269
  %269 = enum $Optional<String>, #Optional.some!enumelt, %268 : $String // user: %271
  %270 = alloc_stack $Optional<String>            // users: %280, %279, %276, %271
  store %269 to [init] %270 : $*Optional<String>  // id: %271
  %272 = begin_borrow %261 : $Optional<String>    // users: %278, %274
  %273 = alloc_stack $Optional<String>            // users: %277, %276, %274
  %274 = store_borrow %272 to %273 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %275 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %276
  %276 = apply %275<String?>(%270, %273) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %281
  dealloc_stack %273 : $*Optional<String>         // id: %277
  end_borrow %272 : $Optional<String>             // id: %278
  destroy_addr %270 : $*Optional<String>          // id: %279
  dealloc_stack %270 : $*Optional<String>         // id: %280
  %281 = struct_extract %276 : $Bool, #Bool._value // user: %282
  cond_br %281, bb5, bb6                          // id: %282

bb5:                                              // Preds: bb4
  destroy_value %261 : $Optional<String>          // id: %283
  %284 = metatype $@thick Closure.Type            // user: %288
  %285 = begin_borrow %85 : $@callee_guaranteed () -> () // users: %289, %286
  %286 = copy_value %285 : $@callee_guaranteed () -> () // user: %288
  // function_ref Closure.__allocating_init(_:)
  %287 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %288
  %288 = apply %287(%286, %284) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %291
  end_borrow %285 : $@callee_guaranteed () -> ()  // id: %289
  %290 = alloc_stack $Closure                     // users: %296, %294, %291
  store %288 to [init] %290 : $*Closure           // id: %291
  %292 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %295, %294
  // function_ref Array.append(_:)
  %293 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %294
  %294 = apply %293<Closure>(%290, %292) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %292 : $*Array<Closure>              // id: %295
  dealloc_stack %290 : $*Closure                  // id: %296
  end_borrow %221 : $Optional<String>             // id: %297
  br bb25                                         // id: %298

bb6:                                              // Preds: bb4
  destroy_value %261 : $Optional<String>          // id: %299
  %300 = copy_value %221 : $Optional<String>      // users: %322, %338, %311, %301
  debug_value %300 : $Optional<String>, let, name "$match" // id: %301
  %302 = string_literal utf8 "push2"              // user: %307
  %303 = integer_literal $Builtin.Word, 5         // user: %307
  %304 = integer_literal $Builtin.Int1, -1        // user: %307
  %305 = metatype $@thin String.Type              // user: %307
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %306 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %307
  %307 = apply %306(%302, %303, %304, %305) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %308
  %308 = enum $Optional<String>, #Optional.some!enumelt, %307 : $String // user: %310
  %309 = alloc_stack $Optional<String>            // users: %319, %318, %315, %310
  store %308 to [init] %309 : $*Optional<String>  // id: %310
  %311 = begin_borrow %300 : $Optional<String>    // users: %317, %313
  %312 = alloc_stack $Optional<String>            // users: %316, %315, %313
  %313 = store_borrow %311 to %312 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %314 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %315
  %315 = apply %314<String?>(%309, %312) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %320
  dealloc_stack %312 : $*Optional<String>         // id: %316
  end_borrow %311 : $Optional<String>             // id: %317
  destroy_addr %309 : $*Optional<String>          // id: %318
  dealloc_stack %309 : $*Optional<String>         // id: %319
  %320 = struct_extract %315 : $Bool, #Bool._value // user: %321
  cond_br %320, bb7, bb8                          // id: %321

bb7:                                              // Preds: bb6
  destroy_value %300 : $Optional<String>          // id: %322
  %323 = metatype $@thick Closure.Type            // user: %327
  %324 = begin_borrow %99 : $@callee_guaranteed () -> () // users: %328, %325
  %325 = copy_value %324 : $@callee_guaranteed () -> () // user: %327
  // function_ref Closure.__allocating_init(_:)
  %326 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %327
  %327 = apply %326(%325, %323) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %330
  end_borrow %324 : $@callee_guaranteed () -> ()  // id: %328
  %329 = alloc_stack $Closure                     // users: %335, %333, %330
  store %327 to [init] %329 : $*Closure           // id: %330
  %331 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %334, %333
  // function_ref Array.append(_:)
  %332 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %333
  %333 = apply %332<Closure>(%329, %331) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %331 : $*Array<Closure>              // id: %334
  dealloc_stack %329 : $*Closure                  // id: %335
  end_borrow %221 : $Optional<String>             // id: %336
  br bb25                                         // id: %337

bb8:                                              // Preds: bb6
  destroy_value %300 : $Optional<String>          // id: %338
  %339 = copy_value %221 : $Optional<String>      // users: %361, %377, %350, %340
  debug_value %339 : $Optional<String>, let, name "$match" // id: %340
  %341 = string_literal utf8 "push2_1"            // user: %346
  %342 = integer_literal $Builtin.Word, 7         // user: %346
  %343 = integer_literal $Builtin.Int1, -1        // user: %346
  %344 = metatype $@thin String.Type              // user: %346
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %345 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %346
  %346 = apply %345(%341, %342, %343, %344) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %347
  %347 = enum $Optional<String>, #Optional.some!enumelt, %346 : $String // user: %349
  %348 = alloc_stack $Optional<String>            // users: %358, %357, %354, %349
  store %347 to [init] %348 : $*Optional<String>  // id: %349
  %350 = begin_borrow %339 : $Optional<String>    // users: %356, %352
  %351 = alloc_stack $Optional<String>            // users: %355, %354, %352
  %352 = store_borrow %350 to %351 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %353 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %354
  %354 = apply %353<String?>(%348, %351) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %359
  dealloc_stack %351 : $*Optional<String>         // id: %355
  end_borrow %350 : $Optional<String>             // id: %356
  destroy_addr %348 : $*Optional<String>          // id: %357
  dealloc_stack %348 : $*Optional<String>         // id: %358
  %359 = struct_extract %354 : $Bool, #Bool._value // user: %360
  cond_br %359, bb9, bb10                         // id: %360

bb9:                                              // Preds: bb8
  destroy_value %339 : $Optional<String>          // id: %361
  %362 = metatype $@thick Closure.Type            // user: %366
  %363 = begin_borrow %116 : $@callee_guaranteed () -> () // users: %367, %364
  %364 = copy_value %363 : $@callee_guaranteed () -> () // user: %366
  // function_ref Closure.__allocating_init(_:)
  %365 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %366
  %366 = apply %365(%364, %362) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %369
  end_borrow %363 : $@callee_guaranteed () -> ()  // id: %367
  %368 = alloc_stack $Closure                     // users: %374, %372, %369
  store %366 to [init] %368 : $*Closure           // id: %369
  %370 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %373, %372
  // function_ref Array.append(_:)
  %371 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %372
  %372 = apply %371<Closure>(%368, %370) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %370 : $*Array<Closure>              // id: %373
  dealloc_stack %368 : $*Closure                  // id: %374
  end_borrow %221 : $Optional<String>             // id: %375
  br bb25                                         // id: %376

bb10:                                             // Preds: bb8
  destroy_value %339 : $Optional<String>          // id: %377
  %378 = copy_value %221 : $Optional<String>      // users: %400, %433, %389, %379
  debug_value %378 : $Optional<String>, let, name "$match" // id: %379
  %380 = string_literal utf8 "pop"                // user: %385
  %381 = integer_literal $Builtin.Word, 3         // user: %385
  %382 = integer_literal $Builtin.Int1, -1        // user: %385
  %383 = metatype $@thin String.Type              // user: %385
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %384 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %385
  %385 = apply %384(%380, %381, %382, %383) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %386
  %386 = enum $Optional<String>, #Optional.some!enumelt, %385 : $String // user: %388
  %387 = alloc_stack $Optional<String>            // users: %397, %396, %393, %388
  store %386 to [init] %387 : $*Optional<String>  // id: %388
  %389 = begin_borrow %378 : $Optional<String>    // users: %395, %391
  %390 = alloc_stack $Optional<String>            // users: %394, %393, %391
  %391 = store_borrow %389 to %390 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %392 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %393
  %393 = apply %392<String?>(%387, %390) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %398
  dealloc_stack %390 : $*Optional<String>         // id: %394
  end_borrow %389 : $Optional<String>             // id: %395
  destroy_addr %387 : $*Optional<String>          // id: %396
  dealloc_stack %387 : $*Optional<String>         // id: %397
  %398 = struct_extract %393 : $Bool, #Bool._value // user: %399
  cond_br %398, bb11, bb14                        // id: %399

bb11:                                             // Preds: bb10
  destroy_value %378 : $Optional<String>          // id: %400
  %401 = metatype $@thin Bool.Type                // user: %417
  %402 = begin_access [read] [unknown] %144 : $*Array<Closure> // users: %404, %403
  %403 = load [copy] %402 : $*Array<Closure>      // users: %415, %405
  end_access %402 : $*Array<Closure>              // id: %404
  %405 = begin_borrow %403 : $Array<Closure>      // users: %414, %407
  %406 = alloc_stack $Array<Closure>              // users: %419, %408, %407
  %407 = store_borrow %405 to %406 : $*Array<Closure>
  %408 = load_borrow %406 : $*Array<Closure>      // users: %418, %410
  %409 = alloc_stack $Array<Closure>              // users: %413, %412, %410
  %410 = store_borrow %408 to %409 : $*Array<Closure>
  // function_ref Collection.isEmpty.getter
  %411 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %412
  %412 = apply %411<[Closure]>(%409) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %417
  dealloc_stack %409 : $*Array<Closure>           // id: %413
  end_borrow %405 : $Array<Closure>               // id: %414
  destroy_value %403 : $Array<Closure>            // id: %415
  // function_ref static Bool.! prefix(_:)
  %416 = function_ref @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool // user: %417
  %417 = apply %416(%412, %401) : $@convention(method) (Bool, @thin Bool.Type) -> Bool // user: %420
  end_borrow %408 : $Array<Closure>               // id: %418
  dealloc_stack %406 : $*Array<Closure>           // id: %419
  %420 = struct_extract %417 : $Bool, #Bool._value // user: %421
  cond_br %420, bb12, bb13                        // id: %421

bb12:                                             // Preds: bb11
  %422 = alloc_stack $Closure                     // users: %429, %427, %425
  %423 = begin_access [modify] [unknown] %144 : $*Array<Closure> // users: %426, %425
  // function_ref RangeReplaceableCollection<>.removeLast()
  %424 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %425
  %425 = apply %424<[Closure]>(%422, %423) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %423 : $*Array<Closure>              // id: %426
  %427 = load [take] %422 : $*Closure             // user: %428
  destroy_value %427 : $Closure                   // id: %428
  dealloc_stack %422 : $*Closure                  // id: %429
  end_borrow %221 : $Optional<String>             // id: %430
  br bb25                                         // id: %431

bb13:                                             // Preds: bb11
  br bb15                                         // id: %432

bb14:                                             // Preds: bb10
  destroy_value %378 : $Optional<String>          // id: %433
  br bb15                                         // id: %434

bb15:                                             // Preds: bb13 bb14
  %435 = copy_value %221 : $Optional<String>      // users: %457, %469, %446, %436
  debug_value %435 : $Optional<String>, let, name "$match" // id: %436
  %437 = string_literal utf8 "inc"                // user: %442
  %438 = integer_literal $Builtin.Word, 3         // user: %442
  %439 = integer_literal $Builtin.Int1, -1        // user: %442
  %440 = metatype $@thin String.Type              // user: %442
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %441 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %442
  %442 = apply %441(%437, %438, %439, %440) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %443
  %443 = enum $Optional<String>, #Optional.some!enumelt, %442 : $String // user: %445
  %444 = alloc_stack $Optional<String>            // users: %454, %453, %450, %445
  store %443 to [init] %444 : $*Optional<String>  // id: %445
  %446 = begin_borrow %435 : $Optional<String>    // users: %452, %448
  %447 = alloc_stack $Optional<String>            // users: %451, %450, %448
  %448 = store_borrow %446 to %447 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %449 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %450
  %450 = apply %449<String?>(%444, %447) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %455
  dealloc_stack %447 : $*Optional<String>         // id: %451
  end_borrow %446 : $Optional<String>             // id: %452
  destroy_addr %444 : $*Optional<String>          // id: %453
  dealloc_stack %444 : $*Optional<String>         // id: %454
  %455 = struct_extract %450 : $Bool, #Bool._value // user: %456
  cond_br %455, bb16, bb17                        // id: %456

bb16:                                             // Preds: bb15
  destroy_value %435 : $Optional<String>          // id: %457
  %458 = metatype $@thin Int.Type                 // user: %465
  %459 = integer_literal $Builtin.IntLiteral, 1   // user: %462
  %460 = metatype $@thin Int.Type                 // user: %462
  // function_ref Int.init(_builtinIntegerLiteral:)
  %461 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %462
  %462 = apply %461(%459, %460) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %465
  %463 = begin_access [modify] [unknown] %62 : $*Int // users: %466, %465
  // function_ref static Int.+= infix(_:_:)
  %464 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %465
  %465 = apply %464(%463, %462, %458) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %463 : $*Int                         // id: %466
  end_borrow %221 : $Optional<String>             // id: %467
  br bb25                                         // id: %468

bb17:                                             // Preds: bb15
  destroy_value %435 : $Optional<String>          // id: %469
  %470 = copy_value %221 : $Optional<String>      // users: %492, %536, %481, %471
  debug_value %470 : $Optional<String>, let, name "$match" // id: %471
  %472 = string_literal utf8 "exec"               // user: %477
  %473 = integer_literal $Builtin.Word, 4         // user: %477
  %474 = integer_literal $Builtin.Int1, -1        // user: %477
  %475 = metatype $@thin String.Type              // user: %477
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %476 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %477
  %477 = apply %476(%472, %473, %474, %475) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %478
  %478 = enum $Optional<String>, #Optional.some!enumelt, %477 : $String // user: %480
  %479 = alloc_stack $Optional<String>            // users: %489, %488, %485, %480
  store %478 to [init] %479 : $*Optional<String>  // id: %480
  %481 = begin_borrow %470 : $Optional<String>    // users: %487, %483
  %482 = alloc_stack $Optional<String>            // users: %486, %485, %483
  %483 = store_borrow %481 to %482 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %484 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %485
  %485 = apply %484<String?>(%479, %482) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %490
  dealloc_stack %482 : $*Optional<String>         // id: %486
  end_borrow %481 : $Optional<String>             // id: %487
  destroy_addr %479 : $*Optional<String>          // id: %488
  dealloc_stack %479 : $*Optional<String>         // id: %489
  %490 = struct_extract %485 : $Bool, #Bool._value // user: %491
  cond_br %490, bb18, bb22                        // id: %491

bb18:                                             // Preds: bb17
  destroy_value %470 : $Optional<String>          // id: %492
  %493 = begin_access [read] [unknown] %144 : $*Array<Closure> // users: %495, %494
  %494 = load [copy] %493 : $*Array<Closure>      // users: %508, %496
  end_access %493 : $*Array<Closure>              // id: %495
  %496 = begin_borrow %494 : $Array<Closure>      // users: %507, %498
  %497 = alloc_stack $Array<Closure>              // users: %526, %533, %499, %498
  %498 = store_borrow %496 to %497 : $*Array<Closure>
  %499 = load_borrow %497 : $*Array<Closure>      // users: %525, %532, %502
  %500 = alloc_stack $Optional<Closure>           // users: %524, %531, %506, %504
  %501 = alloc_stack $Array<Closure>              // users: %505, %504, %502
  %502 = store_borrow %499 to %501 : $*Array<Closure>
  // function_ref BidirectionalCollection.last.getter
  %503 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %504
  %504 = apply %503<[Closure]>(%500, %501) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %501 : $*Array<Closure>           // id: %505
  %506 = load [take] %500 : $*Optional<Closure>   // user: %509
  end_borrow %496 : $Array<Closure>               // id: %507
  destroy_value %494 : $Array<Closure>            // id: %508
  switch_enum %506 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %509

// %510                                           // users: %517, %511
bb19(%510 : @owned $Closure):                     // Preds: bb18
  %511 = begin_borrow %510 : $Closure             // users: %516, %512
  %512 = ref_element_addr %511 : $Closure, #Closure.closure // user: %513
  %513 = begin_access [read] [dynamic] %512 : $*@callee_guaranteed () -> () // users: %515, %514
  %514 = load [copy] %513 : $*@callee_guaranteed () -> () // users: %523, %518
  end_access %513 : $*@callee_guaranteed () -> () // id: %515
  end_borrow %511 : $Closure                      // id: %516
  destroy_value %510 : $Closure                   // id: %517
  %518 = begin_borrow %514 : $@callee_guaranteed () -> () // users: %520, %519
  %519 = apply %518() : $@callee_guaranteed () -> ()
  end_borrow %518 : $@callee_guaranteed () -> ()  // id: %520
  %521 = tuple ()                                 // user: %522
  %522 = enum $Optional<()>, #Optional.some!enumelt, %521 : $() // user: %527
  destroy_value %514 : $@callee_guaranteed () -> () // id: %523
  dealloc_stack %500 : $*Optional<Closure>        // id: %524
  end_borrow %499 : $Array<Closure>               // id: %525
  dealloc_stack %497 : $*Array<Closure>           // id: %526
  br bb20(%522 : $Optional<()>)                   // id: %527

bb20(%528 : $Optional<()>):                       // Preds: bb21 bb19
  end_borrow %221 : $Optional<String>             // id: %529
  br bb25                                         // id: %530

bb21:                                             // Preds: bb18
  dealloc_stack %500 : $*Optional<Closure>        // id: %531
  end_borrow %499 : $Array<Closure>               // id: %532
  dealloc_stack %497 : $*Array<Closure>           // id: %533
  %534 = enum $Optional<()>, #Optional.none!enumelt // user: %535
  br bb20(%534 : $Optional<()>)                   // id: %535

bb22:                                             // Preds: bb17
  destroy_value %470 : $Optional<String>          // id: %536
  %537 = copy_value %221 : $Optional<String>      // users: %559, %569, %548, %538
  debug_value %537 : $Optional<String>, let, name "$match" // id: %538
  %539 = string_literal utf8 "exit"               // user: %544
  %540 = integer_literal $Builtin.Word, 4         // user: %544
  %541 = integer_literal $Builtin.Int1, -1        // user: %544
  %542 = metatype $@thin String.Type              // user: %544
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %543 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %544
  %544 = apply %543(%539, %540, %541, %542) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %545
  %545 = enum $Optional<String>, #Optional.some!enumelt, %544 : $String // user: %547
  %546 = alloc_stack $Optional<String>            // users: %556, %555, %552, %547
  store %545 to [init] %546 : $*Optional<String>  // id: %547
  %548 = begin_borrow %537 : $Optional<String>    // users: %554, %550
  %549 = alloc_stack $Optional<String>            // users: %553, %552, %550
  %550 = store_borrow %548 to %549 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %551 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %552
  %552 = apply %551<String?>(%546, %549) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %557
  dealloc_stack %549 : $*Optional<String>         // id: %553
  end_borrow %548 : $Optional<String>             // id: %554
  destroy_addr %546 : $*Optional<String>          // id: %555
  dealloc_stack %546 : $*Optional<String>         // id: %556
  %557 = struct_extract %552 : $Bool, #Bool._value // user: %558
  cond_br %557, bb23, bb24                        // id: %558

bb23:                                             // Preds: bb22
  destroy_value %537 : $Optional<String>          // id: %559
  %560 = integer_literal $Builtin.Int1, 0         // user: %563
  %561 = metatype $@thin Bool.Type                // user: %563
  // function_ref Bool.init(_builtinBooleanLiteral:)
  %562 = function_ref @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %563
  %563 = apply %562(%560, %561) : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %565
  %564 = begin_access [modify] [unknown] %181 : $*Bool // users: %566, %565
  assign %563 to %564 : $*Bool                    // id: %565
  end_access %564 : $*Bool                        // id: %566
  end_borrow %221 : $Optional<String>             // id: %567
  br bb25                                         // id: %568

bb24:                                             // Preds: bb22
  destroy_value %537 : $Optional<String>          // id: %569
  %570 = integer_literal $Builtin.Word, 1         // user: %572
  // function_ref _allocateUninitializedArray<A>(_:)
  %571 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %572
  %572 = apply %571<Any>(%570) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %573
  (%573, %574) = destructure_tuple %572 : $(Array<Any>, Builtin.RawPointer) // users: %592, %589, %575
  %575 = pointer_to_address %574 : $Builtin.RawPointer to [strict] $*Any // user: %582
  %576 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %581
  %577 = integer_literal $Builtin.Word, 44        // user: %581
  %578 = integer_literal $Builtin.Int1, 0         // user: %581
  %579 = metatype $@thin String.Type              // user: %581
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %580 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %581
  %581 = apply %580(%576, %577, %578, %579) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %583
  %582 = init_existential_addr %575 : $*Any, $String // user: %583
  store %581 to [init] %582 : $*String            // id: %583
  // function_ref default argument 1 of print(_:separator:terminator:)
  %584 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %585
  %585 = apply %584() : $@convention(thin) () -> @owned String // users: %591, %589
  // function_ref default argument 2 of print(_:separator:terminator:)
  %586 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %587
  %587 = apply %586() : $@convention(thin) () -> @owned String // users: %590, %589
  // function_ref print(_:separator:terminator:)
  %588 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %589
  %589 = apply %588(%573, %585, %587) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %587 : $String                    // id: %590
  destroy_value %585 : $String                    // id: %591
  destroy_value %573 : $Array<Any>                // id: %592
  end_borrow %221 : $Optional<String>             // id: %593
  br bb25                                         // id: %594

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  destroy_value %219 : $Optional<String>          // id: %595
  br bb1                                          // id: %596

bb26:                                             // Preds: bb1
  %597 = integer_literal $Builtin.Word, 1         // user: %599
  // function_ref _allocateUninitializedArray<A>(_:)
  %598 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %599
  %599 = apply %598<Any>(%597) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %600
  (%600, %601) = destructure_tuple %599 : $(Array<Any>, Builtin.RawPointer) // users: %619, %616, %602
  %602 = pointer_to_address %601 : $Builtin.RawPointer to [strict] $*Any // user: %609
  %603 = string_literal utf8 "===== will end"     // user: %608
  %604 = integer_literal $Builtin.Word, 14        // user: %608
  %605 = integer_literal $Builtin.Int1, -1        // user: %608
  %606 = metatype $@thin String.Type              // user: %608
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %607 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %608
  %608 = apply %607(%603, %604, %605, %606) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %610
  %609 = init_existential_addr %602 : $*Any, $String // user: %610
  store %608 to [init] %609 : $*String            // id: %610
  // function_ref default argument 1 of print(_:separator:terminator:)
  %611 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %612
  %612 = apply %611() : $@convention(thin) () -> @owned String // users: %618, %616
  // function_ref default argument 2 of print(_:separator:terminator:)
  %613 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %614
  %614 = apply %613() : $@convention(thin) () -> @owned String // users: %617, %616
  // function_ref print(_:separator:terminator:)
  %615 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %616
  %616 = apply %615(%600, %612, %614) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %614 : $String                    // id: %617
  destroy_value %612 : $String                    // id: %618
  destroy_value %600 : $Array<Any>                // id: %619
  destroy_value %180 : ${ var Bool }              // id: %620
  destroy_value %143 : ${ var Array<Closure> }    // id: %621
  destroy_value %116 : $@callee_guaranteed () -> () // id: %622
  destroy_value %99 : $@callee_guaranteed () -> () // id: %623
  destroy_value %85 : $@callee_guaranteed () -> () // id: %624
  destroy_value %74 : $@callee_guaranteed () -> () // id: %625
  destroy_value %61 : ${ var Int }                // id: %626
  destroy_value %13 : $Number                     // id: %627
  destroy_value %5 : $Empty                       // id: %628
  destroy_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %629
  %630 = tuple ()                                 // user: %631
  return %630 : $()                               // id: %631
} // end sil function '$s4file3fooyyF'

// closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () {
// %0 "name"                                      // users: %3, %1
bb0(%0 : @guaranteed $String):
  debug_value %0 : $String, let, name "name", argno 1 // id: %1
  // function_ref closure #1 in closure #1 in foo()
  %2 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %4
  %3 = copy_value %0 : $String                    // user: %4
  %4 = partial_apply [callee_guaranteed] %2(%3) : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %5
  return %4 : $@callee_guaranteed (Int, Int, Int) -> () // id: %5
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_'

// closure #1 in closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %58, %4
// %1 "weak"                                      // users: %76, %5
// %2 "unowned"                                   // users: %94, %6
// %3 "name"                                      // users: %40, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : @guaranteed $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %11
  (%11, %12) = destructure_tuple %10 : $(Array<Any>, Builtin.RawPointer) // users: %126, %123, %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %116
  %14 = alloc_box ${ var DefaultStringInterpolation }, var, name "$interpolation" // users: %112, %15
  %15 = project_box %14 : ${ var DefaultStringInterpolation }, 0 // users: %111, %106, %95, %88, %77, %70, %59, %52, %41, %34, %27
  %16 = integer_literal $Builtin.IntLiteral, 39   // user: %19
  %17 = metatype $@thin Int.Type                  // user: %19
  // function_ref Int.init(_builtinIntegerLiteral:)
  %18 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %19
  %19 = apply %18(%16, %17) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %26
  %20 = integer_literal $Builtin.IntLiteral, 4    // user: %23
  %21 = metatype $@thin Int.Type                  // user: %23
  // function_ref Int.init(_builtinIntegerLiteral:)
  %22 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %23
  %23 = apply %22(%20, %21) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %26
  %24 = metatype $@thin DefaultStringInterpolation.Type // user: %26
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %25 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %26
  %26 = apply %25(%19, %23, %24) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %27
  store %26 to [init] %15 : $*DefaultStringInterpolation // id: %27
  %28 = string_literal utf8 "Name: "              // user: %33
  %29 = integer_literal $Builtin.Word, 6          // user: %33
  %30 = integer_literal $Builtin.Int1, -1         // user: %33
  %31 = metatype $@thin String.Type               // user: %33
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %32 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %33
  %33 = apply %32(%28, %29, %30, %31) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %38, %36
  %34 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %37, %36
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %35 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %36
  %36 = apply %35(%33, %34) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %34 : $*DefaultStringInterpolation   // id: %37
  destroy_value %33 : $String                     // id: %38
  %39 = alloc_stack $String                       // users: %45, %43, %40
  %40 = store_borrow %3 to %39 : $*String
  %41 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %44, %43
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %42 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %43
  %43 = apply %42<String>(%39, %41) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %41 : $*DefaultStringInterpolation   // id: %44
  dealloc_stack %39 : $*String                    // id: %45
  %46 = string_literal utf8 "; Strong: ("         // user: %51
  %47 = integer_literal $Builtin.Word, 11         // user: %51
  %48 = integer_literal $Builtin.Int1, -1         // user: %51
  %49 = metatype $@thin String.Type               // user: %51
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %50 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %51
  %51 = apply %50(%46, %47, %48, %49) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %56, %54
  %52 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %55, %54
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %53 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %54
  %54 = apply %53(%51, %52) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %52 : $*DefaultStringInterpolation   // id: %55
  destroy_value %51 : $String                     // id: %56
  %57 = alloc_stack $Int                          // users: %63, %61, %58
  store %0 to [trivial] %57 : $*Int               // id: %58
  %59 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %62, %61
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %60 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %61
  %61 = apply %60<Int>(%57, %59) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %59 : $*DefaultStringInterpolation   // id: %62
  dealloc_stack %57 : $*Int                       // id: %63
  %64 = string_literal utf8 "); Weak: ("          // user: %69
  %65 = integer_literal $Builtin.Word, 10         // user: %69
  %66 = integer_literal $Builtin.Int1, -1         // user: %69
  %67 = metatype $@thin String.Type               // user: %69
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %68 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %69
  %69 = apply %68(%64, %65, %66, %67) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %74, %72
  %70 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %73, %72
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %71 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %72
  %72 = apply %71(%69, %70) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %70 : $*DefaultStringInterpolation   // id: %73
  destroy_value %69 : $String                     // id: %74
  %75 = alloc_stack $Int                          // users: %81, %79, %76
  store %1 to [trivial] %75 : $*Int               // id: %76
  %77 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %80, %79
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %78 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %79
  %79 = apply %78<Int>(%75, %77) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %77 : $*DefaultStringInterpolation   // id: %80
  dealloc_stack %75 : $*Int                       // id: %81
  %82 = string_literal utf8 "); Unowned("         // user: %87
  %83 = integer_literal $Builtin.Word, 11         // user: %87
  %84 = integer_literal $Builtin.Int1, -1         // user: %87
  %85 = metatype $@thin String.Type               // user: %87
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %86 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %87
  %87 = apply %86(%82, %83, %84, %85) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %92, %90
  %88 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %91, %90
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %89 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %90
  %90 = apply %89(%87, %88) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %88 : $*DefaultStringInterpolation   // id: %91
  destroy_value %87 : $String                     // id: %92
  %93 = alloc_stack $Int                          // users: %99, %97, %94
  store %2 to [trivial] %93 : $*Int               // id: %94
  %95 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %98, %97
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %96 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %97
  %97 = apply %96<Int>(%93, %95) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %95 : $*DefaultStringInterpolation   // id: %98
  dealloc_stack %93 : $*Int                       // id: %99
  %100 = string_literal utf8 ")"                  // user: %105
  %101 = integer_literal $Builtin.Word, 1         // user: %105
  %102 = integer_literal $Builtin.Int1, -1        // user: %105
  %103 = metatype $@thin String.Type              // user: %105
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %104 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %105
  %105 = apply %104(%100, %101, %102, %103) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %110, %108
  %106 = begin_access [modify] [unknown] %15 : $*DefaultStringInterpolation // users: %109, %108
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %107 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %108
  %108 = apply %107(%105, %106) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %106 : $*DefaultStringInterpolation  // id: %109
  destroy_value %105 : $String                    // id: %110
  %111 = load [copy] %15 : $*DefaultStringInterpolation // user: %115
  destroy_value %14 : ${ var DefaultStringInterpolation } // id: %112
  %113 = metatype $@thin String.Type              // user: %115
  // function_ref String.init(stringInterpolation:)
  %114 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %115
  %115 = apply %114(%111, %113) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %117
  %116 = init_existential_addr %13 : $*Any, $String // user: %117
  store %115 to [init] %116 : $*String            // id: %117
  // function_ref default argument 1 of print(_:separator:terminator:)
  %118 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %119
  %119 = apply %118() : $@convention(thin) () -> @owned String // users: %125, %123
  // function_ref default argument 2 of print(_:separator:terminator:)
  %120 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %121
  %121 = apply %120() : $@convention(thin) () -> @owned String // users: %124, %123
  // function_ref print(_:separator:terminator:)
  %122 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %123
  %123 = apply %122(%11, %119, %121) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %121 : $String                    // id: %124
  destroy_value %119 : $String                    // id: %125
  destroy_value %11 : $Array<Any>                 // id: %126
  %127 = tuple ()                                 // user: %128
  return %127 : $()                               // id: %128
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] [_semantics "array.uninitialized_intrinsic"] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer)

// Int.init(_builtinIntegerLiteral:)
sil [transparent] [serialized] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int

// DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
sil [serialized] @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// DefaultStringInterpolation.appendLiteral(_:)
sil [serialized] @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// String.init(stringInterpolation:)
sil [serialized] [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String

// default argument 1 of print(_:separator:terminator:)
sil hidden_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String

// default argument 2 of print(_:separator:terminator:)
sil hidden_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String

// print(_:separator:terminator:)
sil @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()

// closure #2 in foo()
sil private [ossa] @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () {
// %0 "number"                                    // users: %7, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %1
  %2 = metatype $@thin Int.Type                   // user: %10
  %3 = integer_literal $Builtin.IntLiteral, 1     // user: %6
  %4 = metatype $@thin Int.Type                   // user: %6
  // function_ref Int.init(_builtinIntegerLiteral:)
  %5 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %6
  %6 = apply %5(%3, %4) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %10
  %7 = ref_element_addr %0 : $Number, #Number.number // user: %8
  %8 = begin_access [modify] [dynamic] %7 : $*Int // users: %11, %10
  // function_ref static Int.+= infix(_:_:)
  %9 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %10
  %10 = apply %9(%8, %6, %2) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %8 : $*Int                           // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file3fooyyFyycfU0_'

// static Int.+= infix(_:_:)
sil [transparent] [serialized] @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()

// closure #3 in foo()
sil private [ossa] @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %10, %2
// %1 "value"                                     // user: %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %46, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = metatype $@thin Int.Type                   // user: %13
  %6 = integer_literal $Builtin.IntLiteral, 1     // user: %9
  %7 = metatype $@thin Int.Type                   // user: %9
  // function_ref Int.init(_builtinIntegerLiteral:)
  %8 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %9
  %9 = apply %8(%6, %7) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %13
  %10 = ref_element_addr %0 : $Number, #Number.number // user: %11
  %11 = begin_access [modify] [dynamic] %10 : $*Int // users: %14, %13
  // function_ref static Int.+= infix(_:_:)
  %12 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %13
  %13 = apply %12(%11, %9, %5) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %11 : $*Int                          // id: %14
  %15 = integer_literal $Builtin.Word, 1          // user: %17
  // function_ref _allocateUninitializedArray<A>(_:)
  %16 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %17
  %17 = apply %16<Any>(%15) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %18
  (%18, %19) = destructure_tuple %17 : $(Array<Any>, Builtin.RawPointer) // users: %82, %79, %20
  %20 = pointer_to_address %19 : $Builtin.RawPointer to [strict] $*Any // user: %72
  %21 = alloc_box ${ var DefaultStringInterpolation }, var, name "$interpolation" // users: %68, %22
  %22 = project_box %21 : ${ var DefaultStringInterpolation }, 0 // users: %67, %62, %51, %41, %34
  %23 = integer_literal $Builtin.IntLiteral, 3    // user: %26
  %24 = metatype $@thin Int.Type                  // user: %26
  // function_ref Int.init(_builtinIntegerLiteral:)
  %25 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %26
  %26 = apply %25(%23, %24) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %33
  %27 = integer_literal $Builtin.IntLiteral, 1    // user: %30
  %28 = metatype $@thin Int.Type                  // user: %30
  // function_ref Int.init(_builtinIntegerLiteral:)
  %29 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %30
  %30 = apply %29(%27, %28) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %33
  %31 = metatype $@thin DefaultStringInterpolation.Type // user: %33
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %32 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %33
  %33 = apply %32(%26, %30, %31) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %34
  store %33 to [init] %22 : $*DefaultStringInterpolation // id: %34
  %35 = string_literal utf8 "v: "                 // user: %40
  %36 = integer_literal $Builtin.Word, 3          // user: %40
  %37 = integer_literal $Builtin.Int1, -1         // user: %40
  %38 = metatype $@thin String.Type               // user: %40
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %39 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %40
  %40 = apply %39(%35, %36, %37, %38) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %45, %43
  %41 = begin_access [modify] [unknown] %22 : $*DefaultStringInterpolation // users: %44, %43
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %42 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %43
  %43 = apply %42(%40, %41) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %41 : $*DefaultStringInterpolation   // id: %44
  destroy_value %40 : $String                     // id: %45
  %46 = begin_access [read] [unknown] %3 : $*Int  // users: %48, %47
  %47 = load [trivial] %46 : $*Int                // user: %50
  end_access %46 : $*Int                          // id: %48
  %49 = alloc_stack $Int                          // users: %55, %53, %50
  store %47 to [trivial] %49 : $*Int              // id: %50
  %51 = begin_access [modify] [unknown] %22 : $*DefaultStringInterpolation // users: %54, %53
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %52 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %53
  %53 = apply %52<Int>(%49, %51) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %51 : $*DefaultStringInterpolation   // id: %54
  dealloc_stack %49 : $*Int                       // id: %55
  %56 = string_literal utf8 ""                    // user: %61
  %57 = integer_literal $Builtin.Word, 0          // user: %61
  %58 = integer_literal $Builtin.Int1, -1         // user: %61
  %59 = metatype $@thin String.Type               // user: %61
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %60 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %61
  %61 = apply %60(%56, %57, %58, %59) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %66, %64
  %62 = begin_access [modify] [unknown] %22 : $*DefaultStringInterpolation // users: %65, %64
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %63 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %64
  %64 = apply %63(%61, %62) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %62 : $*DefaultStringInterpolation   // id: %65
  destroy_value %61 : $String                     // id: %66
  %67 = load [copy] %22 : $*DefaultStringInterpolation // user: %71
  destroy_value %21 : ${ var DefaultStringInterpolation } // id: %68
  %69 = metatype $@thin String.Type               // user: %71
  // function_ref String.init(stringInterpolation:)
  %70 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %71
  %71 = apply %70(%67, %69) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %73
  %72 = init_existential_addr %20 : $*Any, $String // user: %73
  store %71 to [init] %72 : $*String              // id: %73
  // function_ref default argument 1 of print(_:separator:terminator:)
  %74 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %75
  %75 = apply %74() : $@convention(thin) () -> @owned String // users: %81, %79
  // function_ref default argument 2 of print(_:separator:terminator:)
  %76 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %77
  %77 = apply %76() : $@convention(thin) () -> @owned String // users: %80, %79
  // function_ref print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %79
  %79 = apply %78(%18, %75, %77) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %77 : $String                     // id: %80
  destroy_value %75 : $String                     // id: %81
  destroy_value %18 : $Array<Any>                 // id: %82
  %83 = tuple ()                                  // user: %84
  return %83 : $()                                // id: %84
} // end sil function '$s4file3fooyyFyycfU1_'

// closure #4 in foo()
sil private [ossa] @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () {
// %0 "number"                                    // users: %9, %2
// %1 "empty"                                     // users: %15, %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %3
  %4 = metatype $@thin Int.Type                   // user: %12
  %5 = integer_literal $Builtin.IntLiteral, 1     // user: %8
  %6 = metatype $@thin Int.Type                   // user: %8
  // function_ref Int.init(_builtinIntegerLiteral:)
  %7 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %8
  %8 = apply %7(%5, %6) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %12
  %9 = ref_element_addr %0 : $Number, #Number.number // user: %10
  %10 = begin_access [modify] [dynamic] %9 : $*Int // users: %13, %12
  // function_ref static Int.+= infix(_:_:)
  %11 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %12
  %12 = apply %11(%10, %8, %4) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %10 : $*Int                          // id: %13
  // function_ref Empty.foo()
  %14 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %15
  %15 = apply %14(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %16 = tuple ()                                  // user: %17
  return %16 : $()                                // id: %17
} // end sil function '$s4file3fooyyFyycfU2_'

// closure #5 in foo()
sil private [ossa] @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %12, %3
// %1 "empty"                                     // users: %18, %4
// %2 "value"                                     // user: %5
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty, %2 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %50, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = metatype $@thin Int.Type                   // user: %15
  %8 = integer_literal $Builtin.IntLiteral, 1     // user: %11
  %9 = metatype $@thin Int.Type                   // user: %11
  // function_ref Int.init(_builtinIntegerLiteral:)
  %10 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %11
  %11 = apply %10(%8, %9) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %15
  %12 = ref_element_addr %0 : $Number, #Number.number // user: %13
  %13 = begin_access [modify] [dynamic] %12 : $*Int // users: %16, %15
  // function_ref static Int.+= infix(_:_:)
  %14 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %15
  %15 = apply %14(%13, %11, %7) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %13 : $*Int                          // id: %16
  // function_ref Empty.foo()
  %17 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %18
  %18 = apply %17(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %19 = integer_literal $Builtin.Word, 1          // user: %21
  // function_ref _allocateUninitializedArray<A>(_:)
  %20 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %21
  %21 = apply %20<Any>(%19) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %22
  (%22, %23) = destructure_tuple %21 : $(Array<Any>, Builtin.RawPointer) // users: %86, %83, %24
  %24 = pointer_to_address %23 : $Builtin.RawPointer to [strict] $*Any // user: %76
  %25 = alloc_box ${ var DefaultStringInterpolation }, var, name "$interpolation" // users: %72, %26
  %26 = project_box %25 : ${ var DefaultStringInterpolation }, 0 // users: %71, %66, %55, %45, %38
  %27 = integer_literal $Builtin.IntLiteral, 3    // user: %30
  %28 = metatype $@thin Int.Type                  // user: %30
  // function_ref Int.init(_builtinIntegerLiteral:)
  %29 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %30
  %30 = apply %29(%27, %28) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %37
  %31 = integer_literal $Builtin.IntLiteral, 1    // user: %34
  %32 = metatype $@thin Int.Type                  // user: %34
  // function_ref Int.init(_builtinIntegerLiteral:)
  %33 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %34
  %34 = apply %33(%31, %32) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %37
  %35 = metatype $@thin DefaultStringInterpolation.Type // user: %37
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %36 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %37
  %37 = apply %36(%30, %34, %35) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %38
  store %37 to [init] %26 : $*DefaultStringInterpolation // id: %38
  %39 = string_literal utf8 "v: "                 // user: %44
  %40 = integer_literal $Builtin.Word, 3          // user: %44
  %41 = integer_literal $Builtin.Int1, -1         // user: %44
  %42 = metatype $@thin String.Type               // user: %44
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %43 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %44
  %44 = apply %43(%39, %40, %41, %42) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %49, %47
  %45 = begin_access [modify] [unknown] %26 : $*DefaultStringInterpolation // users: %48, %47
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %46 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %47
  %47 = apply %46(%44, %45) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %45 : $*DefaultStringInterpolation   // id: %48
  destroy_value %44 : $String                     // id: %49
  %50 = begin_access [read] [unknown] %5 : $*Int  // users: %52, %51
  %51 = load [trivial] %50 : $*Int                // user: %54
  end_access %50 : $*Int                          // id: %52
  %53 = alloc_stack $Int                          // users: %59, %57, %54
  store %51 to [trivial] %53 : $*Int              // id: %54
  %55 = begin_access [modify] [unknown] %26 : $*DefaultStringInterpolation // users: %58, %57
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %56 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %57
  %57 = apply %56<Int>(%53, %55) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %55 : $*DefaultStringInterpolation   // id: %58
  dealloc_stack %53 : $*Int                       // id: %59
  %60 = string_literal utf8 ""                    // user: %65
  %61 = integer_literal $Builtin.Word, 0          // user: %65
  %62 = integer_literal $Builtin.Int1, -1         // user: %65
  %63 = metatype $@thin String.Type               // user: %65
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %64 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %65
  %65 = apply %64(%60, %61, %62, %63) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %70, %68
  %66 = begin_access [modify] [unknown] %26 : $*DefaultStringInterpolation // users: %69, %68
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %67 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %68
  %68 = apply %67(%65, %66) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %66 : $*DefaultStringInterpolation   // id: %69
  destroy_value %65 : $String                     // id: %70
  %71 = load [copy] %26 : $*DefaultStringInterpolation // user: %75
  destroy_value %25 : ${ var DefaultStringInterpolation } // id: %72
  %73 = metatype $@thin String.Type               // user: %75
  // function_ref String.init(stringInterpolation:)
  %74 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %75
  %75 = apply %74(%71, %73) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %77
  %76 = init_existential_addr %24 : $*Any, $String // user: %77
  store %75 to [init] %76 : $*String              // id: %77
  // function_ref default argument 1 of print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %79
  %79 = apply %78() : $@convention(thin) () -> @owned String // users: %85, %83
  // function_ref default argument 2 of print(_:separator:terminator:)
  %80 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %81
  %81 = apply %80() : $@convention(thin) () -> @owned String // users: %84, %83
  // function_ref print(_:separator:terminator:)
  %82 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %83
  %83 = apply %82(%22, %79, %81) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %81 : $String                     // id: %84
  destroy_value %79 : $String                     // id: %85
  destroy_value %22 : $Array<Any>                 // id: %86
  %87 = tuple ()                                  // user: %88
  return %87 : $()                                // id: %88
} // end sil function '$s4file3fooyyFyycfU3_'

// Array.init()
sil [serialized] [_semantics "array.init.empty"] @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>

// Array.reserveCapacity(_:)
sil [serialized] [_semantics "array.mutate_unknown"] @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()

// Bool.init(_builtinBooleanLiteral:)
sil [transparent] [serialized] @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool

// default argument 0 of readLine(strippingNewline:)
sil hidden_external [serialized] @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool

// readLine(strippingNewline:)
sil @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String>

// ~= infix<A>(_:_:)
sil [transparent] [serialized] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool

// Array.append(_:)
sil [serialized] [_semantics "array.append_element"] @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()

// Collection.isEmpty.getter
sil [serialized] @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool

// static Bool.! prefix(_:)
sil [transparent] [serialized] @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool

// RangeReplaceableCollection<>.removeLast()
sil [serialized] @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element

// BidirectionalCollection.last.getter
sil [serialized] @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>

sil_vtable Empty {
  #Empty.init!allocator: (Empty.Type) -> () -> Empty : @$s4file5EmptyCACycfC	// Empty.__allocating_init()
  #Empty.deinit!deallocator: @$s4file5EmptyCfD	// Empty.__deallocating_deinit
}

sil_vtable Number {
  #Number.init!allocator: (Number.Type) -> (Int) -> Number : @$s4file6NumberC6numberACSi_tcfC	// Number.__allocating_init(number:)
  #Number.deinit!deallocator: @$s4file6NumberCfD	// Number.__deallocating_deinit
}

sil_vtable Closure {
  #Closure.init!allocator: (Closure.Type) -> (@escaping () -> ()) -> Closure : @$s4file7ClosureCyACyyccfC	// Closure.__allocating_init(_:)
  #Closure.deinit!deallocator: @$s4file7ClosureCfD	// Closure.__deallocating_deinit
}



  *** SIL module after #56, stage Guaranteed Passes, pass 4: AccessEnforcementSelection (access-enforcement-selection)
sil_stage raw

import Builtin
import Swift
import SwiftShims

// main
sil [ossa] @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

// Empty.foo()
sil hidden [ossa] @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4file5EmptyC3fooyyF'

// Empty.deinit
sil hidden [ossa] @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Empty to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file5EmptyCfd'

// Empty.__deallocating_deinit
sil hidden [ossa] @$s4file5EmptyCfD : $@convention(method) (@owned Empty) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  // function_ref Empty.deinit
  %2 = function_ref @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Empty                   // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Empty                          // id: %5
  end_lifetime %0 : $Empty                        // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Empty // user: %8
  dealloc_ref %7 : $Empty                         // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file5EmptyCfD'

// Empty.__allocating_init()
sil hidden [exact_self_class] [ossa] @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty {
// %0 "$metatype"
bb0(%0 : $@thick Empty.Type):
  %1 = alloc_ref $Empty                           // user: %3
  // function_ref Empty.init()
  %2 = function_ref @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Empty) -> @owned Empty // user: %4
  return %3 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfC'

// Empty.init()
sil hidden [ossa] @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = mark_uninitialized [rootself] %0 : $Empty  // users: %4, %3
  %3 = copy_value %2 : $Empty                     // user: %5
  destroy_value %2 : $Empty                       // id: %4
  return %3 : $Empty                              // id: %5
} // end sil function '$s4file5EmptyCACycfc'

// Number.number.getter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivg : $@convention(method) (@guaranteed Number) -> Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*Int   // users: %5, %4
  %4 = load [trivial] %3 : $*Int                  // user: %6
  end_access %3 : $*Int                           // id: %5
  return %4 : $Int                                // id: %6
} // end sil function '$s4file6NumberC6numberSivg'

// Number.number.setter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivs : $@convention(method) (Int, @guaranteed Number) -> () {
// %0 "value"                                     // users: %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : @guaranteed $Number):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %7, %6
  assign %0 to %5 : $*Int                         // id: %6
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9
} // end sil function '$s4file6NumberC6numberSivs'

// Number.number.modify
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivM : $@yield_once @convention(method) (@guaranteed Number) -> @yields @inout Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*Int // users: %5, %8, %4
  yield %3 : $*Int, resume bb1, unwind bb2        // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file6NumberC6numberSivM'

// Number.__allocating_init(number:)
sil hidden [exact_self_class] [ossa] @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number {
// %0 "number"                                    // user: %4
// %1 "$metatype"
bb0(%0 : $Int, %1 : $@thick Number.Type):
  %2 = alloc_ref $Number                          // user: %4
  // function_ref Number.init(number:)
  %3 = function_ref @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (Int, @owned Number) -> @owned Number // user: %5
  return %4 : $Number                             // id: %5
} // end sil function '$s4file6NumberC6numberACSi_tcfC'

// Number.init(number:)
sil hidden [ossa] @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %8, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : @owned $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = mark_uninitialized [rootself] %1 : $Number // users: %12, %11, %5
  %5 = begin_borrow %4 : $Number                  // users: %10, %6
  %6 = ref_element_addr %5 : $Number, #Number.number // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*Int // users: %9, %8
  assign %0 to %7 : $*Int                         // id: %8
  end_access %7 : $*Int                           // id: %9
  end_borrow %5 : $Number                         // id: %10
  %11 = copy_value %4 : $Number                   // user: %13
  destroy_value %4 : $Number                      // id: %12
  return %11 : $Number                            // id: %13
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

// Number.deinit
sil hidden [ossa] @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Number to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file6NumberCfd'

// Number.__deallocating_deinit
sil hidden [ossa] @$s4file6NumberCfD : $@convention(method) (@owned Number) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  // function_ref Number.deinit
  %2 = function_ref @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Number                  // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Number                         // id: %5
  end_lifetime %0 : $Number                       // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Number // user: %8
  dealloc_ref %7 : $Number                        // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file6NumberCfD'

// Closure.closure.getter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvg : $@convention(method) (@guaranteed Closure) -> @owned @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  %4 = load [copy] %3 : $*@callee_guaranteed () -> () // user: %6
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  return %4 : $@callee_guaranteed () -> ()        // id: %6
} // end sil function '$s4file7ClosureC7closureyycvg'

// Closure.closure.setter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvs : $@convention(method) (@owned @callee_guaranteed () -> (), @guaranteed Closure) -> () {
// %0 "value"                                     // users: %11, %4, %2
// %1 "self"                                      // users: %6, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @guaranteed $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "value", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %10, %5
  %5 = copy_value %4 : $@callee_guaranteed () -> () // user: %8
  %6 = ref_element_addr %1 : $Closure, #Closure.closure // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*@callee_guaranteed () -> () // users: %9, %8
  assign %5 to %7 : $*@callee_guaranteed () -> () // id: %8
  end_access %7 : $*@callee_guaranteed () -> ()   // id: %9
  end_borrow %4 : $@callee_guaranteed () -> ()    // id: %10
  destroy_value %0 : $@callee_guaranteed () -> () // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file7ClosureC7closureyycvs'

// Closure.closure.modify
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvM : $@yield_once @convention(method) (@guaranteed Closure) -> @yields @inout @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %8, %4
  yield %3 : $*@callee_guaranteed () -> (), resume bb1, unwind bb2 // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file7ClosureC7closureyycvM'

// Closure.__allocating_init(_:)
sil hidden [exact_self_class] [ossa] @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure {
// %0 "block"                                     // user: %4
// %1 "$metatype"
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : $@thick Closure.Type):
  %2 = alloc_ref $Closure                         // user: %4
  // function_ref Closure.init(_:)
  %3 = function_ref @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %5
  return %4 : $Closure                            // id: %5
} // end sil function '$s4file7ClosureCyACyyccfC'

// Closure.init(_:)
sil hidden [ossa] @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %16, %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @owned $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = mark_uninitialized [rootself] %1 : $Closure // users: %15, %14, %5
  %5 = begin_borrow %4 : $Closure                 // users: %13, %8
  %6 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %12, %7
  %7 = copy_value %6 : $@callee_guaranteed () -> () // user: %10
  %8 = ref_element_addr %5 : $Closure, #Closure.closure // user: %9
  %9 = begin_access [modify] [dynamic] %8 : $*@callee_guaranteed () -> () // users: %11, %10
  assign %7 to %9 : $*@callee_guaranteed () -> () // id: %10
  end_access %9 : $*@callee_guaranteed () -> ()   // id: %11
  end_borrow %6 : $@callee_guaranteed () -> ()    // id: %12
  end_borrow %5 : $Closure                        // id: %13
  %14 = copy_value %4 : $Closure                  // user: %17
  destroy_value %4 : $Closure                     // id: %15
  destroy_value %0 : $@callee_guaranteed () -> () // id: %16
  return %14 : $Closure                           // id: %17
} // end sil function '$s4file7ClosureCyACyyccfc'

// Closure.deinit
sil hidden [ossa] @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %6, %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [deinit] [static] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  destroy_addr %3 : $*@callee_guaranteed () -> () // id: %4
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = unchecked_ref_cast %0 : $Closure to $Builtin.NativeObject // user: %7
  %7 = unchecked_ownership_conversion %6 : $Builtin.NativeObject, @guaranteed to @owned // user: %8
  return %7 : $Builtin.NativeObject               // id: %8
} // end sil function '$s4file7ClosureCfd'

// Closure.__deallocating_deinit
sil hidden [ossa] @$s4file7ClosureCfD : $@convention(method) (@owned Closure) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  // function_ref Closure.deinit
  %2 = function_ref @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Closure                 // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Closure                        // id: %5
  end_lifetime %0 : $Closure                      // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Closure // user: %8
  dealloc_ref %7 : $Closure                       // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file7ClosureCfD'

// foo()
sil hidden [ossa] @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %629, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %628, %107, %92, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %13
  %8 = integer_literal $Builtin.IntLiteral, 0     // user: %11
  %9 = metatype $@thin Int.Type                   // user: %11
  // function_ref Int.init(_builtinIntegerLiteral:)
  %10 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %11
  %11 = apply %10(%8, %9) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %13
  // function_ref Number.__allocating_init(number:)
  %12 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %13
  %13 = apply %12(%11, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %627, %103, %88, %77, %68, %14
  debug_value %13 : $Number, let, name "number"   // id: %14
  %15 = integer_literal $Builtin.Word, 1          // user: %17
  // function_ref _allocateUninitializedArray<A>(_:)
  %16 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %17
  %17 = apply %16<Any>(%15) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %18
  (%18, %19) = destructure_tuple %17 : $(Array<Any>, Builtin.RawPointer) // users: %37, %34, %20
  %20 = pointer_to_address %19 : $Builtin.RawPointer to [strict] $*Any // user: %27
  %21 = string_literal utf8 "===== Did init"      // user: %26
  %22 = integer_literal $Builtin.Word, 14         // user: %26
  %23 = integer_literal $Builtin.Int1, -1         // user: %26
  %24 = metatype $@thin String.Type               // user: %26
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %25 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %26 = apply %25(%21, %22, %23, %24) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %27 = init_existential_addr %20 : $*Any, $String // user: %28
  store %26 to [init] %27 : $*String              // id: %28
  // function_ref default argument 1 of print(_:separator:terminator:)
  %29 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %30
  %30 = apply %29() : $@convention(thin) () -> @owned String // users: %36, %34
  // function_ref default argument 2 of print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %32
  %32 = apply %31() : $@convention(thin) () -> @owned String // users: %35, %34
  // function_ref print(_:separator:terminator:)
  %33 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %34
  %34 = apply %33(%18, %30, %32) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %32 : $String                     // id: %35
  destroy_value %30 : $String                     // id: %36
  destroy_value %18 : $Array<Any>                 // id: %37
  %38 = integer_literal $Builtin.Word, 1          // user: %40
  // function_ref _allocateUninitializedArray<A>(_:)
  %39 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %40
  %40 = apply %39<Any>(%38) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %41
  (%41, %42) = destructure_tuple %40 : $(Array<Any>, Builtin.RawPointer) // users: %60, %57, %43
  %43 = pointer_to_address %42 : $Builtin.RawPointer to [strict] $*Any // user: %50
  %44 = string_literal utf8 "===== Did hook"      // user: %49
  %45 = integer_literal $Builtin.Word, 14         // user: %49
  %46 = integer_literal $Builtin.Int1, -1         // user: %49
  %47 = metatype $@thin String.Type               // user: %49
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %48 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %49
  %49 = apply %48(%44, %45, %46, %47) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %51
  %50 = init_existential_addr %43 : $*Any, $String // user: %51
  store %49 to [init] %50 : $*String              // id: %51
  // function_ref default argument 1 of print(_:separator:terminator:)
  %52 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %53
  %53 = apply %52() : $@convention(thin) () -> @owned String // users: %59, %57
  // function_ref default argument 2 of print(_:separator:terminator:)
  %54 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %55
  %55 = apply %54() : $@convention(thin) () -> @owned String // users: %58, %57
  // function_ref print(_:separator:terminator:)
  %56 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %57
  %57 = apply %56(%41, %53, %55) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %55 : $String                     // id: %58
  destroy_value %53 : $String                     // id: %59
  destroy_value %41 : $Array<Any>                 // id: %60
  %61 = alloc_box ${ var Int }, var, name "value" // users: %626, %114, %83, %62
  %62 = project_box %61 : ${ var Int }, 0         // users: %463, %115, %84, %67
  %63 = integer_literal $Builtin.IntLiteral, 0    // user: %66
  %64 = metatype $@thin Int.Type                  // user: %66
  // function_ref Int.init(_builtinIntegerLiteral:)
  %65 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %66
  %66 = apply %65(%63, %64) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %67
  store %66 to [trivial] %62 : $*Int              // id: %67
  %68 = begin_borrow %13 : $Number                // users: %71, %69
  %69 = copy_value %68 : $Number                  // users: %76, %73, %70
  debug_value %69 : $Number, let, name "number"   // id: %70
  end_borrow %68 : $Number                        // id: %71
  // function_ref closure #2 in foo()
  %72 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %74
  %73 = copy_value %69 : $Number                  // user: %74
  %74 = partial_apply [callee_guaranteed] %72(%73) : $@convention(thin) (@guaranteed Number) -> () // users: %625, %246, %75
  debug_value %74 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %75
  destroy_value %69 : $Number                     // id: %76
  %77 = begin_borrow %13 : $Number                // users: %80, %78
  %78 = copy_value %77 : $Number                  // users: %87, %82, %79
  debug_value %78 : $Number, let, name "number"   // id: %79
  end_borrow %77 : $Number                        // id: %80
  // function_ref closure #3 in foo()
  %81 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %85
  %82 = copy_value %78 : $Number                  // user: %85
  %83 = copy_value %61 : ${ var Int }             // user: %85
  mark_function_escape %62 : $*Int                // id: %84
  %85 = partial_apply [callee_guaranteed] %81(%82, %83) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %624, %285, %86
  debug_value %85 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %86
  destroy_value %78 : $Number                     // id: %87
  %88 = begin_borrow %13 : $Number                // users: %91, %89
  %89 = copy_value %88 : $Number                  // users: %102, %97, %90
  debug_value %89 : $Number, let, name "number"   // id: %90
  end_borrow %88 : $Number                        // id: %91
  %92 = begin_borrow %5 : $Empty                  // users: %95, %93
  %93 = copy_value %92 : $Empty                   // users: %101, %98, %94
  debug_value %93 : $Empty, let, name "empty"     // id: %94
  end_borrow %92 : $Empty                         // id: %95
  // function_ref closure #4 in foo()
  %96 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %99
  %97 = copy_value %89 : $Number                  // user: %99
  %98 = copy_value %93 : $Empty                   // user: %99
  %99 = partial_apply [callee_guaranteed] %96(%97, %98) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %623, %324, %100
  debug_value %99 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %100
  destroy_value %93 : $Empty                      // id: %101
  destroy_value %89 : $Number                     // id: %102
  %103 = begin_borrow %13 : $Number               // users: %106, %104
  %104 = copy_value %103 : $Number                // users: %119, %112, %105
  debug_value %104 : $Number, let, name "number"  // id: %105
  end_borrow %103 : $Number                       // id: %106
  %107 = begin_borrow %5 : $Empty                 // users: %110, %108
  %108 = copy_value %107 : $Empty                 // users: %118, %113, %109
  debug_value %108 : $Empty, let, name "empty"    // id: %109
  end_borrow %107 : $Empty                        // id: %110
  // function_ref closure #5 in foo()
  %111 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %116
  %112 = copy_value %104 : $Number                // user: %116
  %113 = copy_value %108 : $Empty                 // user: %116
  %114 = copy_value %61 : ${ var Int }            // user: %116
  mark_function_escape %62 : $*Int                // id: %115
  %116 = partial_apply [callee_guaranteed] %111(%112, %113, %114) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %622, %363, %117
  debug_value %116 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %117
  destroy_value %108 : $Empty                     // id: %118
  destroy_value %104 : $Number                    // id: %119
  %120 = integer_literal $Builtin.Word, 1         // user: %122
  // function_ref _allocateUninitializedArray<A>(_:)
  %121 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %122
  %122 = apply %121<Any>(%120) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %123
  (%123, %124) = destructure_tuple %122 : $(Array<Any>, Builtin.RawPointer) // users: %142, %139, %125
  %125 = pointer_to_address %124 : $Builtin.RawPointer to [strict] $*Any // user: %132
  %126 = string_literal utf8 "===== Did init closures" // user: %131
  %127 = integer_literal $Builtin.Word, 23        // user: %131
  %128 = integer_literal $Builtin.Int1, -1        // user: %131
  %129 = metatype $@thin String.Type              // user: %131
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %130 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %131
  %131 = apply %130(%126, %127, %128, %129) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %133
  %132 = init_existential_addr %125 : $*Any, $String // user: %133
  store %131 to [init] %132 : $*String            // id: %133
  // function_ref default argument 1 of print(_:separator:terminator:)
  %134 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %135
  %135 = apply %134() : $@convention(thin) () -> @owned String // users: %141, %139
  // function_ref default argument 2 of print(_:separator:terminator:)
  %136 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %137
  %137 = apply %136() : $@convention(thin) () -> @owned String // users: %140, %139
  // function_ref print(_:separator:terminator:)
  %138 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %139
  %139 = apply %138(%123, %135, %137) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %137 : $String                    // id: %140
  destroy_value %135 : $String                    // id: %141
  destroy_value %123 : $Array<Any>                // id: %142
  %143 = alloc_box ${ var Array<Closure> }, var, name "storage" // users: %621, %144
  %144 = project_box %143 : ${ var Array<Closure> }, 0 // users: %493, %423, %402, %370, %331, %292, %253, %153, %148
  %145 = metatype $@thin Array<Closure>.Type      // user: %147
  // function_ref Array.init()
  %146 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %147
  %147 = apply %146<Closure>(%145) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %148
  store %147 to [init] %144 : $*Array<Closure>    // id: %148
  %149 = integer_literal $Builtin.IntLiteral, 100 // user: %152
  %150 = metatype $@thin Int.Type                 // user: %152
  // function_ref Int.init(_builtinIntegerLiteral:)
  %151 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %152
  %152 = apply %151(%149, %150) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %155
  %153 = begin_access [modify] [static] %144 : $*Array<Closure> // users: %156, %155
  // function_ref Array.reserveCapacity(_:)
  %154 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %155
  %155 = apply %154<Closure>(%152, %153) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %153 : $*Array<Closure>              // id: %156
  %157 = integer_literal $Builtin.Word, 1         // user: %159
  // function_ref _allocateUninitializedArray<A>(_:)
  %158 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %159
  %159 = apply %158<Any>(%157) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %160
  (%160, %161) = destructure_tuple %159 : $(Array<Any>, Builtin.RawPointer) // users: %179, %176, %162
  %162 = pointer_to_address %161 : $Builtin.RawPointer to [strict] $*Any // user: %169
  %163 = string_literal utf8 "===== Did init array" // user: %168
  %164 = integer_literal $Builtin.Word, 20        // user: %168
  %165 = integer_literal $Builtin.Int1, -1        // user: %168
  %166 = metatype $@thin String.Type              // user: %168
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %167 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %168
  %168 = apply %167(%163, %164, %165, %166) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %170
  %169 = init_existential_addr %162 : $*Any, $String // user: %170
  store %168 to [init] %169 : $*String            // id: %170
  // function_ref default argument 1 of print(_:separator:terminator:)
  %171 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %172
  %172 = apply %171() : $@convention(thin) () -> @owned String // users: %178, %176
  // function_ref default argument 2 of print(_:separator:terminator:)
  %173 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %174
  %174 = apply %173() : $@convention(thin) () -> @owned String // users: %177, %176
  // function_ref print(_:separator:terminator:)
  %175 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %176
  %176 = apply %175(%160, %172, %174) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %174 : $String                    // id: %177
  destroy_value %172 : $String                    // id: %178
  destroy_value %160 : $Array<Any>                // id: %179
  %180 = alloc_box ${ var Bool }, var, name "run" // users: %620, %181
  %181 = project_box %180 : ${ var Bool }, 0      // users: %564, %188, %186
  %182 = integer_literal $Builtin.Int1, -1        // user: %185
  %183 = metatype $@thin Bool.Type                // user: %185
  // function_ref Bool.init(_builtinBooleanLiteral:)
  %184 = function_ref @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %185
  %185 = apply %184(%182, %183) : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %186
  store %185 to [trivial] %181 : $*Bool           // id: %186
  br bb1                                          // id: %187

bb1:                                              // Preds: bb25 bb0
  %188 = begin_access [read] [static] %181 : $*Bool // users: %189, %191
  %189 = struct_element_addr %188 : $*Bool, #Bool._value // user: %190
  %190 = load [trivial] %189 : $*Builtin.Int1     // user: %192
  end_access %188 : $*Bool                        // id: %191
  cond_br %190, bb2, bb26                         // id: %192

bb2:                                              // Preds: bb1
  %193 = integer_literal $Builtin.Word, 1         // user: %195
  // function_ref _allocateUninitializedArray<A>(_:)
  %194 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %195
  %195 = apply %194<Any>(%193) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %196
  (%196, %197) = destructure_tuple %195 : $(Array<Any>, Builtin.RawPointer) // users: %215, %212, %198
  %198 = pointer_to_address %197 : $Builtin.RawPointer to [strict] $*Any // user: %205
  %199 = string_literal utf8 "===== Ask"          // user: %204
  %200 = integer_literal $Builtin.Word, 9         // user: %204
  %201 = integer_literal $Builtin.Int1, -1        // user: %204
  %202 = metatype $@thin String.Type              // user: %204
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %203 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %204
  %204 = apply %203(%199, %200, %201, %202) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %206
  %205 = init_existential_addr %198 : $*Any, $String // user: %206
  store %204 to [init] %205 : $*String            // id: %206
  // function_ref default argument 1 of print(_:separator:terminator:)
  %207 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %208
  %208 = apply %207() : $@convention(thin) () -> @owned String // users: %214, %212
  // function_ref default argument 2 of print(_:separator:terminator:)
  %209 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %210
  %210 = apply %209() : $@convention(thin) () -> @owned String // users: %213, %212
  // function_ref print(_:separator:terminator:)
  %211 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %212
  %212 = apply %211(%196, %208, %210) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %210 : $String                    // id: %213
  destroy_value %208 : $String                    // id: %214
  destroy_value %196 : $Array<Any>                // id: %215
  // function_ref default argument 0 of readLine(strippingNewline:)
  %216 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %217
  %217 = apply %216() : $@convention(thin) () -> Bool // user: %219
  // function_ref readLine(strippingNewline:)
  %218 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %219
  %219 = apply %218(%217) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %595, %221, %220
  debug_value %219 : $Optional<String>, let, name "line" // id: %220
  %221 = begin_borrow %219 : $Optional<String>    // users: %593, %567, %537, %529, %470, %467, %435, %430, %378, %375, %339, %336, %300, %297, %261, %258, %222
  %222 = copy_value %221 : $Optional<String>      // users: %244, %260, %233, %223
  debug_value %222 : $Optional<String>, let, name "$match" // id: %223
  %224 = string_literal utf8 "push1"              // user: %229
  %225 = integer_literal $Builtin.Word, 5         // user: %229
  %226 = integer_literal $Builtin.Int1, -1        // user: %229
  %227 = metatype $@thin String.Type              // user: %229
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %228 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %229
  %229 = apply %228(%224, %225, %226, %227) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %230
  %230 = enum $Optional<String>, #Optional.some!enumelt, %229 : $String // user: %232
  %231 = alloc_stack $Optional<String>            // users: %241, %240, %237, %232
  store %230 to [init] %231 : $*Optional<String>  // id: %232
  %233 = begin_borrow %222 : $Optional<String>    // users: %239, %235
  %234 = alloc_stack $Optional<String>            // users: %238, %237, %235
  %235 = store_borrow %233 to %234 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %236 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %237
  %237 = apply %236<String?>(%231, %234) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %242
  dealloc_stack %234 : $*Optional<String>         // id: %238
  end_borrow %233 : $Optional<String>             // id: %239
  destroy_addr %231 : $*Optional<String>          // id: %240
  dealloc_stack %231 : $*Optional<String>         // id: %241
  %242 = struct_extract %237 : $Bool, #Bool._value // user: %243
  cond_br %242, bb3, bb4                          // id: %243

bb3:                                              // Preds: bb2
  destroy_value %222 : $Optional<String>          // id: %244
  %245 = metatype $@thick Closure.Type            // user: %249
  %246 = begin_borrow %74 : $@callee_guaranteed () -> () // users: %250, %247
  %247 = copy_value %246 : $@callee_guaranteed () -> () // user: %249
  // function_ref Closure.__allocating_init(_:)
  %248 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %249
  %249 = apply %248(%247, %245) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %252
  end_borrow %246 : $@callee_guaranteed () -> ()  // id: %250
  %251 = alloc_stack $Closure                     // users: %257, %255, %252
  store %249 to [init] %251 : $*Closure           // id: %252
  %253 = begin_access [modify] [static] %144 : $*Array<Closure> // users: %256, %255
  // function_ref Array.append(_:)
  %254 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %255
  %255 = apply %254<Closure>(%251, %253) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %253 : $*Array<Closure>              // id: %256
  dealloc_stack %251 : $*Closure                  // id: %257
  end_borrow %221 : $Optional<String>             // id: %258
  br bb25                                         // id: %259

bb4:                                              // Preds: bb2
  destroy_value %222 : $Optional<String>          // id: %260
  %261 = copy_value %221 : $Optional<String>      // users: %283, %299, %272, %262
  debug_value %261 : $Optional<String>, let, name "$match" // id: %262
  %263 = string_literal utf8 "push1_1"            // user: %268
  %264 = integer_literal $Builtin.Word, 7         // user: %268
  %265 = integer_literal $Builtin.Int1, -1        // user: %268
  %266 = metatype $@thin String.Type              // user: %268
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %267 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %268
  %268 = apply %267(%263, %264, %265, %266) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %269
  %269 = enum $Optional<String>, #Optional.some!enumelt, %268 : $String // user: %271
  %270 = alloc_stack $Optional<String>            // users: %280, %279, %276, %271
  store %269 to [init] %270 : $*Optional<String>  // id: %271
  %272 = begin_borrow %261 : $Optional<String>    // users: %278, %274
  %273 = alloc_stack $Optional<String>            // users: %277, %276, %274
  %274 = store_borrow %272 to %273 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %275 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %276
  %276 = apply %275<String?>(%270, %273) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %281
  dealloc_stack %273 : $*Optional<String>         // id: %277
  end_borrow %272 : $Optional<String>             // id: %278
  destroy_addr %270 : $*Optional<String>          // id: %279
  dealloc_stack %270 : $*Optional<String>         // id: %280
  %281 = struct_extract %276 : $Bool, #Bool._value // user: %282
  cond_br %281, bb5, bb6                          // id: %282

bb5:                                              // Preds: bb4
  destroy_value %261 : $Optional<String>          // id: %283
  %284 = metatype $@thick Closure.Type            // user: %288
  %285 = begin_borrow %85 : $@callee_guaranteed () -> () // users: %289, %286
  %286 = copy_value %285 : $@callee_guaranteed () -> () // user: %288
  // function_ref Closure.__allocating_init(_:)
  %287 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %288
  %288 = apply %287(%286, %284) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %291
  end_borrow %285 : $@callee_guaranteed () -> ()  // id: %289
  %290 = alloc_stack $Closure                     // users: %296, %294, %291
  store %288 to [init] %290 : $*Closure           // id: %291
  %292 = begin_access [modify] [static] %144 : $*Array<Closure> // users: %295, %294
  // function_ref Array.append(_:)
  %293 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %294
  %294 = apply %293<Closure>(%290, %292) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %292 : $*Array<Closure>              // id: %295
  dealloc_stack %290 : $*Closure                  // id: %296
  end_borrow %221 : $Optional<String>             // id: %297
  br bb25                                         // id: %298

bb6:                                              // Preds: bb4
  destroy_value %261 : $Optional<String>          // id: %299
  %300 = copy_value %221 : $Optional<String>      // users: %322, %338, %311, %301
  debug_value %300 : $Optional<String>, let, name "$match" // id: %301
  %302 = string_literal utf8 "push2"              // user: %307
  %303 = integer_literal $Builtin.Word, 5         // user: %307
  %304 = integer_literal $Builtin.Int1, -1        // user: %307
  %305 = metatype $@thin String.Type              // user: %307
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %306 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %307
  %307 = apply %306(%302, %303, %304, %305) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %308
  %308 = enum $Optional<String>, #Optional.some!enumelt, %307 : $String // user: %310
  %309 = alloc_stack $Optional<String>            // users: %319, %318, %315, %310
  store %308 to [init] %309 : $*Optional<String>  // id: %310
  %311 = begin_borrow %300 : $Optional<String>    // users: %317, %313
  %312 = alloc_stack $Optional<String>            // users: %316, %315, %313
  %313 = store_borrow %311 to %312 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %314 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %315
  %315 = apply %314<String?>(%309, %312) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %320
  dealloc_stack %312 : $*Optional<String>         // id: %316
  end_borrow %311 : $Optional<String>             // id: %317
  destroy_addr %309 : $*Optional<String>          // id: %318
  dealloc_stack %309 : $*Optional<String>         // id: %319
  %320 = struct_extract %315 : $Bool, #Bool._value // user: %321
  cond_br %320, bb7, bb8                          // id: %321

bb7:                                              // Preds: bb6
  destroy_value %300 : $Optional<String>          // id: %322
  %323 = metatype $@thick Closure.Type            // user: %327
  %324 = begin_borrow %99 : $@callee_guaranteed () -> () // users: %328, %325
  %325 = copy_value %324 : $@callee_guaranteed () -> () // user: %327
  // function_ref Closure.__allocating_init(_:)
  %326 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %327
  %327 = apply %326(%325, %323) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %330
  end_borrow %324 : $@callee_guaranteed () -> ()  // id: %328
  %329 = alloc_stack $Closure                     // users: %335, %333, %330
  store %327 to [init] %329 : $*Closure           // id: %330
  %331 = begin_access [modify] [static] %144 : $*Array<Closure> // users: %334, %333
  // function_ref Array.append(_:)
  %332 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %333
  %333 = apply %332<Closure>(%329, %331) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %331 : $*Array<Closure>              // id: %334
  dealloc_stack %329 : $*Closure                  // id: %335
  end_borrow %221 : $Optional<String>             // id: %336
  br bb25                                         // id: %337

bb8:                                              // Preds: bb6
  destroy_value %300 : $Optional<String>          // id: %338
  %339 = copy_value %221 : $Optional<String>      // users: %361, %377, %350, %340
  debug_value %339 : $Optional<String>, let, name "$match" // id: %340
  %341 = string_literal utf8 "push2_1"            // user: %346
  %342 = integer_literal $Builtin.Word, 7         // user: %346
  %343 = integer_literal $Builtin.Int1, -1        // user: %346
  %344 = metatype $@thin String.Type              // user: %346
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %345 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %346
  %346 = apply %345(%341, %342, %343, %344) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %347
  %347 = enum $Optional<String>, #Optional.some!enumelt, %346 : $String // user: %349
  %348 = alloc_stack $Optional<String>            // users: %358, %357, %354, %349
  store %347 to [init] %348 : $*Optional<String>  // id: %349
  %350 = begin_borrow %339 : $Optional<String>    // users: %356, %352
  %351 = alloc_stack $Optional<String>            // users: %355, %354, %352
  %352 = store_borrow %350 to %351 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %353 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %354
  %354 = apply %353<String?>(%348, %351) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %359
  dealloc_stack %351 : $*Optional<String>         // id: %355
  end_borrow %350 : $Optional<String>             // id: %356
  destroy_addr %348 : $*Optional<String>          // id: %357
  dealloc_stack %348 : $*Optional<String>         // id: %358
  %359 = struct_extract %354 : $Bool, #Bool._value // user: %360
  cond_br %359, bb9, bb10                         // id: %360

bb9:                                              // Preds: bb8
  destroy_value %339 : $Optional<String>          // id: %361
  %362 = metatype $@thick Closure.Type            // user: %366
  %363 = begin_borrow %116 : $@callee_guaranteed () -> () // users: %367, %364
  %364 = copy_value %363 : $@callee_guaranteed () -> () // user: %366
  // function_ref Closure.__allocating_init(_:)
  %365 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %366
  %366 = apply %365(%364, %362) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %369
  end_borrow %363 : $@callee_guaranteed () -> ()  // id: %367
  %368 = alloc_stack $Closure                     // users: %374, %372, %369
  store %366 to [init] %368 : $*Closure           // id: %369
  %370 = begin_access [modify] [static] %144 : $*Array<Closure> // users: %373, %372
  // function_ref Array.append(_:)
  %371 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %372
  %372 = apply %371<Closure>(%368, %370) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %370 : $*Array<Closure>              // id: %373
  dealloc_stack %368 : $*Closure                  // id: %374
  end_borrow %221 : $Optional<String>             // id: %375
  br bb25                                         // id: %376

bb10:                                             // Preds: bb8
  destroy_value %339 : $Optional<String>          // id: %377
  %378 = copy_value %221 : $Optional<String>      // users: %400, %433, %389, %379
  debug_value %378 : $Optional<String>, let, name "$match" // id: %379
  %380 = string_literal utf8 "pop"                // user: %385
  %381 = integer_literal $Builtin.Word, 3         // user: %385
  %382 = integer_literal $Builtin.Int1, -1        // user: %385
  %383 = metatype $@thin String.Type              // user: %385
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %384 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %385
  %385 = apply %384(%380, %381, %382, %383) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %386
  %386 = enum $Optional<String>, #Optional.some!enumelt, %385 : $String // user: %388
  %387 = alloc_stack $Optional<String>            // users: %397, %396, %393, %388
  store %386 to [init] %387 : $*Optional<String>  // id: %388
  %389 = begin_borrow %378 : $Optional<String>    // users: %395, %391
  %390 = alloc_stack $Optional<String>            // users: %394, %393, %391
  %391 = store_borrow %389 to %390 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %392 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %393
  %393 = apply %392<String?>(%387, %390) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %398
  dealloc_stack %390 : $*Optional<String>         // id: %394
  end_borrow %389 : $Optional<String>             // id: %395
  destroy_addr %387 : $*Optional<String>          // id: %396
  dealloc_stack %387 : $*Optional<String>         // id: %397
  %398 = struct_extract %393 : $Bool, #Bool._value // user: %399
  cond_br %398, bb11, bb14                        // id: %399

bb11:                                             // Preds: bb10
  destroy_value %378 : $Optional<String>          // id: %400
  %401 = metatype $@thin Bool.Type                // user: %417
  %402 = begin_access [read] [static] %144 : $*Array<Closure> // users: %404, %403
  %403 = load [copy] %402 : $*Array<Closure>      // users: %415, %405
  end_access %402 : $*Array<Closure>              // id: %404
  %405 = begin_borrow %403 : $Array<Closure>      // users: %414, %407
  %406 = alloc_stack $Array<Closure>              // users: %419, %408, %407
  %407 = store_borrow %405 to %406 : $*Array<Closure>
  %408 = load_borrow %406 : $*Array<Closure>      // users: %418, %410
  %409 = alloc_stack $Array<Closure>              // users: %413, %412, %410
  %410 = store_borrow %408 to %409 : $*Array<Closure>
  // function_ref Collection.isEmpty.getter
  %411 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %412
  %412 = apply %411<[Closure]>(%409) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %417
  dealloc_stack %409 : $*Array<Closure>           // id: %413
  end_borrow %405 : $Array<Closure>               // id: %414
  destroy_value %403 : $Array<Closure>            // id: %415
  // function_ref static Bool.! prefix(_:)
  %416 = function_ref @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool // user: %417
  %417 = apply %416(%412, %401) : $@convention(method) (Bool, @thin Bool.Type) -> Bool // user: %420
  end_borrow %408 : $Array<Closure>               // id: %418
  dealloc_stack %406 : $*Array<Closure>           // id: %419
  %420 = struct_extract %417 : $Bool, #Bool._value // user: %421
  cond_br %420, bb12, bb13                        // id: %421

bb12:                                             // Preds: bb11
  %422 = alloc_stack $Closure                     // users: %429, %427, %425
  %423 = begin_access [modify] [static] %144 : $*Array<Closure> // users: %426, %425
  // function_ref RangeReplaceableCollection<>.removeLast()
  %424 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %425
  %425 = apply %424<[Closure]>(%422, %423) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %423 : $*Array<Closure>              // id: %426
  %427 = load [take] %422 : $*Closure             // user: %428
  destroy_value %427 : $Closure                   // id: %428
  dealloc_stack %422 : $*Closure                  // id: %429
  end_borrow %221 : $Optional<String>             // id: %430
  br bb25                                         // id: %431

bb13:                                             // Preds: bb11
  br bb15                                         // id: %432

bb14:                                             // Preds: bb10
  destroy_value %378 : $Optional<String>          // id: %433
  br bb15                                         // id: %434

bb15:                                             // Preds: bb13 bb14
  %435 = copy_value %221 : $Optional<String>      // users: %457, %469, %446, %436
  debug_value %435 : $Optional<String>, let, name "$match" // id: %436
  %437 = string_literal utf8 "inc"                // user: %442
  %438 = integer_literal $Builtin.Word, 3         // user: %442
  %439 = integer_literal $Builtin.Int1, -1        // user: %442
  %440 = metatype $@thin String.Type              // user: %442
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %441 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %442
  %442 = apply %441(%437, %438, %439, %440) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %443
  %443 = enum $Optional<String>, #Optional.some!enumelt, %442 : $String // user: %445
  %444 = alloc_stack $Optional<String>            // users: %454, %453, %450, %445
  store %443 to [init] %444 : $*Optional<String>  // id: %445
  %446 = begin_borrow %435 : $Optional<String>    // users: %452, %448
  %447 = alloc_stack $Optional<String>            // users: %451, %450, %448
  %448 = store_borrow %446 to %447 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %449 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %450
  %450 = apply %449<String?>(%444, %447) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %455
  dealloc_stack %447 : $*Optional<String>         // id: %451
  end_borrow %446 : $Optional<String>             // id: %452
  destroy_addr %444 : $*Optional<String>          // id: %453
  dealloc_stack %444 : $*Optional<String>         // id: %454
  %455 = struct_extract %450 : $Bool, #Bool._value // user: %456
  cond_br %455, bb16, bb17                        // id: %456

bb16:                                             // Preds: bb15
  destroy_value %435 : $Optional<String>          // id: %457
  %458 = metatype $@thin Int.Type                 // user: %465
  %459 = integer_literal $Builtin.IntLiteral, 1   // user: %462
  %460 = metatype $@thin Int.Type                 // user: %462
  // function_ref Int.init(_builtinIntegerLiteral:)
  %461 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %462
  %462 = apply %461(%459, %460) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %465
  %463 = begin_access [modify] [dynamic] %62 : $*Int // users: %466, %465
  // function_ref static Int.+= infix(_:_:)
  %464 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %465
  %465 = apply %464(%463, %462, %458) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %463 : $*Int                         // id: %466
  end_borrow %221 : $Optional<String>             // id: %467
  br bb25                                         // id: %468

bb17:                                             // Preds: bb15
  destroy_value %435 : $Optional<String>          // id: %469
  %470 = copy_value %221 : $Optional<String>      // users: %492, %536, %481, %471
  debug_value %470 : $Optional<String>, let, name "$match" // id: %471
  %472 = string_literal utf8 "exec"               // user: %477
  %473 = integer_literal $Builtin.Word, 4         // user: %477
  %474 = integer_literal $Builtin.Int1, -1        // user: %477
  %475 = metatype $@thin String.Type              // user: %477
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %476 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %477
  %477 = apply %476(%472, %473, %474, %475) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %478
  %478 = enum $Optional<String>, #Optional.some!enumelt, %477 : $String // user: %480
  %479 = alloc_stack $Optional<String>            // users: %489, %488, %485, %480
  store %478 to [init] %479 : $*Optional<String>  // id: %480
  %481 = begin_borrow %470 : $Optional<String>    // users: %487, %483
  %482 = alloc_stack $Optional<String>            // users: %486, %485, %483
  %483 = store_borrow %481 to %482 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %484 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %485
  %485 = apply %484<String?>(%479, %482) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %490
  dealloc_stack %482 : $*Optional<String>         // id: %486
  end_borrow %481 : $Optional<String>             // id: %487
  destroy_addr %479 : $*Optional<String>          // id: %488
  dealloc_stack %479 : $*Optional<String>         // id: %489
  %490 = struct_extract %485 : $Bool, #Bool._value // user: %491
  cond_br %490, bb18, bb22                        // id: %491

bb18:                                             // Preds: bb17
  destroy_value %470 : $Optional<String>          // id: %492
  %493 = begin_access [read] [static] %144 : $*Array<Closure> // users: %495, %494
  %494 = load [copy] %493 : $*Array<Closure>      // users: %508, %496
  end_access %493 : $*Array<Closure>              // id: %495
  %496 = begin_borrow %494 : $Array<Closure>      // users: %507, %498
  %497 = alloc_stack $Array<Closure>              // users: %526, %533, %499, %498
  %498 = store_borrow %496 to %497 : $*Array<Closure>
  %499 = load_borrow %497 : $*Array<Closure>      // users: %525, %532, %502
  %500 = alloc_stack $Optional<Closure>           // users: %524, %531, %506, %504
  %501 = alloc_stack $Array<Closure>              // users: %505, %504, %502
  %502 = store_borrow %499 to %501 : $*Array<Closure>
  // function_ref BidirectionalCollection.last.getter
  %503 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %504
  %504 = apply %503<[Closure]>(%500, %501) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %501 : $*Array<Closure>           // id: %505
  %506 = load [take] %500 : $*Optional<Closure>   // user: %509
  end_borrow %496 : $Array<Closure>               // id: %507
  destroy_value %494 : $Array<Closure>            // id: %508
  switch_enum %506 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %509

// %510                                           // users: %517, %511
bb19(%510 : @owned $Closure):                     // Preds: bb18
  %511 = begin_borrow %510 : $Closure             // users: %516, %512
  %512 = ref_element_addr %511 : $Closure, #Closure.closure // user: %513
  %513 = begin_access [read] [dynamic] %512 : $*@callee_guaranteed () -> () // users: %515, %514
  %514 = load [copy] %513 : $*@callee_guaranteed () -> () // users: %523, %518
  end_access %513 : $*@callee_guaranteed () -> () // id: %515
  end_borrow %511 : $Closure                      // id: %516
  destroy_value %510 : $Closure                   // id: %517
  %518 = begin_borrow %514 : $@callee_guaranteed () -> () // users: %520, %519
  %519 = apply %518() : $@callee_guaranteed () -> ()
  end_borrow %518 : $@callee_guaranteed () -> ()  // id: %520
  %521 = tuple ()                                 // user: %522
  %522 = enum $Optional<()>, #Optional.some!enumelt, %521 : $() // user: %527
  destroy_value %514 : $@callee_guaranteed () -> () // id: %523
  dealloc_stack %500 : $*Optional<Closure>        // id: %524
  end_borrow %499 : $Array<Closure>               // id: %525
  dealloc_stack %497 : $*Array<Closure>           // id: %526
  br bb20(%522 : $Optional<()>)                   // id: %527

bb20(%528 : $Optional<()>):                       // Preds: bb21 bb19
  end_borrow %221 : $Optional<String>             // id: %529
  br bb25                                         // id: %530

bb21:                                             // Preds: bb18
  dealloc_stack %500 : $*Optional<Closure>        // id: %531
  end_borrow %499 : $Array<Closure>               // id: %532
  dealloc_stack %497 : $*Array<Closure>           // id: %533
  %534 = enum $Optional<()>, #Optional.none!enumelt // user: %535
  br bb20(%534 : $Optional<()>)                   // id: %535

bb22:                                             // Preds: bb17
  destroy_value %470 : $Optional<String>          // id: %536
  %537 = copy_value %221 : $Optional<String>      // users: %559, %569, %548, %538
  debug_value %537 : $Optional<String>, let, name "$match" // id: %538
  %539 = string_literal utf8 "exit"               // user: %544
  %540 = integer_literal $Builtin.Word, 4         // user: %544
  %541 = integer_literal $Builtin.Int1, -1        // user: %544
  %542 = metatype $@thin String.Type              // user: %544
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %543 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %544
  %544 = apply %543(%539, %540, %541, %542) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %545
  %545 = enum $Optional<String>, #Optional.some!enumelt, %544 : $String // user: %547
  %546 = alloc_stack $Optional<String>            // users: %556, %555, %552, %547
  store %545 to [init] %546 : $*Optional<String>  // id: %547
  %548 = begin_borrow %537 : $Optional<String>    // users: %554, %550
  %549 = alloc_stack $Optional<String>            // users: %553, %552, %550
  %550 = store_borrow %548 to %549 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %551 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %552
  %552 = apply %551<String?>(%546, %549) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %557
  dealloc_stack %549 : $*Optional<String>         // id: %553
  end_borrow %548 : $Optional<String>             // id: %554
  destroy_addr %546 : $*Optional<String>          // id: %555
  dealloc_stack %546 : $*Optional<String>         // id: %556
  %557 = struct_extract %552 : $Bool, #Bool._value // user: %558
  cond_br %557, bb23, bb24                        // id: %558

bb23:                                             // Preds: bb22
  destroy_value %537 : $Optional<String>          // id: %559
  %560 = integer_literal $Builtin.Int1, 0         // user: %563
  %561 = metatype $@thin Bool.Type                // user: %563
  // function_ref Bool.init(_builtinBooleanLiteral:)
  %562 = function_ref @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %563
  %563 = apply %562(%560, %561) : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %565
  %564 = begin_access [modify] [static] %181 : $*Bool // users: %566, %565
  assign %563 to %564 : $*Bool                    // id: %565
  end_access %564 : $*Bool                        // id: %566
  end_borrow %221 : $Optional<String>             // id: %567
  br bb25                                         // id: %568

bb24:                                             // Preds: bb22
  destroy_value %537 : $Optional<String>          // id: %569
  %570 = integer_literal $Builtin.Word, 1         // user: %572
  // function_ref _allocateUninitializedArray<A>(_:)
  %571 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %572
  %572 = apply %571<Any>(%570) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %573
  (%573, %574) = destructure_tuple %572 : $(Array<Any>, Builtin.RawPointer) // users: %592, %589, %575
  %575 = pointer_to_address %574 : $Builtin.RawPointer to [strict] $*Any // user: %582
  %576 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %581
  %577 = integer_literal $Builtin.Word, 44        // user: %581
  %578 = integer_literal $Builtin.Int1, 0         // user: %581
  %579 = metatype $@thin String.Type              // user: %581
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %580 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %581
  %581 = apply %580(%576, %577, %578, %579) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %583
  %582 = init_existential_addr %575 : $*Any, $String // user: %583
  store %581 to [init] %582 : $*String            // id: %583
  // function_ref default argument 1 of print(_:separator:terminator:)
  %584 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %585
  %585 = apply %584() : $@convention(thin) () -> @owned String // users: %591, %589
  // function_ref default argument 2 of print(_:separator:terminator:)
  %586 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %587
  %587 = apply %586() : $@convention(thin) () -> @owned String // users: %590, %589
  // function_ref print(_:separator:terminator:)
  %588 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %589
  %589 = apply %588(%573, %585, %587) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %587 : $String                    // id: %590
  destroy_value %585 : $String                    // id: %591
  destroy_value %573 : $Array<Any>                // id: %592
  end_borrow %221 : $Optional<String>             // id: %593
  br bb25                                         // id: %594

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  destroy_value %219 : $Optional<String>          // id: %595
  br bb1                                          // id: %596

bb26:                                             // Preds: bb1
  %597 = integer_literal $Builtin.Word, 1         // user: %599
  // function_ref _allocateUninitializedArray<A>(_:)
  %598 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %599
  %599 = apply %598<Any>(%597) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %600
  (%600, %601) = destructure_tuple %599 : $(Array<Any>, Builtin.RawPointer) // users: %619, %616, %602
  %602 = pointer_to_address %601 : $Builtin.RawPointer to [strict] $*Any // user: %609
  %603 = string_literal utf8 "===== will end"     // user: %608
  %604 = integer_literal $Builtin.Word, 14        // user: %608
  %605 = integer_literal $Builtin.Int1, -1        // user: %608
  %606 = metatype $@thin String.Type              // user: %608
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %607 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %608
  %608 = apply %607(%603, %604, %605, %606) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %610
  %609 = init_existential_addr %602 : $*Any, $String // user: %610
  store %608 to [init] %609 : $*String            // id: %610
  // function_ref default argument 1 of print(_:separator:terminator:)
  %611 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %612
  %612 = apply %611() : $@convention(thin) () -> @owned String // users: %618, %616
  // function_ref default argument 2 of print(_:separator:terminator:)
  %613 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %614
  %614 = apply %613() : $@convention(thin) () -> @owned String // users: %617, %616
  // function_ref print(_:separator:terminator:)
  %615 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %616
  %616 = apply %615(%600, %612, %614) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %614 : $String                    // id: %617
  destroy_value %612 : $String                    // id: %618
  destroy_value %600 : $Array<Any>                // id: %619
  destroy_value %180 : ${ var Bool }              // id: %620
  destroy_value %143 : ${ var Array<Closure> }    // id: %621
  destroy_value %116 : $@callee_guaranteed () -> () // id: %622
  destroy_value %99 : $@callee_guaranteed () -> () // id: %623
  destroy_value %85 : $@callee_guaranteed () -> () // id: %624
  destroy_value %74 : $@callee_guaranteed () -> () // id: %625
  destroy_value %61 : ${ var Int }                // id: %626
  destroy_value %13 : $Number                     // id: %627
  destroy_value %5 : $Empty                       // id: %628
  destroy_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %629
  %630 = tuple ()                                 // user: %631
  return %630 : $()                               // id: %631
} // end sil function '$s4file3fooyyF'

// closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () {
// %0 "name"                                      // users: %3, %1
bb0(%0 : @guaranteed $String):
  debug_value %0 : $String, let, name "name", argno 1 // id: %1
  // function_ref closure #1 in closure #1 in foo()
  %2 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %4
  %3 = copy_value %0 : $String                    // user: %4
  %4 = partial_apply [callee_guaranteed] %2(%3) : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %5
  return %4 : $@callee_guaranteed (Int, Int, Int) -> () // id: %5
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_'

// closure #1 in closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %58, %4
// %1 "weak"                                      // users: %76, %5
// %2 "unowned"                                   // users: %94, %6
// %3 "name"                                      // users: %40, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : @guaranteed $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %11
  (%11, %12) = destructure_tuple %10 : $(Array<Any>, Builtin.RawPointer) // users: %126, %123, %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %116
  %14 = alloc_box ${ var DefaultStringInterpolation }, var, name "$interpolation" // users: %112, %15
  %15 = project_box %14 : ${ var DefaultStringInterpolation }, 0 // users: %111, %106, %95, %88, %77, %70, %59, %52, %41, %34, %27
  %16 = integer_literal $Builtin.IntLiteral, 39   // user: %19
  %17 = metatype $@thin Int.Type                  // user: %19
  // function_ref Int.init(_builtinIntegerLiteral:)
  %18 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %19
  %19 = apply %18(%16, %17) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %26
  %20 = integer_literal $Builtin.IntLiteral, 4    // user: %23
  %21 = metatype $@thin Int.Type                  // user: %23
  // function_ref Int.init(_builtinIntegerLiteral:)
  %22 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %23
  %23 = apply %22(%20, %21) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %26
  %24 = metatype $@thin DefaultStringInterpolation.Type // user: %26
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %25 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %26
  %26 = apply %25(%19, %23, %24) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %27
  store %26 to [init] %15 : $*DefaultStringInterpolation // id: %27
  %28 = string_literal utf8 "Name: "              // user: %33
  %29 = integer_literal $Builtin.Word, 6          // user: %33
  %30 = integer_literal $Builtin.Int1, -1         // user: %33
  %31 = metatype $@thin String.Type               // user: %33
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %32 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %33
  %33 = apply %32(%28, %29, %30, %31) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %38, %36
  %34 = begin_access [modify] [static] %15 : $*DefaultStringInterpolation // users: %37, %36
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %35 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %36
  %36 = apply %35(%33, %34) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %34 : $*DefaultStringInterpolation   // id: %37
  destroy_value %33 : $String                     // id: %38
  %39 = alloc_stack $String                       // users: %45, %43, %40
  %40 = store_borrow %3 to %39 : $*String
  %41 = begin_access [modify] [static] %15 : $*DefaultStringInterpolation // users: %44, %43
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %42 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %43
  %43 = apply %42<String>(%39, %41) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %41 : $*DefaultStringInterpolation   // id: %44
  dealloc_stack %39 : $*String                    // id: %45
  %46 = string_literal utf8 "; Strong: ("         // user: %51
  %47 = integer_literal $Builtin.Word, 11         // user: %51
  %48 = integer_literal $Builtin.Int1, -1         // user: %51
  %49 = metatype $@thin String.Type               // user: %51
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %50 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %51
  %51 = apply %50(%46, %47, %48, %49) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %56, %54
  %52 = begin_access [modify] [static] %15 : $*DefaultStringInterpolation // users: %55, %54
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %53 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %54
  %54 = apply %53(%51, %52) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %52 : $*DefaultStringInterpolation   // id: %55
  destroy_value %51 : $String                     // id: %56
  %57 = alloc_stack $Int                          // users: %63, %61, %58
  store %0 to [trivial] %57 : $*Int               // id: %58
  %59 = begin_access [modify] [static] %15 : $*DefaultStringInterpolation // users: %62, %61
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %60 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %61
  %61 = apply %60<Int>(%57, %59) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %59 : $*DefaultStringInterpolation   // id: %62
  dealloc_stack %57 : $*Int                       // id: %63
  %64 = string_literal utf8 "); Weak: ("          // user: %69
  %65 = integer_literal $Builtin.Word, 10         // user: %69
  %66 = integer_literal $Builtin.Int1, -1         // user: %69
  %67 = metatype $@thin String.Type               // user: %69
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %68 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %69
  %69 = apply %68(%64, %65, %66, %67) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %74, %72
  %70 = begin_access [modify] [static] %15 : $*DefaultStringInterpolation // users: %73, %72
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %71 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %72
  %72 = apply %71(%69, %70) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %70 : $*DefaultStringInterpolation   // id: %73
  destroy_value %69 : $String                     // id: %74
  %75 = alloc_stack $Int                          // users: %81, %79, %76
  store %1 to [trivial] %75 : $*Int               // id: %76
  %77 = begin_access [modify] [static] %15 : $*DefaultStringInterpolation // users: %80, %79
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %78 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %79
  %79 = apply %78<Int>(%75, %77) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %77 : $*DefaultStringInterpolation   // id: %80
  dealloc_stack %75 : $*Int                       // id: %81
  %82 = string_literal utf8 "); Unowned("         // user: %87
  %83 = integer_literal $Builtin.Word, 11         // user: %87
  %84 = integer_literal $Builtin.Int1, -1         // user: %87
  %85 = metatype $@thin String.Type               // user: %87
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %86 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %87
  %87 = apply %86(%82, %83, %84, %85) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %92, %90
  %88 = begin_access [modify] [static] %15 : $*DefaultStringInterpolation // users: %91, %90
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %89 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %90
  %90 = apply %89(%87, %88) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %88 : $*DefaultStringInterpolation   // id: %91
  destroy_value %87 : $String                     // id: %92
  %93 = alloc_stack $Int                          // users: %99, %97, %94
  store %2 to [trivial] %93 : $*Int               // id: %94
  %95 = begin_access [modify] [static] %15 : $*DefaultStringInterpolation // users: %98, %97
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %96 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %97
  %97 = apply %96<Int>(%93, %95) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %95 : $*DefaultStringInterpolation   // id: %98
  dealloc_stack %93 : $*Int                       // id: %99
  %100 = string_literal utf8 ")"                  // user: %105
  %101 = integer_literal $Builtin.Word, 1         // user: %105
  %102 = integer_literal $Builtin.Int1, -1        // user: %105
  %103 = metatype $@thin String.Type              // user: %105
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %104 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %105
  %105 = apply %104(%100, %101, %102, %103) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %110, %108
  %106 = begin_access [modify] [static] %15 : $*DefaultStringInterpolation // users: %109, %108
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %107 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %108
  %108 = apply %107(%105, %106) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %106 : $*DefaultStringInterpolation  // id: %109
  destroy_value %105 : $String                    // id: %110
  %111 = load [copy] %15 : $*DefaultStringInterpolation // user: %115
  destroy_value %14 : ${ var DefaultStringInterpolation } // id: %112
  %113 = metatype $@thin String.Type              // user: %115
  // function_ref String.init(stringInterpolation:)
  %114 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %115
  %115 = apply %114(%111, %113) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %117
  %116 = init_existential_addr %13 : $*Any, $String // user: %117
  store %115 to [init] %116 : $*String            // id: %117
  // function_ref default argument 1 of print(_:separator:terminator:)
  %118 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %119
  %119 = apply %118() : $@convention(thin) () -> @owned String // users: %125, %123
  // function_ref default argument 2 of print(_:separator:terminator:)
  %120 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %121
  %121 = apply %120() : $@convention(thin) () -> @owned String // users: %124, %123
  // function_ref print(_:separator:terminator:)
  %122 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %123
  %123 = apply %122(%11, %119, %121) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %121 : $String                    // id: %124
  destroy_value %119 : $String                    // id: %125
  destroy_value %11 : $Array<Any>                 // id: %126
  %127 = tuple ()                                 // user: %128
  return %127 : $()                               // id: %128
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] [_semantics "array.uninitialized_intrinsic"] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer)

// Int.init(_builtinIntegerLiteral:)
sil [transparent] [serialized] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int

// DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
sil [serialized] @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// DefaultStringInterpolation.appendLiteral(_:)
sil [serialized] @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// String.init(stringInterpolation:)
sil [serialized] [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String

// default argument 1 of print(_:separator:terminator:)
sil hidden_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String

// default argument 2 of print(_:separator:terminator:)
sil hidden_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String

// print(_:separator:terminator:)
sil @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()

// closure #2 in foo()
sil private [ossa] @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () {
// %0 "number"                                    // users: %7, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %1
  %2 = metatype $@thin Int.Type                   // user: %10
  %3 = integer_literal $Builtin.IntLiteral, 1     // user: %6
  %4 = metatype $@thin Int.Type                   // user: %6
  // function_ref Int.init(_builtinIntegerLiteral:)
  %5 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %6
  %6 = apply %5(%3, %4) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %10
  %7 = ref_element_addr %0 : $Number, #Number.number // user: %8
  %8 = begin_access [modify] [dynamic] %7 : $*Int // users: %11, %10
  // function_ref static Int.+= infix(_:_:)
  %9 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %10
  %10 = apply %9(%8, %6, %2) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %8 : $*Int                           // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file3fooyyFyycfU0_'

// static Int.+= infix(_:_:)
sil [transparent] [serialized] @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()

// closure #3 in foo()
sil private [ossa] @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %10, %2
// %1 "value"                                     // user: %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %46, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = metatype $@thin Int.Type                   // user: %13
  %6 = integer_literal $Builtin.IntLiteral, 1     // user: %9
  %7 = metatype $@thin Int.Type                   // user: %9
  // function_ref Int.init(_builtinIntegerLiteral:)
  %8 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %9
  %9 = apply %8(%6, %7) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %13
  %10 = ref_element_addr %0 : $Number, #Number.number // user: %11
  %11 = begin_access [modify] [dynamic] %10 : $*Int // users: %14, %13
  // function_ref static Int.+= infix(_:_:)
  %12 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %13
  %13 = apply %12(%11, %9, %5) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %11 : $*Int                          // id: %14
  %15 = integer_literal $Builtin.Word, 1          // user: %17
  // function_ref _allocateUninitializedArray<A>(_:)
  %16 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %17
  %17 = apply %16<Any>(%15) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %18
  (%18, %19) = destructure_tuple %17 : $(Array<Any>, Builtin.RawPointer) // users: %82, %79, %20
  %20 = pointer_to_address %19 : $Builtin.RawPointer to [strict] $*Any // user: %72
  %21 = alloc_box ${ var DefaultStringInterpolation }, var, name "$interpolation" // users: %68, %22
  %22 = project_box %21 : ${ var DefaultStringInterpolation }, 0 // users: %67, %62, %51, %41, %34
  %23 = integer_literal $Builtin.IntLiteral, 3    // user: %26
  %24 = metatype $@thin Int.Type                  // user: %26
  // function_ref Int.init(_builtinIntegerLiteral:)
  %25 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %26
  %26 = apply %25(%23, %24) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %33
  %27 = integer_literal $Builtin.IntLiteral, 1    // user: %30
  %28 = metatype $@thin Int.Type                  // user: %30
  // function_ref Int.init(_builtinIntegerLiteral:)
  %29 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %30
  %30 = apply %29(%27, %28) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %33
  %31 = metatype $@thin DefaultStringInterpolation.Type // user: %33
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %32 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %33
  %33 = apply %32(%26, %30, %31) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %34
  store %33 to [init] %22 : $*DefaultStringInterpolation // id: %34
  %35 = string_literal utf8 "v: "                 // user: %40
  %36 = integer_literal $Builtin.Word, 3          // user: %40
  %37 = integer_literal $Builtin.Int1, -1         // user: %40
  %38 = metatype $@thin String.Type               // user: %40
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %39 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %40
  %40 = apply %39(%35, %36, %37, %38) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %45, %43
  %41 = begin_access [modify] [static] %22 : $*DefaultStringInterpolation // users: %44, %43
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %42 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %43
  %43 = apply %42(%40, %41) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %41 : $*DefaultStringInterpolation   // id: %44
  destroy_value %40 : $String                     // id: %45
  %46 = begin_access [read] [dynamic] %3 : $*Int  // users: %48, %47
  %47 = load [trivial] %46 : $*Int                // user: %50
  end_access %46 : $*Int                          // id: %48
  %49 = alloc_stack $Int                          // users: %55, %53, %50
  store %47 to [trivial] %49 : $*Int              // id: %50
  %51 = begin_access [modify] [static] %22 : $*DefaultStringInterpolation // users: %54, %53
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %52 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %53
  %53 = apply %52<Int>(%49, %51) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %51 : $*DefaultStringInterpolation   // id: %54
  dealloc_stack %49 : $*Int                       // id: %55
  %56 = string_literal utf8 ""                    // user: %61
  %57 = integer_literal $Builtin.Word, 0          // user: %61
  %58 = integer_literal $Builtin.Int1, -1         // user: %61
  %59 = metatype $@thin String.Type               // user: %61
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %60 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %61
  %61 = apply %60(%56, %57, %58, %59) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %66, %64
  %62 = begin_access [modify] [static] %22 : $*DefaultStringInterpolation // users: %65, %64
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %63 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %64
  %64 = apply %63(%61, %62) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %62 : $*DefaultStringInterpolation   // id: %65
  destroy_value %61 : $String                     // id: %66
  %67 = load [copy] %22 : $*DefaultStringInterpolation // user: %71
  destroy_value %21 : ${ var DefaultStringInterpolation } // id: %68
  %69 = metatype $@thin String.Type               // user: %71
  // function_ref String.init(stringInterpolation:)
  %70 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %71
  %71 = apply %70(%67, %69) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %73
  %72 = init_existential_addr %20 : $*Any, $String // user: %73
  store %71 to [init] %72 : $*String              // id: %73
  // function_ref default argument 1 of print(_:separator:terminator:)
  %74 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %75
  %75 = apply %74() : $@convention(thin) () -> @owned String // users: %81, %79
  // function_ref default argument 2 of print(_:separator:terminator:)
  %76 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %77
  %77 = apply %76() : $@convention(thin) () -> @owned String // users: %80, %79
  // function_ref print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %79
  %79 = apply %78(%18, %75, %77) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %77 : $String                     // id: %80
  destroy_value %75 : $String                     // id: %81
  destroy_value %18 : $Array<Any>                 // id: %82
  %83 = tuple ()                                  // user: %84
  return %83 : $()                                // id: %84
} // end sil function '$s4file3fooyyFyycfU1_'

// closure #4 in foo()
sil private [ossa] @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () {
// %0 "number"                                    // users: %9, %2
// %1 "empty"                                     // users: %15, %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %3
  %4 = metatype $@thin Int.Type                   // user: %12
  %5 = integer_literal $Builtin.IntLiteral, 1     // user: %8
  %6 = metatype $@thin Int.Type                   // user: %8
  // function_ref Int.init(_builtinIntegerLiteral:)
  %7 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %8
  %8 = apply %7(%5, %6) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %12
  %9 = ref_element_addr %0 : $Number, #Number.number // user: %10
  %10 = begin_access [modify] [dynamic] %9 : $*Int // users: %13, %12
  // function_ref static Int.+= infix(_:_:)
  %11 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %12
  %12 = apply %11(%10, %8, %4) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %10 : $*Int                          // id: %13
  // function_ref Empty.foo()
  %14 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %15
  %15 = apply %14(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %16 = tuple ()                                  // user: %17
  return %16 : $()                                // id: %17
} // end sil function '$s4file3fooyyFyycfU2_'

// closure #5 in foo()
sil private [ossa] @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %12, %3
// %1 "empty"                                     // users: %18, %4
// %2 "value"                                     // user: %5
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty, %2 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %50, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = metatype $@thin Int.Type                   // user: %15
  %8 = integer_literal $Builtin.IntLiteral, 1     // user: %11
  %9 = metatype $@thin Int.Type                   // user: %11
  // function_ref Int.init(_builtinIntegerLiteral:)
  %10 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %11
  %11 = apply %10(%8, %9) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %15
  %12 = ref_element_addr %0 : $Number, #Number.number // user: %13
  %13 = begin_access [modify] [dynamic] %12 : $*Int // users: %16, %15
  // function_ref static Int.+= infix(_:_:)
  %14 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %15
  %15 = apply %14(%13, %11, %7) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %13 : $*Int                          // id: %16
  // function_ref Empty.foo()
  %17 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %18
  %18 = apply %17(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %19 = integer_literal $Builtin.Word, 1          // user: %21
  // function_ref _allocateUninitializedArray<A>(_:)
  %20 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %21
  %21 = apply %20<Any>(%19) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %22
  (%22, %23) = destructure_tuple %21 : $(Array<Any>, Builtin.RawPointer) // users: %86, %83, %24
  %24 = pointer_to_address %23 : $Builtin.RawPointer to [strict] $*Any // user: %76
  %25 = alloc_box ${ var DefaultStringInterpolation }, var, name "$interpolation" // users: %72, %26
  %26 = project_box %25 : ${ var DefaultStringInterpolation }, 0 // users: %71, %66, %55, %45, %38
  %27 = integer_literal $Builtin.IntLiteral, 3    // user: %30
  %28 = metatype $@thin Int.Type                  // user: %30
  // function_ref Int.init(_builtinIntegerLiteral:)
  %29 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %30
  %30 = apply %29(%27, %28) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %37
  %31 = integer_literal $Builtin.IntLiteral, 1    // user: %34
  %32 = metatype $@thin Int.Type                  // user: %34
  // function_ref Int.init(_builtinIntegerLiteral:)
  %33 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %34
  %34 = apply %33(%31, %32) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %37
  %35 = metatype $@thin DefaultStringInterpolation.Type // user: %37
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %36 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %37
  %37 = apply %36(%30, %34, %35) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %38
  store %37 to [init] %26 : $*DefaultStringInterpolation // id: %38
  %39 = string_literal utf8 "v: "                 // user: %44
  %40 = integer_literal $Builtin.Word, 3          // user: %44
  %41 = integer_literal $Builtin.Int1, -1         // user: %44
  %42 = metatype $@thin String.Type               // user: %44
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %43 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %44
  %44 = apply %43(%39, %40, %41, %42) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %49, %47
  %45 = begin_access [modify] [static] %26 : $*DefaultStringInterpolation // users: %48, %47
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %46 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %47
  %47 = apply %46(%44, %45) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %45 : $*DefaultStringInterpolation   // id: %48
  destroy_value %44 : $String                     // id: %49
  %50 = begin_access [read] [dynamic] %5 : $*Int  // users: %52, %51
  %51 = load [trivial] %50 : $*Int                // user: %54
  end_access %50 : $*Int                          // id: %52
  %53 = alloc_stack $Int                          // users: %59, %57, %54
  store %51 to [trivial] %53 : $*Int              // id: %54
  %55 = begin_access [modify] [static] %26 : $*DefaultStringInterpolation // users: %58, %57
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %56 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %57
  %57 = apply %56<Int>(%53, %55) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %55 : $*DefaultStringInterpolation   // id: %58
  dealloc_stack %53 : $*Int                       // id: %59
  %60 = string_literal utf8 ""                    // user: %65
  %61 = integer_literal $Builtin.Word, 0          // user: %65
  %62 = integer_literal $Builtin.Int1, -1         // user: %65
  %63 = metatype $@thin String.Type               // user: %65
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %64 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %65
  %65 = apply %64(%60, %61, %62, %63) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %70, %68
  %66 = begin_access [modify] [static] %26 : $*DefaultStringInterpolation // users: %69, %68
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %67 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %68
  %68 = apply %67(%65, %66) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %66 : $*DefaultStringInterpolation   // id: %69
  destroy_value %65 : $String                     // id: %70
  %71 = load [copy] %26 : $*DefaultStringInterpolation // user: %75
  destroy_value %25 : ${ var DefaultStringInterpolation } // id: %72
  %73 = metatype $@thin String.Type               // user: %75
  // function_ref String.init(stringInterpolation:)
  %74 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %75
  %75 = apply %74(%71, %73) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %77
  %76 = init_existential_addr %24 : $*Any, $String // user: %77
  store %75 to [init] %76 : $*String              // id: %77
  // function_ref default argument 1 of print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %79
  %79 = apply %78() : $@convention(thin) () -> @owned String // users: %85, %83
  // function_ref default argument 2 of print(_:separator:terminator:)
  %80 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %81
  %81 = apply %80() : $@convention(thin) () -> @owned String // users: %84, %83
  // function_ref print(_:separator:terminator:)
  %82 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %83
  %83 = apply %82(%22, %79, %81) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %81 : $String                     // id: %84
  destroy_value %79 : $String                     // id: %85
  destroy_value %22 : $Array<Any>                 // id: %86
  %87 = tuple ()                                  // user: %88
  return %87 : $()                                // id: %88
} // end sil function '$s4file3fooyyFyycfU3_'

// Array.init()
sil [serialized] [_semantics "array.init.empty"] @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>

// Array.reserveCapacity(_:)
sil [serialized] [_semantics "array.mutate_unknown"] @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()

// Bool.init(_builtinBooleanLiteral:)
sil [transparent] [serialized] @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool

// default argument 0 of readLine(strippingNewline:)
sil hidden_external [serialized] @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool

// readLine(strippingNewline:)
sil @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String>

// ~= infix<A>(_:_:)
sil [transparent] [serialized] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool

// Array.append(_:)
sil [serialized] [_semantics "array.append_element"] @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()

// Collection.isEmpty.getter
sil [serialized] @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool

// static Bool.! prefix(_:)
sil [transparent] [serialized] @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool

// RangeReplaceableCollection<>.removeLast()
sil [serialized] @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element

// BidirectionalCollection.last.getter
sil [serialized] @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>

sil_vtable Empty {
  #Empty.init!allocator: (Empty.Type) -> () -> Empty : @$s4file5EmptyCACycfC	// Empty.__allocating_init()
  #Empty.deinit!deallocator: @$s4file5EmptyCfD	// Empty.__deallocating_deinit
}

sil_vtable Number {
  #Number.init!allocator: (Number.Type) -> (Int) -> Number : @$s4file6NumberC6numberACSi_tcfC	// Number.__allocating_init(number:)
  #Number.deinit!deallocator: @$s4file6NumberCfD	// Number.__deallocating_deinit
}

sil_vtable Closure {
  #Closure.init!allocator: (Closure.Type) -> (@escaping () -> ()) -> Closure : @$s4file7ClosureCyACyyccfC	// Closure.__allocating_init(_:)
  #Closure.deinit!deallocator: @$s4file7ClosureCfD	// Closure.__deallocating_deinit
}



  *** SIL function after  #75, stage Guaranteed Passes, pass 7: DefiniteInitialization (definite-init)
// Empty.init()
sil hidden [ossa] @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty {
// %0 "self"                                      // users: %2, %3, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = copy_value %0 : $Empty                     // user: %4
  destroy_value %0 : $Empty                       // id: %3
  return %2 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfc'

  *** SIL function after  #88, stage Guaranteed Passes, pass 8: RawSILInstLowering (raw-sil-inst-lowering)
// Number.number.setter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivs : $@convention(method) (Int, @guaranteed Number) -> () {
// %0 "value"                                     // users: %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : @guaranteed $Number):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to [trivial] %5 : $*Int                // id: %6
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9
} // end sil function '$s4file6NumberC6numberSivs'

  *** SIL function after  #95, stage Guaranteed Passes, pass 7: DefiniteInitialization (definite-init)
// Number.init(number:)
sil hidden [ossa] @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %7, %2
// %1 "self"                                      // users: %4, %10, %11, %3
bb0(%0 : $Int, %1 : @owned $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %1 : $Number                  // users: %9, %5
  %5 = ref_element_addr %4 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %8, %7
  assign %0 to [init] %6 : $*Int                  // id: %7
  end_access %6 : $*Int                           // id: %8
  end_borrow %4 : $Number                         // id: %9
  %10 = copy_value %1 : $Number                   // user: %12
  destroy_value %1 : $Number                      // id: %11
  return %10 : $Number                            // id: %12
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

  *** SIL function after  #96, stage Guaranteed Passes, pass 8: RawSILInstLowering (raw-sil-inst-lowering)
// Number.init(number:)
sil hidden [ossa] @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %7, %2
// %1 "self"                                      // users: %4, %10, %11, %3
bb0(%0 : $Int, %1 : @owned $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %1 : $Number                  // users: %9, %5
  %5 = ref_element_addr %4 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %7, %8
  store %0 to [trivial] %6 : $*Int                // id: %7
  end_access %6 : $*Int                           // id: %8
  end_borrow %4 : $Number                         // id: %9
  %10 = copy_value %1 : $Number                   // user: %12
  destroy_value %1 : $Number                      // id: %11
  return %10 : $Number                            // id: %12
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

  *** SIL function after  #116, stage Guaranteed Passes, pass 8: RawSILInstLowering (raw-sil-inst-lowering)
// Closure.closure.setter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvs : $@convention(method) (@owned @callee_guaranteed () -> (), @guaranteed Closure) -> () {
// %0 "value"                                     // users: %11, %4, %2
// %1 "self"                                      // users: %6, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @guaranteed $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "value", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %10, %5
  %5 = copy_value %4 : $@callee_guaranteed () -> () // user: %8
  %6 = ref_element_addr %1 : $Closure, #Closure.closure // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*@callee_guaranteed () -> () // users: %8, %9
  store %5 to [assign] %7 : $*@callee_guaranteed () -> () // id: %8
  end_access %7 : $*@callee_guaranteed () -> ()   // id: %9
  end_borrow %4 : $@callee_guaranteed () -> ()    // id: %10
  destroy_value %0 : $@callee_guaranteed () -> () // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file7ClosureC7closureyycvs'

  *** SIL function after  #123, stage Guaranteed Passes, pass 7: DefiniteInitialization (definite-init)
// Closure.init(_:)
sil hidden [ossa] @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %15, %5, %2
// %1 "self"                                      // users: %4, %13, %14, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @owned $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %1 : $Closure                 // users: %12, %7
  %5 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %11, %6
  %6 = copy_value %5 : $@callee_guaranteed () -> () // user: %9
  %7 = ref_element_addr %4 : $Closure, #Closure.closure // user: %8
  %8 = begin_access [modify] [dynamic] %7 : $*@callee_guaranteed () -> () // users: %10, %9
  assign %6 to [init] %8 : $*@callee_guaranteed () -> () // id: %9
  end_access %8 : $*@callee_guaranteed () -> ()   // id: %10
  end_borrow %5 : $@callee_guaranteed () -> ()    // id: %11
  end_borrow %4 : $Closure                        // id: %12
  %13 = copy_value %1 : $Closure                  // user: %16
  destroy_value %1 : $Closure                     // id: %14
  destroy_value %0 : $@callee_guaranteed () -> () // id: %15
  return %13 : $Closure                           // id: %16
} // end sil function '$s4file7ClosureCyACyyccfc'

  *** SIL function after  #124, stage Guaranteed Passes, pass 8: RawSILInstLowering (raw-sil-inst-lowering)
// Closure.init(_:)
sil hidden [ossa] @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %15, %5, %2
// %1 "self"                                      // users: %4, %13, %14, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @owned $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %1 : $Closure                 // users: %12, %7
  %5 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %11, %6
  %6 = copy_value %5 : $@callee_guaranteed () -> () // user: %9
  %7 = ref_element_addr %4 : $Closure, #Closure.closure // user: %8
  %8 = begin_access [modify] [dynamic] %7 : $*@callee_guaranteed () -> () // users: %9, %10
  store %6 to [init] %8 : $*@callee_guaranteed () -> () // id: %9
  end_access %8 : $*@callee_guaranteed () -> ()   // id: %10
  end_borrow %5 : $@callee_guaranteed () -> ()    // id: %11
  end_borrow %4 : $Closure                        // id: %12
  %13 = copy_value %1 : $Closure                  // user: %16
  destroy_value %1 : $Closure                     // id: %14
  destroy_value %0 : $@callee_guaranteed () -> () // id: %15
  return %13 : $Closure                           // id: %16
} // end sil function '$s4file7ClosureCyACyyccfc'

  *** SIL function after  #137, stage Guaranteed Passes, pass 5: AllocBoxToStack (allocbox-to-stack)
// foo()
sil hidden [ossa] @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %628, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %627, %107, %92, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %13
  %8 = integer_literal $Builtin.IntLiteral, 0     // user: %11
  %9 = metatype $@thin Int.Type                   // user: %11
  // function_ref Int.init(_builtinIntegerLiteral:)
  %10 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %11
  %11 = apply %10(%8, %9) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %13
  // function_ref Number.__allocating_init(number:)
  %12 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %13
  %13 = apply %12(%11, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %626, %103, %88, %77, %68, %14
  debug_value %13 : $Number, let, name "number"   // id: %14
  %15 = integer_literal $Builtin.Word, 1          // user: %17
  // function_ref _allocateUninitializedArray<A>(_:)
  %16 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %17
  %17 = apply %16<Any>(%15) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %18
  (%18, %19) = destructure_tuple %17 : $(Array<Any>, Builtin.RawPointer) // users: %37, %34, %20
  %20 = pointer_to_address %19 : $Builtin.RawPointer to [strict] $*Any // user: %27
  %21 = string_literal utf8 "===== Did init"      // user: %26
  %22 = integer_literal $Builtin.Word, 14         // user: %26
  %23 = integer_literal $Builtin.Int1, -1         // user: %26
  %24 = metatype $@thin String.Type               // user: %26
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %25 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %26 = apply %25(%21, %22, %23, %24) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %27 = init_existential_addr %20 : $*Any, $String // user: %28
  store %26 to [init] %27 : $*String              // id: %28
  // function_ref default argument 1 of print(_:separator:terminator:)
  %29 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %30
  %30 = apply %29() : $@convention(thin) () -> @owned String // users: %36, %34
  // function_ref default argument 2 of print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %32
  %32 = apply %31() : $@convention(thin) () -> @owned String // users: %35, %34
  // function_ref print(_:separator:terminator:)
  %33 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %34
  %34 = apply %33(%18, %30, %32) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %32 : $String                     // id: %35
  destroy_value %30 : $String                     // id: %36
  destroy_value %18 : $Array<Any>                 // id: %37
  %38 = integer_literal $Builtin.Word, 1          // user: %40
  // function_ref _allocateUninitializedArray<A>(_:)
  %39 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %40
  %40 = apply %39<Any>(%38) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %41
  (%41, %42) = destructure_tuple %40 : $(Array<Any>, Builtin.RawPointer) // users: %60, %57, %43
  %43 = pointer_to_address %42 : $Builtin.RawPointer to [strict] $*Any // user: %50
  %44 = string_literal utf8 "===== Did hook"      // user: %49
  %45 = integer_literal $Builtin.Word, 14         // user: %49
  %46 = integer_literal $Builtin.Int1, -1         // user: %49
  %47 = metatype $@thin String.Type               // user: %49
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %48 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %49
  %49 = apply %48(%44, %45, %46, %47) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %51
  %50 = init_existential_addr %43 : $*Any, $String // user: %51
  store %49 to [init] %50 : $*String              // id: %51
  // function_ref default argument 1 of print(_:separator:terminator:)
  %52 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %53
  %53 = apply %52() : $@convention(thin) () -> @owned String // users: %59, %57
  // function_ref default argument 2 of print(_:separator:terminator:)
  %54 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %55
  %55 = apply %54() : $@convention(thin) () -> @owned String // users: %58, %57
  // function_ref print(_:separator:terminator:)
  %56 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %57
  %57 = apply %56(%41, %53, %55) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %55 : $String                     // id: %58
  destroy_value %53 : $String                     // id: %59
  destroy_value %41 : $Array<Any>                 // id: %60
  %61 = alloc_box ${ var Int }, var, name "value" // users: %625, %114, %83, %62
  %62 = project_box %61 : ${ var Int }, 0         // users: %461, %115, %84, %67
  %63 = integer_literal $Builtin.IntLiteral, 0    // user: %66
  %64 = metatype $@thin Int.Type                  // user: %66
  // function_ref Int.init(_builtinIntegerLiteral:)
  %65 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %66
  %66 = apply %65(%63, %64) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %67
  store %66 to [trivial] %62 : $*Int              // id: %67
  %68 = begin_borrow %13 : $Number                // users: %71, %69
  %69 = copy_value %68 : $Number                  // users: %76, %73, %70
  debug_value %69 : $Number, let, name "number"   // id: %70
  end_borrow %68 : $Number                        // id: %71
  // function_ref closure #2 in foo()
  %72 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %74
  %73 = copy_value %69 : $Number                  // user: %74
  %74 = partial_apply [callee_guaranteed] %72(%73) : $@convention(thin) (@guaranteed Number) -> () // users: %624, %244, %75
  debug_value %74 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %75
  destroy_value %69 : $Number                     // id: %76
  %77 = begin_borrow %13 : $Number                // users: %80, %78
  %78 = copy_value %77 : $Number                  // users: %87, %82, %79
  debug_value %78 : $Number, let, name "number"   // id: %79
  end_borrow %77 : $Number                        // id: %80
  // function_ref closure #3 in foo()
  %81 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %85
  %82 = copy_value %78 : $Number                  // user: %85
  %83 = copy_value %61 : ${ var Int }             // user: %85
  mark_function_escape %62 : $*Int                // id: %84
  %85 = partial_apply [callee_guaranteed] %81(%82, %83) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %623, %283, %86
  debug_value %85 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %86
  destroy_value %78 : $Number                     // id: %87
  %88 = begin_borrow %13 : $Number                // users: %91, %89
  %89 = copy_value %88 : $Number                  // users: %102, %97, %90
  debug_value %89 : $Number, let, name "number"   // id: %90
  end_borrow %88 : $Number                        // id: %91
  %92 = begin_borrow %5 : $Empty                  // users: %95, %93
  %93 = copy_value %92 : $Empty                   // users: %101, %98, %94
  debug_value %93 : $Empty, let, name "empty"     // id: %94
  end_borrow %92 : $Empty                         // id: %95
  // function_ref closure #4 in foo()
  %96 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %99
  %97 = copy_value %89 : $Number                  // user: %99
  %98 = copy_value %93 : $Empty                   // user: %99
  %99 = partial_apply [callee_guaranteed] %96(%97, %98) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %622, %322, %100
  debug_value %99 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %100
  destroy_value %93 : $Empty                      // id: %101
  destroy_value %89 : $Number                     // id: %102
  %103 = begin_borrow %13 : $Number               // users: %106, %104
  %104 = copy_value %103 : $Number                // users: %119, %112, %105
  debug_value %104 : $Number, let, name "number"  // id: %105
  end_borrow %103 : $Number                       // id: %106
  %107 = begin_borrow %5 : $Empty                 // users: %110, %108
  %108 = copy_value %107 : $Empty                 // users: %118, %113, %109
  debug_value %108 : $Empty, let, name "empty"    // id: %109
  end_borrow %107 : $Empty                        // id: %110
  // function_ref closure #5 in foo()
  %111 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %116
  %112 = copy_value %104 : $Number                // user: %116
  %113 = copy_value %108 : $Empty                 // user: %116
  %114 = copy_value %61 : ${ var Int }            // user: %116
  mark_function_escape %62 : $*Int                // id: %115
  %116 = partial_apply [callee_guaranteed] %111(%112, %113, %114) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %621, %361, %117
  debug_value %116 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %117
  destroy_value %108 : $Empty                     // id: %118
  destroy_value %104 : $Number                    // id: %119
  %120 = integer_literal $Builtin.Word, 1         // user: %122
  // function_ref _allocateUninitializedArray<A>(_:)
  %121 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %122
  %122 = apply %121<Any>(%120) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %123
  (%123, %124) = destructure_tuple %122 : $(Array<Any>, Builtin.RawPointer) // users: %142, %139, %125
  %125 = pointer_to_address %124 : $Builtin.RawPointer to [strict] $*Any // user: %132
  %126 = string_literal utf8 "===== Did init closures" // user: %131
  %127 = integer_literal $Builtin.Word, 23        // user: %131
  %128 = integer_literal $Builtin.Int1, -1        // user: %131
  %129 = metatype $@thin String.Type              // user: %131
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %130 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %131
  %131 = apply %130(%126, %127, %128, %129) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %133
  %132 = init_existential_addr %125 : $*Any, $String // user: %133
  store %131 to [init] %132 : $*String            // id: %133
  // function_ref default argument 1 of print(_:separator:terminator:)
  %134 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %135
  %135 = apply %134() : $@convention(thin) () -> @owned String // users: %141, %139
  // function_ref default argument 2 of print(_:separator:terminator:)
  %136 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %137
  %137 = apply %136() : $@convention(thin) () -> @owned String // users: %140, %139
  // function_ref print(_:separator:terminator:)
  %138 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %139
  %139 = apply %138(%123, %135, %137) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %137 : $String                    // id: %140
  destroy_value %135 : $String                    // id: %141
  destroy_value %123 : $Array<Any>                // id: %142
  %143 = alloc_stack $Array<Closure>, var, name "storage" // users: %620, %619, %147, %152, %251, %290, %329, %368, %400, %421, %491
  %144 = metatype $@thin Array<Closure>.Type      // user: %146
  // function_ref Array.init()
  %145 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %146
  %146 = apply %145<Closure>(%144) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %147
  store %146 to [init] %143 : $*Array<Closure>    // id: %147
  %148 = integer_literal $Builtin.IntLiteral, 100 // user: %151
  %149 = metatype $@thin Int.Type                 // user: %151
  // function_ref Int.init(_builtinIntegerLiteral:)
  %150 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %151
  %151 = apply %150(%148, %149) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %154
  %152 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %155, %154
  // function_ref Array.reserveCapacity(_:)
  %153 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %154
  %154 = apply %153<Closure>(%151, %152) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %152 : $*Array<Closure>              // id: %155
  %156 = integer_literal $Builtin.Word, 1         // user: %158
  // function_ref _allocateUninitializedArray<A>(_:)
  %157 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %158
  %158 = apply %157<Any>(%156) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %159
  (%159, %160) = destructure_tuple %158 : $(Array<Any>, Builtin.RawPointer) // users: %178, %175, %161
  %161 = pointer_to_address %160 : $Builtin.RawPointer to [strict] $*Any // user: %168
  %162 = string_literal utf8 "===== Did init array" // user: %167
  %163 = integer_literal $Builtin.Word, 20        // user: %167
  %164 = integer_literal $Builtin.Int1, -1        // user: %167
  %165 = metatype $@thin String.Type              // user: %167
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %166 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %167
  %167 = apply %166(%162, %163, %164, %165) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %169
  %168 = init_existential_addr %161 : $*Any, $String // user: %169
  store %167 to [init] %168 : $*String            // id: %169
  // function_ref default argument 1 of print(_:separator:terminator:)
  %170 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %171
  %171 = apply %170() : $@convention(thin) () -> @owned String // users: %177, %175
  // function_ref default argument 2 of print(_:separator:terminator:)
  %172 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %173
  %173 = apply %172() : $@convention(thin) () -> @owned String // users: %176, %175
  // function_ref print(_:separator:terminator:)
  %174 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %175
  %175 = apply %174(%159, %171, %173) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %173 : $String                    // id: %176
  destroy_value %171 : $String                    // id: %177
  destroy_value %159 : $Array<Any>                // id: %178
  %179 = alloc_stack $Bool, var, name "run"       // users: %618, %184, %186, %562
  %180 = integer_literal $Builtin.Int1, -1        // user: %183
  %181 = metatype $@thin Bool.Type                // user: %183
  // function_ref Bool.init(_builtinBooleanLiteral:)
  %182 = function_ref @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %183
  %183 = apply %182(%180, %181) : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %184
  store %183 to [trivial] %179 : $*Bool           // id: %184
  br bb1                                          // id: %185

bb1:                                              // Preds: bb25 bb0
  %186 = begin_access [read] [static] %179 : $*Bool // users: %187, %189
  %187 = struct_element_addr %186 : $*Bool, #Bool._value // user: %188
  %188 = load [trivial] %187 : $*Builtin.Int1     // user: %190
  end_access %186 : $*Bool                        // id: %189
  cond_br %188, bb2, bb26                         // id: %190

bb2:                                              // Preds: bb1
  %191 = integer_literal $Builtin.Word, 1         // user: %193
  // function_ref _allocateUninitializedArray<A>(_:)
  %192 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %193
  %193 = apply %192<Any>(%191) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %194
  (%194, %195) = destructure_tuple %193 : $(Array<Any>, Builtin.RawPointer) // users: %213, %210, %196
  %196 = pointer_to_address %195 : $Builtin.RawPointer to [strict] $*Any // user: %203
  %197 = string_literal utf8 "===== Ask"          // user: %202
  %198 = integer_literal $Builtin.Word, 9         // user: %202
  %199 = integer_literal $Builtin.Int1, -1        // user: %202
  %200 = metatype $@thin String.Type              // user: %202
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %201 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %202
  %202 = apply %201(%197, %198, %199, %200) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %204
  %203 = init_existential_addr %196 : $*Any, $String // user: %204
  store %202 to [init] %203 : $*String            // id: %204
  // function_ref default argument 1 of print(_:separator:terminator:)
  %205 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %206
  %206 = apply %205() : $@convention(thin) () -> @owned String // users: %212, %210
  // function_ref default argument 2 of print(_:separator:terminator:)
  %207 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %208
  %208 = apply %207() : $@convention(thin) () -> @owned String // users: %211, %210
  // function_ref print(_:separator:terminator:)
  %209 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %210
  %210 = apply %209(%194, %206, %208) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %208 : $String                    // id: %211
  destroy_value %206 : $String                    // id: %212
  destroy_value %194 : $Array<Any>                // id: %213
  // function_ref default argument 0 of readLine(strippingNewline:)
  %214 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %215
  %215 = apply %214() : $@convention(thin) () -> Bool // user: %217
  // function_ref readLine(strippingNewline:)
  %216 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %217
  %217 = apply %216(%215) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %593, %219, %218
  debug_value %217 : $Optional<String>, let, name "line" // id: %218
  %219 = begin_borrow %217 : $Optional<String>    // users: %591, %565, %535, %527, %468, %465, %433, %428, %376, %373, %337, %334, %298, %295, %259, %256, %220
  %220 = copy_value %219 : $Optional<String>      // users: %242, %258, %231, %221
  debug_value %220 : $Optional<String>, let, name "$match" // id: %221
  %222 = string_literal utf8 "push1"              // user: %227
  %223 = integer_literal $Builtin.Word, 5         // user: %227
  %224 = integer_literal $Builtin.Int1, -1        // user: %227
  %225 = metatype $@thin String.Type              // user: %227
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %226 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %227
  %227 = apply %226(%222, %223, %224, %225) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %228
  %228 = enum $Optional<String>, #Optional.some!enumelt, %227 : $String // user: %230
  %229 = alloc_stack $Optional<String>            // users: %239, %238, %235, %230
  store %228 to [init] %229 : $*Optional<String>  // id: %230
  %231 = begin_borrow %220 : $Optional<String>    // users: %237, %233
  %232 = alloc_stack $Optional<String>            // users: %236, %235, %233
  %233 = store_borrow %231 to %232 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %234 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %235
  %235 = apply %234<String?>(%229, %232) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %240
  dealloc_stack %232 : $*Optional<String>         // id: %236
  end_borrow %231 : $Optional<String>             // id: %237
  destroy_addr %229 : $*Optional<String>          // id: %238
  dealloc_stack %229 : $*Optional<String>         // id: %239
  %240 = struct_extract %235 : $Bool, #Bool._value // user: %241
  cond_br %240, bb3, bb4                          // id: %241

bb3:                                              // Preds: bb2
  destroy_value %220 : $Optional<String>          // id: %242
  %243 = metatype $@thick Closure.Type            // user: %247
  %244 = begin_borrow %74 : $@callee_guaranteed () -> () // users: %248, %245
  %245 = copy_value %244 : $@callee_guaranteed () -> () // user: %247
  // function_ref Closure.__allocating_init(_:)
  %246 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %247
  %247 = apply %246(%245, %243) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %250
  end_borrow %244 : $@callee_guaranteed () -> ()  // id: %248
  %249 = alloc_stack $Closure                     // users: %255, %253, %250
  store %247 to [init] %249 : $*Closure           // id: %250
  %251 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %254, %253
  // function_ref Array.append(_:)
  %252 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %253
  %253 = apply %252<Closure>(%249, %251) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %251 : $*Array<Closure>              // id: %254
  dealloc_stack %249 : $*Closure                  // id: %255
  end_borrow %219 : $Optional<String>             // id: %256
  br bb25                                         // id: %257

bb4:                                              // Preds: bb2
  destroy_value %220 : $Optional<String>          // id: %258
  %259 = copy_value %219 : $Optional<String>      // users: %281, %297, %270, %260
  debug_value %259 : $Optional<String>, let, name "$match" // id: %260
  %261 = string_literal utf8 "push1_1"            // user: %266
  %262 = integer_literal $Builtin.Word, 7         // user: %266
  %263 = integer_literal $Builtin.Int1, -1        // user: %266
  %264 = metatype $@thin String.Type              // user: %266
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %265 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %266
  %266 = apply %265(%261, %262, %263, %264) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %267
  %267 = enum $Optional<String>, #Optional.some!enumelt, %266 : $String // user: %269
  %268 = alloc_stack $Optional<String>            // users: %278, %277, %274, %269
  store %267 to [init] %268 : $*Optional<String>  // id: %269
  %270 = begin_borrow %259 : $Optional<String>    // users: %276, %272
  %271 = alloc_stack $Optional<String>            // users: %275, %274, %272
  %272 = store_borrow %270 to %271 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %273 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %274
  %274 = apply %273<String?>(%268, %271) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %279
  dealloc_stack %271 : $*Optional<String>         // id: %275
  end_borrow %270 : $Optional<String>             // id: %276
  destroy_addr %268 : $*Optional<String>          // id: %277
  dealloc_stack %268 : $*Optional<String>         // id: %278
  %279 = struct_extract %274 : $Bool, #Bool._value // user: %280
  cond_br %279, bb5, bb6                          // id: %280

bb5:                                              // Preds: bb4
  destroy_value %259 : $Optional<String>          // id: %281
  %282 = metatype $@thick Closure.Type            // user: %286
  %283 = begin_borrow %85 : $@callee_guaranteed () -> () // users: %287, %284
  %284 = copy_value %283 : $@callee_guaranteed () -> () // user: %286
  // function_ref Closure.__allocating_init(_:)
  %285 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %286
  %286 = apply %285(%284, %282) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %289
  end_borrow %283 : $@callee_guaranteed () -> ()  // id: %287
  %288 = alloc_stack $Closure                     // users: %294, %292, %289
  store %286 to [init] %288 : $*Closure           // id: %289
  %290 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %293, %292
  // function_ref Array.append(_:)
  %291 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %292
  %292 = apply %291<Closure>(%288, %290) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %290 : $*Array<Closure>              // id: %293
  dealloc_stack %288 : $*Closure                  // id: %294
  end_borrow %219 : $Optional<String>             // id: %295
  br bb25                                         // id: %296

bb6:                                              // Preds: bb4
  destroy_value %259 : $Optional<String>          // id: %297
  %298 = copy_value %219 : $Optional<String>      // users: %320, %336, %309, %299
  debug_value %298 : $Optional<String>, let, name "$match" // id: %299
  %300 = string_literal utf8 "push2"              // user: %305
  %301 = integer_literal $Builtin.Word, 5         // user: %305
  %302 = integer_literal $Builtin.Int1, -1        // user: %305
  %303 = metatype $@thin String.Type              // user: %305
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %304 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %305
  %305 = apply %304(%300, %301, %302, %303) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %306
  %306 = enum $Optional<String>, #Optional.some!enumelt, %305 : $String // user: %308
  %307 = alloc_stack $Optional<String>            // users: %317, %316, %313, %308
  store %306 to [init] %307 : $*Optional<String>  // id: %308
  %309 = begin_borrow %298 : $Optional<String>    // users: %315, %311
  %310 = alloc_stack $Optional<String>            // users: %314, %313, %311
  %311 = store_borrow %309 to %310 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %312 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %313
  %313 = apply %312<String?>(%307, %310) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %318
  dealloc_stack %310 : $*Optional<String>         // id: %314
  end_borrow %309 : $Optional<String>             // id: %315
  destroy_addr %307 : $*Optional<String>          // id: %316
  dealloc_stack %307 : $*Optional<String>         // id: %317
  %318 = struct_extract %313 : $Bool, #Bool._value // user: %319
  cond_br %318, bb7, bb8                          // id: %319

bb7:                                              // Preds: bb6
  destroy_value %298 : $Optional<String>          // id: %320
  %321 = metatype $@thick Closure.Type            // user: %325
  %322 = begin_borrow %99 : $@callee_guaranteed () -> () // users: %326, %323
  %323 = copy_value %322 : $@callee_guaranteed () -> () // user: %325
  // function_ref Closure.__allocating_init(_:)
  %324 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %325
  %325 = apply %324(%323, %321) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %328
  end_borrow %322 : $@callee_guaranteed () -> ()  // id: %326
  %327 = alloc_stack $Closure                     // users: %333, %331, %328
  store %325 to [init] %327 : $*Closure           // id: %328
  %329 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %332, %331
  // function_ref Array.append(_:)
  %330 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %331
  %331 = apply %330<Closure>(%327, %329) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %329 : $*Array<Closure>              // id: %332
  dealloc_stack %327 : $*Closure                  // id: %333
  end_borrow %219 : $Optional<String>             // id: %334
  br bb25                                         // id: %335

bb8:                                              // Preds: bb6
  destroy_value %298 : $Optional<String>          // id: %336
  %337 = copy_value %219 : $Optional<String>      // users: %359, %375, %348, %338
  debug_value %337 : $Optional<String>, let, name "$match" // id: %338
  %339 = string_literal utf8 "push2_1"            // user: %344
  %340 = integer_literal $Builtin.Word, 7         // user: %344
  %341 = integer_literal $Builtin.Int1, -1        // user: %344
  %342 = metatype $@thin String.Type              // user: %344
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %343 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %344
  %344 = apply %343(%339, %340, %341, %342) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %345
  %345 = enum $Optional<String>, #Optional.some!enumelt, %344 : $String // user: %347
  %346 = alloc_stack $Optional<String>            // users: %356, %355, %352, %347
  store %345 to [init] %346 : $*Optional<String>  // id: %347
  %348 = begin_borrow %337 : $Optional<String>    // users: %354, %350
  %349 = alloc_stack $Optional<String>            // users: %353, %352, %350
  %350 = store_borrow %348 to %349 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %351 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %352
  %352 = apply %351<String?>(%346, %349) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %357
  dealloc_stack %349 : $*Optional<String>         // id: %353
  end_borrow %348 : $Optional<String>             // id: %354
  destroy_addr %346 : $*Optional<String>          // id: %355
  dealloc_stack %346 : $*Optional<String>         // id: %356
  %357 = struct_extract %352 : $Bool, #Bool._value // user: %358
  cond_br %357, bb9, bb10                         // id: %358

bb9:                                              // Preds: bb8
  destroy_value %337 : $Optional<String>          // id: %359
  %360 = metatype $@thick Closure.Type            // user: %364
  %361 = begin_borrow %116 : $@callee_guaranteed () -> () // users: %365, %362
  %362 = copy_value %361 : $@callee_guaranteed () -> () // user: %364
  // function_ref Closure.__allocating_init(_:)
  %363 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %364
  %364 = apply %363(%362, %360) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %367
  end_borrow %361 : $@callee_guaranteed () -> ()  // id: %365
  %366 = alloc_stack $Closure                     // users: %372, %370, %367
  store %364 to [init] %366 : $*Closure           // id: %367
  %368 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %371, %370
  // function_ref Array.append(_:)
  %369 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %370
  %370 = apply %369<Closure>(%366, %368) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %368 : $*Array<Closure>              // id: %371
  dealloc_stack %366 : $*Closure                  // id: %372
  end_borrow %219 : $Optional<String>             // id: %373
  br bb25                                         // id: %374

bb10:                                             // Preds: bb8
  destroy_value %337 : $Optional<String>          // id: %375
  %376 = copy_value %219 : $Optional<String>      // users: %398, %431, %387, %377
  debug_value %376 : $Optional<String>, let, name "$match" // id: %377
  %378 = string_literal utf8 "pop"                // user: %383
  %379 = integer_literal $Builtin.Word, 3         // user: %383
  %380 = integer_literal $Builtin.Int1, -1        // user: %383
  %381 = metatype $@thin String.Type              // user: %383
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %382 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %383
  %383 = apply %382(%378, %379, %380, %381) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %384
  %384 = enum $Optional<String>, #Optional.some!enumelt, %383 : $String // user: %386
  %385 = alloc_stack $Optional<String>            // users: %395, %394, %391, %386
  store %384 to [init] %385 : $*Optional<String>  // id: %386
  %387 = begin_borrow %376 : $Optional<String>    // users: %393, %389
  %388 = alloc_stack $Optional<String>            // users: %392, %391, %389
  %389 = store_borrow %387 to %388 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %390 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %391
  %391 = apply %390<String?>(%385, %388) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %396
  dealloc_stack %388 : $*Optional<String>         // id: %392
  end_borrow %387 : $Optional<String>             // id: %393
  destroy_addr %385 : $*Optional<String>          // id: %394
  dealloc_stack %385 : $*Optional<String>         // id: %395
  %396 = struct_extract %391 : $Bool, #Bool._value // user: %397
  cond_br %396, bb11, bb14                        // id: %397

bb11:                                             // Preds: bb10
  destroy_value %376 : $Optional<String>          // id: %398
  %399 = metatype $@thin Bool.Type                // user: %415
  %400 = begin_access [read] [static] %143 : $*Array<Closure> // users: %402, %401
  %401 = load [copy] %400 : $*Array<Closure>      // users: %413, %403
  end_access %400 : $*Array<Closure>              // id: %402
  %403 = begin_borrow %401 : $Array<Closure>      // users: %412, %405
  %404 = alloc_stack $Array<Closure>              // users: %417, %406, %405
  %405 = store_borrow %403 to %404 : $*Array<Closure>
  %406 = load_borrow %404 : $*Array<Closure>      // users: %416, %408
  %407 = alloc_stack $Array<Closure>              // users: %411, %410, %408
  %408 = store_borrow %406 to %407 : $*Array<Closure>
  // function_ref Collection.isEmpty.getter
  %409 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %410
  %410 = apply %409<[Closure]>(%407) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %415
  dealloc_stack %407 : $*Array<Closure>           // id: %411
  end_borrow %403 : $Array<Closure>               // id: %412
  destroy_value %401 : $Array<Closure>            // id: %413
  // function_ref static Bool.! prefix(_:)
  %414 = function_ref @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool // user: %415
  %415 = apply %414(%410, %399) : $@convention(method) (Bool, @thin Bool.Type) -> Bool // user: %418
  end_borrow %406 : $Array<Closure>               // id: %416
  dealloc_stack %404 : $*Array<Closure>           // id: %417
  %418 = struct_extract %415 : $Bool, #Bool._value // user: %419
  cond_br %418, bb12, bb13                        // id: %419

bb12:                                             // Preds: bb11
  %420 = alloc_stack $Closure                     // users: %427, %425, %423
  %421 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %424, %423
  // function_ref RangeReplaceableCollection<>.removeLast()
  %422 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %423
  %423 = apply %422<[Closure]>(%420, %421) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %421 : $*Array<Closure>              // id: %424
  %425 = load [take] %420 : $*Closure             // user: %426
  destroy_value %425 : $Closure                   // id: %426
  dealloc_stack %420 : $*Closure                  // id: %427
  end_borrow %219 : $Optional<String>             // id: %428
  br bb25                                         // id: %429

bb13:                                             // Preds: bb11
  br bb15                                         // id: %430

bb14:                                             // Preds: bb10
  destroy_value %376 : $Optional<String>          // id: %431
  br bb15                                         // id: %432

bb15:                                             // Preds: bb13 bb14
  %433 = copy_value %219 : $Optional<String>      // users: %455, %467, %444, %434
  debug_value %433 : $Optional<String>, let, name "$match" // id: %434
  %435 = string_literal utf8 "inc"                // user: %440
  %436 = integer_literal $Builtin.Word, 3         // user: %440
  %437 = integer_literal $Builtin.Int1, -1        // user: %440
  %438 = metatype $@thin String.Type              // user: %440
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %439 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %440
  %440 = apply %439(%435, %436, %437, %438) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %441
  %441 = enum $Optional<String>, #Optional.some!enumelt, %440 : $String // user: %443
  %442 = alloc_stack $Optional<String>            // users: %452, %451, %448, %443
  store %441 to [init] %442 : $*Optional<String>  // id: %443
  %444 = begin_borrow %433 : $Optional<String>    // users: %450, %446
  %445 = alloc_stack $Optional<String>            // users: %449, %448, %446
  %446 = store_borrow %444 to %445 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %447 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %448
  %448 = apply %447<String?>(%442, %445) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %453
  dealloc_stack %445 : $*Optional<String>         // id: %449
  end_borrow %444 : $Optional<String>             // id: %450
  destroy_addr %442 : $*Optional<String>          // id: %451
  dealloc_stack %442 : $*Optional<String>         // id: %452
  %453 = struct_extract %448 : $Bool, #Bool._value // user: %454
  cond_br %453, bb16, bb17                        // id: %454

bb16:                                             // Preds: bb15
  destroy_value %433 : $Optional<String>          // id: %455
  %456 = metatype $@thin Int.Type                 // user: %463
  %457 = integer_literal $Builtin.IntLiteral, 1   // user: %460
  %458 = metatype $@thin Int.Type                 // user: %460
  // function_ref Int.init(_builtinIntegerLiteral:)
  %459 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %460
  %460 = apply %459(%457, %458) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %463
  %461 = begin_access [modify] [dynamic] %62 : $*Int // users: %464, %463
  // function_ref static Int.+= infix(_:_:)
  %462 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %463
  %463 = apply %462(%461, %460, %456) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %461 : $*Int                         // id: %464
  end_borrow %219 : $Optional<String>             // id: %465
  br bb25                                         // id: %466

bb17:                                             // Preds: bb15
  destroy_value %433 : $Optional<String>          // id: %467
  %468 = copy_value %219 : $Optional<String>      // users: %490, %534, %479, %469
  debug_value %468 : $Optional<String>, let, name "$match" // id: %469
  %470 = string_literal utf8 "exec"               // user: %475
  %471 = integer_literal $Builtin.Word, 4         // user: %475
  %472 = integer_literal $Builtin.Int1, -1        // user: %475
  %473 = metatype $@thin String.Type              // user: %475
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %474 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %475
  %475 = apply %474(%470, %471, %472, %473) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %476
  %476 = enum $Optional<String>, #Optional.some!enumelt, %475 : $String // user: %478
  %477 = alloc_stack $Optional<String>            // users: %487, %486, %483, %478
  store %476 to [init] %477 : $*Optional<String>  // id: %478
  %479 = begin_borrow %468 : $Optional<String>    // users: %485, %481
  %480 = alloc_stack $Optional<String>            // users: %484, %483, %481
  %481 = store_borrow %479 to %480 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %482 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %483
  %483 = apply %482<String?>(%477, %480) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %488
  dealloc_stack %480 : $*Optional<String>         // id: %484
  end_borrow %479 : $Optional<String>             // id: %485
  destroy_addr %477 : $*Optional<String>          // id: %486
  dealloc_stack %477 : $*Optional<String>         // id: %487
  %488 = struct_extract %483 : $Bool, #Bool._value // user: %489
  cond_br %488, bb18, bb22                        // id: %489

bb18:                                             // Preds: bb17
  destroy_value %468 : $Optional<String>          // id: %490
  %491 = begin_access [read] [static] %143 : $*Array<Closure> // users: %493, %492
  %492 = load [copy] %491 : $*Array<Closure>      // users: %506, %494
  end_access %491 : $*Array<Closure>              // id: %493
  %494 = begin_borrow %492 : $Array<Closure>      // users: %505, %496
  %495 = alloc_stack $Array<Closure>              // users: %524, %531, %497, %496
  %496 = store_borrow %494 to %495 : $*Array<Closure>
  %497 = load_borrow %495 : $*Array<Closure>      // users: %523, %530, %500
  %498 = alloc_stack $Optional<Closure>           // users: %522, %529, %504, %502
  %499 = alloc_stack $Array<Closure>              // users: %503, %502, %500
  %500 = store_borrow %497 to %499 : $*Array<Closure>
  // function_ref BidirectionalCollection.last.getter
  %501 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %502
  %502 = apply %501<[Closure]>(%498, %499) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %499 : $*Array<Closure>           // id: %503
  %504 = load [take] %498 : $*Optional<Closure>   // user: %507
  end_borrow %494 : $Array<Closure>               // id: %505
  destroy_value %492 : $Array<Closure>            // id: %506
  switch_enum %504 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %507

// %508                                           // users: %515, %509
bb19(%508 : @owned $Closure):                     // Preds: bb18
  %509 = begin_borrow %508 : $Closure             // users: %514, %510
  %510 = ref_element_addr %509 : $Closure, #Closure.closure // user: %511
  %511 = begin_access [read] [dynamic] %510 : $*@callee_guaranteed () -> () // users: %513, %512
  %512 = load [copy] %511 : $*@callee_guaranteed () -> () // users: %521, %516
  end_access %511 : $*@callee_guaranteed () -> () // id: %513
  end_borrow %509 : $Closure                      // id: %514
  destroy_value %508 : $Closure                   // id: %515
  %516 = begin_borrow %512 : $@callee_guaranteed () -> () // users: %518, %517
  %517 = apply %516() : $@callee_guaranteed () -> ()
  end_borrow %516 : $@callee_guaranteed () -> ()  // id: %518
  %519 = tuple ()                                 // user: %520
  %520 = enum $Optional<()>, #Optional.some!enumelt, %519 : $() // user: %525
  destroy_value %512 : $@callee_guaranteed () -> () // id: %521
  dealloc_stack %498 : $*Optional<Closure>        // id: %522
  end_borrow %497 : $Array<Closure>               // id: %523
  dealloc_stack %495 : $*Array<Closure>           // id: %524
  br bb20(%520 : $Optional<()>)                   // id: %525

bb20(%526 : $Optional<()>):                       // Preds: bb21 bb19
  end_borrow %219 : $Optional<String>             // id: %527
  br bb25                                         // id: %528

bb21:                                             // Preds: bb18
  dealloc_stack %498 : $*Optional<Closure>        // id: %529
  end_borrow %497 : $Array<Closure>               // id: %530
  dealloc_stack %495 : $*Array<Closure>           // id: %531
  %532 = enum $Optional<()>, #Optional.none!enumelt // user: %533
  br bb20(%532 : $Optional<()>)                   // id: %533

bb22:                                             // Preds: bb17
  destroy_value %468 : $Optional<String>          // id: %534
  %535 = copy_value %219 : $Optional<String>      // users: %557, %567, %546, %536
  debug_value %535 : $Optional<String>, let, name "$match" // id: %536
  %537 = string_literal utf8 "exit"               // user: %542
  %538 = integer_literal $Builtin.Word, 4         // user: %542
  %539 = integer_literal $Builtin.Int1, -1        // user: %542
  %540 = metatype $@thin String.Type              // user: %542
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %541 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %542
  %542 = apply %541(%537, %538, %539, %540) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %543
  %543 = enum $Optional<String>, #Optional.some!enumelt, %542 : $String // user: %545
  %544 = alloc_stack $Optional<String>            // users: %554, %553, %550, %545
  store %543 to [init] %544 : $*Optional<String>  // id: %545
  %546 = begin_borrow %535 : $Optional<String>    // users: %552, %548
  %547 = alloc_stack $Optional<String>            // users: %551, %550, %548
  %548 = store_borrow %546 to %547 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %549 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %550
  %550 = apply %549<String?>(%544, %547) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %555
  dealloc_stack %547 : $*Optional<String>         // id: %551
  end_borrow %546 : $Optional<String>             // id: %552
  destroy_addr %544 : $*Optional<String>          // id: %553
  dealloc_stack %544 : $*Optional<String>         // id: %554
  %555 = struct_extract %550 : $Bool, #Bool._value // user: %556
  cond_br %555, bb23, bb24                        // id: %556

bb23:                                             // Preds: bb22
  destroy_value %535 : $Optional<String>          // id: %557
  %558 = integer_literal $Builtin.Int1, 0         // user: %561
  %559 = metatype $@thin Bool.Type                // user: %561
  // function_ref Bool.init(_builtinBooleanLiteral:)
  %560 = function_ref @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %561
  %561 = apply %560(%558, %559) : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %563
  %562 = begin_access [modify] [static] %179 : $*Bool // users: %564, %563
  assign %561 to %562 : $*Bool                    // id: %563
  end_access %562 : $*Bool                        // id: %564
  end_borrow %219 : $Optional<String>             // id: %565
  br bb25                                         // id: %566

bb24:                                             // Preds: bb22
  destroy_value %535 : $Optional<String>          // id: %567
  %568 = integer_literal $Builtin.Word, 1         // user: %570
  // function_ref _allocateUninitializedArray<A>(_:)
  %569 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %570
  %570 = apply %569<Any>(%568) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %571
  (%571, %572) = destructure_tuple %570 : $(Array<Any>, Builtin.RawPointer) // users: %590, %587, %573
  %573 = pointer_to_address %572 : $Builtin.RawPointer to [strict] $*Any // user: %580
  %574 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %579
  %575 = integer_literal $Builtin.Word, 44        // user: %579
  %576 = integer_literal $Builtin.Int1, 0         // user: %579
  %577 = metatype $@thin String.Type              // user: %579
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %578 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %579
  %579 = apply %578(%574, %575, %576, %577) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %581
  %580 = init_existential_addr %573 : $*Any, $String // user: %581
  store %579 to [init] %580 : $*String            // id: %581
  // function_ref default argument 1 of print(_:separator:terminator:)
  %582 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %583
  %583 = apply %582() : $@convention(thin) () -> @owned String // users: %589, %587
  // function_ref default argument 2 of print(_:separator:terminator:)
  %584 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %585
  %585 = apply %584() : $@convention(thin) () -> @owned String // users: %588, %587
  // function_ref print(_:separator:terminator:)
  %586 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %587
  %587 = apply %586(%571, %583, %585) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %585 : $String                    // id: %588
  destroy_value %583 : $String                    // id: %589
  destroy_value %571 : $Array<Any>                // id: %590
  end_borrow %219 : $Optional<String>             // id: %591
  br bb25                                         // id: %592

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  destroy_value %217 : $Optional<String>          // id: %593
  br bb1                                          // id: %594

bb26:                                             // Preds: bb1
  %595 = integer_literal $Builtin.Word, 1         // user: %597
  // function_ref _allocateUninitializedArray<A>(_:)
  %596 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %597
  %597 = apply %596<Any>(%595) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %598
  (%598, %599) = destructure_tuple %597 : $(Array<Any>, Builtin.RawPointer) // users: %617, %614, %600
  %600 = pointer_to_address %599 : $Builtin.RawPointer to [strict] $*Any // user: %607
  %601 = string_literal utf8 "===== will end"     // user: %606
  %602 = integer_literal $Builtin.Word, 14        // user: %606
  %603 = integer_literal $Builtin.Int1, -1        // user: %606
  %604 = metatype $@thin String.Type              // user: %606
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %605 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %606
  %606 = apply %605(%601, %602, %603, %604) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %608
  %607 = init_existential_addr %600 : $*Any, $String // user: %608
  store %606 to [init] %607 : $*String            // id: %608
  // function_ref default argument 1 of print(_:separator:terminator:)
  %609 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %610
  %610 = apply %609() : $@convention(thin) () -> @owned String // users: %616, %614
  // function_ref default argument 2 of print(_:separator:terminator:)
  %611 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %612
  %612 = apply %611() : $@convention(thin) () -> @owned String // users: %615, %614
  // function_ref print(_:separator:terminator:)
  %613 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %614
  %614 = apply %613(%598, %610, %612) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %612 : $String                    // id: %615
  destroy_value %610 : $String                    // id: %616
  destroy_value %598 : $Array<Any>                // id: %617
  dealloc_stack %179 : $*Bool                     // id: %618
  destroy_addr %143 : $*Array<Closure>            // id: %619
  dealloc_stack %143 : $*Array<Closure>           // id: %620
  destroy_value %116 : $@callee_guaranteed () -> () // id: %621
  destroy_value %99 : $@callee_guaranteed () -> () // id: %622
  destroy_value %85 : $@callee_guaranteed () -> () // id: %623
  destroy_value %74 : $@callee_guaranteed () -> () // id: %624
  destroy_value %61 : ${ var Int }                // id: %625
  destroy_value %13 : $Number                     // id: %626
  destroy_value %5 : $Empty                       // id: %627
  destroy_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %628
  %629 = tuple ()                                 // user: %630
  return %629 : $()                               // id: %630
} // end sil function '$s4file3fooyyF'

  *** SIL function after  #140, stage Guaranteed Passes, pass 8: RawSILInstLowering (raw-sil-inst-lowering)
// foo()
sil hidden [ossa] @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %626, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %625, %106, %91, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %13
  %8 = integer_literal $Builtin.IntLiteral, 0     // user: %11
  %9 = metatype $@thin Int.Type                   // user: %11
  // function_ref Int.init(_builtinIntegerLiteral:)
  %10 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %11
  %11 = apply %10(%8, %9) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %13
  // function_ref Number.__allocating_init(number:)
  %12 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %13
  %13 = apply %12(%11, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %624, %102, %87, %77, %68, %14
  debug_value %13 : $Number, let, name "number"   // id: %14
  %15 = integer_literal $Builtin.Word, 1          // user: %17
  // function_ref _allocateUninitializedArray<A>(_:)
  %16 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %17
  %17 = apply %16<Any>(%15) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %18
  (%18, %19) = destructure_tuple %17 : $(Array<Any>, Builtin.RawPointer) // users: %37, %34, %20
  %20 = pointer_to_address %19 : $Builtin.RawPointer to [strict] $*Any // user: %27
  %21 = string_literal utf8 "===== Did init"      // user: %26
  %22 = integer_literal $Builtin.Word, 14         // user: %26
  %23 = integer_literal $Builtin.Int1, -1         // user: %26
  %24 = metatype $@thin String.Type               // user: %26
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %25 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %26 = apply %25(%21, %22, %23, %24) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %27 = init_existential_addr %20 : $*Any, $String // user: %28
  store %26 to [init] %27 : $*String              // id: %28
  // function_ref default argument 1 of print(_:separator:terminator:)
  %29 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %30
  %30 = apply %29() : $@convention(thin) () -> @owned String // users: %36, %34
  // function_ref default argument 2 of print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %32
  %32 = apply %31() : $@convention(thin) () -> @owned String // users: %35, %34
  // function_ref print(_:separator:terminator:)
  %33 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %34
  %34 = apply %33(%18, %30, %32) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %32 : $String                     // id: %35
  destroy_value %30 : $String                     // id: %36
  destroy_value %18 : $Array<Any>                 // id: %37
  %38 = integer_literal $Builtin.Word, 1          // user: %40
  // function_ref _allocateUninitializedArray<A>(_:)
  %39 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %40
  %40 = apply %39<Any>(%38) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %41
  (%41, %42) = destructure_tuple %40 : $(Array<Any>, Builtin.RawPointer) // users: %60, %57, %43
  %43 = pointer_to_address %42 : $Builtin.RawPointer to [strict] $*Any // user: %50
  %44 = string_literal utf8 "===== Did hook"      // user: %49
  %45 = integer_literal $Builtin.Word, 14         // user: %49
  %46 = integer_literal $Builtin.Int1, -1         // user: %49
  %47 = metatype $@thin String.Type               // user: %49
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %48 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %49
  %49 = apply %48(%44, %45, %46, %47) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %51
  %50 = init_existential_addr %43 : $*Any, $String // user: %51
  store %49 to [init] %50 : $*String              // id: %51
  // function_ref default argument 1 of print(_:separator:terminator:)
  %52 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %53
  %53 = apply %52() : $@convention(thin) () -> @owned String // users: %59, %57
  // function_ref default argument 2 of print(_:separator:terminator:)
  %54 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %55
  %55 = apply %54() : $@convention(thin) () -> @owned String // users: %58, %57
  // function_ref print(_:separator:terminator:)
  %56 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %57
  %57 = apply %56(%41, %53, %55) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %55 : $String                     // id: %58
  destroy_value %53 : $String                     // id: %59
  destroy_value %41 : $Array<Any>                 // id: %60
  %61 = alloc_box ${ var Int }, var, name "value" // users: %623, %113, %83, %62
  %62 = project_box %61 : ${ var Int }, 0         // users: %459, %67
  %63 = integer_literal $Builtin.IntLiteral, 0    // user: %66
  %64 = metatype $@thin Int.Type                  // user: %66
  // function_ref Int.init(_builtinIntegerLiteral:)
  %65 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %66
  %66 = apply %65(%63, %64) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %67
  store %66 to [trivial] %62 : $*Int              // id: %67
  %68 = begin_borrow %13 : $Number                // users: %71, %69
  %69 = copy_value %68 : $Number                  // users: %76, %73, %70
  debug_value %69 : $Number, let, name "number"   // id: %70
  end_borrow %68 : $Number                        // id: %71
  // function_ref closure #2 in foo()
  %72 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %74
  %73 = copy_value %69 : $Number                  // user: %74
  %74 = partial_apply [callee_guaranteed] %72(%73) : $@convention(thin) (@guaranteed Number) -> () // users: %622, %242, %75
  debug_value %74 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %75
  destroy_value %69 : $Number                     // id: %76
  %77 = begin_borrow %13 : $Number                // users: %80, %78
  %78 = copy_value %77 : $Number                  // users: %86, %82, %79
  debug_value %78 : $Number, let, name "number"   // id: %79
  end_borrow %77 : $Number                        // id: %80
  // function_ref closure #3 in foo()
  %81 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %84
  %82 = copy_value %78 : $Number                  // user: %84
  %83 = copy_value %61 : ${ var Int }             // user: %84
  %84 = partial_apply [callee_guaranteed] %81(%82, %83) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %621, %281, %85
  debug_value %84 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %85
  destroy_value %78 : $Number                     // id: %86
  %87 = begin_borrow %13 : $Number                // users: %90, %88
  %88 = copy_value %87 : $Number                  // users: %101, %96, %89
  debug_value %88 : $Number, let, name "number"   // id: %89
  end_borrow %87 : $Number                        // id: %90
  %91 = begin_borrow %5 : $Empty                  // users: %94, %92
  %92 = copy_value %91 : $Empty                   // users: %100, %97, %93
  debug_value %92 : $Empty, let, name "empty"     // id: %93
  end_borrow %91 : $Empty                         // id: %94
  // function_ref closure #4 in foo()
  %95 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %98
  %96 = copy_value %88 : $Number                  // user: %98
  %97 = copy_value %92 : $Empty                   // user: %98
  %98 = partial_apply [callee_guaranteed] %95(%96, %97) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %620, %320, %99
  debug_value %98 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %99
  destroy_value %92 : $Empty                      // id: %100
  destroy_value %88 : $Number                     // id: %101
  %102 = begin_borrow %13 : $Number               // users: %105, %103
  %103 = copy_value %102 : $Number                // users: %117, %111, %104
  debug_value %103 : $Number, let, name "number"  // id: %104
  end_borrow %102 : $Number                       // id: %105
  %106 = begin_borrow %5 : $Empty                 // users: %109, %107
  %107 = copy_value %106 : $Empty                 // users: %116, %112, %108
  debug_value %107 : $Empty, let, name "empty"    // id: %108
  end_borrow %106 : $Empty                        // id: %109
  // function_ref closure #5 in foo()
  %110 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %114
  %111 = copy_value %103 : $Number                // user: %114
  %112 = copy_value %107 : $Empty                 // user: %114
  %113 = copy_value %61 : ${ var Int }            // user: %114
  %114 = partial_apply [callee_guaranteed] %110(%111, %112, %113) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %619, %359, %115
  debug_value %114 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %115
  destroy_value %107 : $Empty                     // id: %116
  destroy_value %103 : $Number                    // id: %117
  %118 = integer_literal $Builtin.Word, 1         // user: %120
  // function_ref _allocateUninitializedArray<A>(_:)
  %119 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %120
  %120 = apply %119<Any>(%118) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %121
  (%121, %122) = destructure_tuple %120 : $(Array<Any>, Builtin.RawPointer) // users: %140, %137, %123
  %123 = pointer_to_address %122 : $Builtin.RawPointer to [strict] $*Any // user: %130
  %124 = string_literal utf8 "===== Did init closures" // user: %129
  %125 = integer_literal $Builtin.Word, 23        // user: %129
  %126 = integer_literal $Builtin.Int1, -1        // user: %129
  %127 = metatype $@thin String.Type              // user: %129
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %128 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %129
  %129 = apply %128(%124, %125, %126, %127) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %131
  %130 = init_existential_addr %123 : $*Any, $String // user: %131
  store %129 to [init] %130 : $*String            // id: %131
  // function_ref default argument 1 of print(_:separator:terminator:)
  %132 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %133
  %133 = apply %132() : $@convention(thin) () -> @owned String // users: %139, %137
  // function_ref default argument 2 of print(_:separator:terminator:)
  %134 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %135
  %135 = apply %134() : $@convention(thin) () -> @owned String // users: %138, %137
  // function_ref print(_:separator:terminator:)
  %136 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %137
  %137 = apply %136(%121, %133, %135) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %135 : $String                    // id: %138
  destroy_value %133 : $String                    // id: %139
  destroy_value %121 : $Array<Any>                // id: %140
  %141 = alloc_stack $Array<Closure>, var, name "storage" // users: %618, %617, %145, %150, %249, %288, %327, %366, %398, %419, %489
  %142 = metatype $@thin Array<Closure>.Type      // user: %144
  // function_ref Array.init()
  %143 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %144
  %144 = apply %143<Closure>(%142) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %145
  store %144 to [init] %141 : $*Array<Closure>    // id: %145
  %146 = integer_literal $Builtin.IntLiteral, 100 // user: %149
  %147 = metatype $@thin Int.Type                 // user: %149
  // function_ref Int.init(_builtinIntegerLiteral:)
  %148 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %149
  %149 = apply %148(%146, %147) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %152
  %150 = begin_access [modify] [static] %141 : $*Array<Closure> // users: %153, %152
  // function_ref Array.reserveCapacity(_:)
  %151 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %152
  %152 = apply %151<Closure>(%149, %150) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %150 : $*Array<Closure>              // id: %153
  %154 = integer_literal $Builtin.Word, 1         // user: %156
  // function_ref _allocateUninitializedArray<A>(_:)
  %155 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %156
  %156 = apply %155<Any>(%154) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %157
  (%157, %158) = destructure_tuple %156 : $(Array<Any>, Builtin.RawPointer) // users: %176, %173, %159
  %159 = pointer_to_address %158 : $Builtin.RawPointer to [strict] $*Any // user: %166
  %160 = string_literal utf8 "===== Did init array" // user: %165
  %161 = integer_literal $Builtin.Word, 20        // user: %165
  %162 = integer_literal $Builtin.Int1, -1        // user: %165
  %163 = metatype $@thin String.Type              // user: %165
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %164 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %165
  %165 = apply %164(%160, %161, %162, %163) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %167
  %166 = init_existential_addr %159 : $*Any, $String // user: %167
  store %165 to [init] %166 : $*String            // id: %167
  // function_ref default argument 1 of print(_:separator:terminator:)
  %168 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %169
  %169 = apply %168() : $@convention(thin) () -> @owned String // users: %175, %173
  // function_ref default argument 2 of print(_:separator:terminator:)
  %170 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %171
  %171 = apply %170() : $@convention(thin) () -> @owned String // users: %174, %173
  // function_ref print(_:separator:terminator:)
  %172 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %173
  %173 = apply %172(%157, %169, %171) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %171 : $String                    // id: %174
  destroy_value %169 : $String                    // id: %175
  destroy_value %157 : $Array<Any>                // id: %176
  %177 = alloc_stack $Bool, var, name "run"       // users: %616, %182, %184, %560
  %178 = integer_literal $Builtin.Int1, -1        // user: %181
  %179 = metatype $@thin Bool.Type                // user: %181
  // function_ref Bool.init(_builtinBooleanLiteral:)
  %180 = function_ref @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %181
  %181 = apply %180(%178, %179) : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %182
  store %181 to [trivial] %177 : $*Bool           // id: %182
  br bb1                                          // id: %183

bb1:                                              // Preds: bb25 bb0
  %184 = begin_access [read] [static] %177 : $*Bool // users: %185, %187
  %185 = struct_element_addr %184 : $*Bool, #Bool._value // user: %186
  %186 = load [trivial] %185 : $*Builtin.Int1     // user: %188
  end_access %184 : $*Bool                        // id: %187
  cond_br %186, bb2, bb26                         // id: %188

bb2:                                              // Preds: bb1
  %189 = integer_literal $Builtin.Word, 1         // user: %191
  // function_ref _allocateUninitializedArray<A>(_:)
  %190 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %191
  %191 = apply %190<Any>(%189) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %192
  (%192, %193) = destructure_tuple %191 : $(Array<Any>, Builtin.RawPointer) // users: %211, %208, %194
  %194 = pointer_to_address %193 : $Builtin.RawPointer to [strict] $*Any // user: %201
  %195 = string_literal utf8 "===== Ask"          // user: %200
  %196 = integer_literal $Builtin.Word, 9         // user: %200
  %197 = integer_literal $Builtin.Int1, -1        // user: %200
  %198 = metatype $@thin String.Type              // user: %200
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %199 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %200
  %200 = apply %199(%195, %196, %197, %198) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %202
  %201 = init_existential_addr %194 : $*Any, $String // user: %202
  store %200 to [init] %201 : $*String            // id: %202
  // function_ref default argument 1 of print(_:separator:terminator:)
  %203 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %204
  %204 = apply %203() : $@convention(thin) () -> @owned String // users: %210, %208
  // function_ref default argument 2 of print(_:separator:terminator:)
  %205 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %206
  %206 = apply %205() : $@convention(thin) () -> @owned String // users: %209, %208
  // function_ref print(_:separator:terminator:)
  %207 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %208
  %208 = apply %207(%192, %204, %206) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %206 : $String                    // id: %209
  destroy_value %204 : $String                    // id: %210
  destroy_value %192 : $Array<Any>                // id: %211
  // function_ref default argument 0 of readLine(strippingNewline:)
  %212 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %213
  %213 = apply %212() : $@convention(thin) () -> Bool // user: %215
  // function_ref readLine(strippingNewline:)
  %214 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %215
  %215 = apply %214(%213) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %591, %217, %216
  debug_value %215 : $Optional<String>, let, name "line" // id: %216
  %217 = begin_borrow %215 : $Optional<String>    // users: %589, %563, %533, %525, %466, %463, %431, %426, %374, %371, %335, %332, %296, %293, %257, %254, %218
  %218 = copy_value %217 : $Optional<String>      // users: %240, %256, %229, %219
  debug_value %218 : $Optional<String>, let, name "$match" // id: %219
  %220 = string_literal utf8 "push1"              // user: %225
  %221 = integer_literal $Builtin.Word, 5         // user: %225
  %222 = integer_literal $Builtin.Int1, -1        // user: %225
  %223 = metatype $@thin String.Type              // user: %225
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %224 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %225
  %225 = apply %224(%220, %221, %222, %223) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %226
  %226 = enum $Optional<String>, #Optional.some!enumelt, %225 : $String // user: %228
  %227 = alloc_stack $Optional<String>            // users: %237, %236, %233, %228
  store %226 to [init] %227 : $*Optional<String>  // id: %228
  %229 = begin_borrow %218 : $Optional<String>    // users: %235, %231
  %230 = alloc_stack $Optional<String>            // users: %234, %233, %231
  %231 = store_borrow %229 to %230 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %232 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %233
  %233 = apply %232<String?>(%227, %230) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %238
  dealloc_stack %230 : $*Optional<String>         // id: %234
  end_borrow %229 : $Optional<String>             // id: %235
  destroy_addr %227 : $*Optional<String>          // id: %236
  dealloc_stack %227 : $*Optional<String>         // id: %237
  %238 = struct_extract %233 : $Bool, #Bool._value // user: %239
  cond_br %238, bb3, bb4                          // id: %239

bb3:                                              // Preds: bb2
  destroy_value %218 : $Optional<String>          // id: %240
  %241 = metatype $@thick Closure.Type            // user: %245
  %242 = begin_borrow %74 : $@callee_guaranteed () -> () // users: %246, %243
  %243 = copy_value %242 : $@callee_guaranteed () -> () // user: %245
  // function_ref Closure.__allocating_init(_:)
  %244 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %245
  %245 = apply %244(%243, %241) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %248
  end_borrow %242 : $@callee_guaranteed () -> ()  // id: %246
  %247 = alloc_stack $Closure                     // users: %253, %251, %248
  store %245 to [init] %247 : $*Closure           // id: %248
  %249 = begin_access [modify] [static] %141 : $*Array<Closure> // users: %252, %251
  // function_ref Array.append(_:)
  %250 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %251
  %251 = apply %250<Closure>(%247, %249) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %249 : $*Array<Closure>              // id: %252
  dealloc_stack %247 : $*Closure                  // id: %253
  end_borrow %217 : $Optional<String>             // id: %254
  br bb25                                         // id: %255

bb4:                                              // Preds: bb2
  destroy_value %218 : $Optional<String>          // id: %256
  %257 = copy_value %217 : $Optional<String>      // users: %279, %295, %268, %258
  debug_value %257 : $Optional<String>, let, name "$match" // id: %258
  %259 = string_literal utf8 "push1_1"            // user: %264
  %260 = integer_literal $Builtin.Word, 7         // user: %264
  %261 = integer_literal $Builtin.Int1, -1        // user: %264
  %262 = metatype $@thin String.Type              // user: %264
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %263 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %264
  %264 = apply %263(%259, %260, %261, %262) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %265
  %265 = enum $Optional<String>, #Optional.some!enumelt, %264 : $String // user: %267
  %266 = alloc_stack $Optional<String>            // users: %276, %275, %272, %267
  store %265 to [init] %266 : $*Optional<String>  // id: %267
  %268 = begin_borrow %257 : $Optional<String>    // users: %274, %270
  %269 = alloc_stack $Optional<String>            // users: %273, %272, %270
  %270 = store_borrow %268 to %269 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %271 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %272
  %272 = apply %271<String?>(%266, %269) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %277
  dealloc_stack %269 : $*Optional<String>         // id: %273
  end_borrow %268 : $Optional<String>             // id: %274
  destroy_addr %266 : $*Optional<String>          // id: %275
  dealloc_stack %266 : $*Optional<String>         // id: %276
  %277 = struct_extract %272 : $Bool, #Bool._value // user: %278
  cond_br %277, bb5, bb6                          // id: %278

bb5:                                              // Preds: bb4
  destroy_value %257 : $Optional<String>          // id: %279
  %280 = metatype $@thick Closure.Type            // user: %284
  %281 = begin_borrow %84 : $@callee_guaranteed () -> () // users: %285, %282
  %282 = copy_value %281 : $@callee_guaranteed () -> () // user: %284
  // function_ref Closure.__allocating_init(_:)
  %283 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %284
  %284 = apply %283(%282, %280) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %287
  end_borrow %281 : $@callee_guaranteed () -> ()  // id: %285
  %286 = alloc_stack $Closure                     // users: %292, %290, %287
  store %284 to [init] %286 : $*Closure           // id: %287
  %288 = begin_access [modify] [static] %141 : $*Array<Closure> // users: %291, %290
  // function_ref Array.append(_:)
  %289 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %290
  %290 = apply %289<Closure>(%286, %288) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %288 : $*Array<Closure>              // id: %291
  dealloc_stack %286 : $*Closure                  // id: %292
  end_borrow %217 : $Optional<String>             // id: %293
  br bb25                                         // id: %294

bb6:                                              // Preds: bb4
  destroy_value %257 : $Optional<String>          // id: %295
  %296 = copy_value %217 : $Optional<String>      // users: %318, %334, %307, %297
  debug_value %296 : $Optional<String>, let, name "$match" // id: %297
  %298 = string_literal utf8 "push2"              // user: %303
  %299 = integer_literal $Builtin.Word, 5         // user: %303
  %300 = integer_literal $Builtin.Int1, -1        // user: %303
  %301 = metatype $@thin String.Type              // user: %303
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %302 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %303
  %303 = apply %302(%298, %299, %300, %301) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %304
  %304 = enum $Optional<String>, #Optional.some!enumelt, %303 : $String // user: %306
  %305 = alloc_stack $Optional<String>            // users: %315, %314, %311, %306
  store %304 to [init] %305 : $*Optional<String>  // id: %306
  %307 = begin_borrow %296 : $Optional<String>    // users: %313, %309
  %308 = alloc_stack $Optional<String>            // users: %312, %311, %309
  %309 = store_borrow %307 to %308 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %310 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %311
  %311 = apply %310<String?>(%305, %308) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %316
  dealloc_stack %308 : $*Optional<String>         // id: %312
  end_borrow %307 : $Optional<String>             // id: %313
  destroy_addr %305 : $*Optional<String>          // id: %314
  dealloc_stack %305 : $*Optional<String>         // id: %315
  %316 = struct_extract %311 : $Bool, #Bool._value // user: %317
  cond_br %316, bb7, bb8                          // id: %317

bb7:                                              // Preds: bb6
  destroy_value %296 : $Optional<String>          // id: %318
  %319 = metatype $@thick Closure.Type            // user: %323
  %320 = begin_borrow %98 : $@callee_guaranteed () -> () // users: %324, %321
  %321 = copy_value %320 : $@callee_guaranteed () -> () // user: %323
  // function_ref Closure.__allocating_init(_:)
  %322 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %323
  %323 = apply %322(%321, %319) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %326
  end_borrow %320 : $@callee_guaranteed () -> ()  // id: %324
  %325 = alloc_stack $Closure                     // users: %331, %329, %326
  store %323 to [init] %325 : $*Closure           // id: %326
  %327 = begin_access [modify] [static] %141 : $*Array<Closure> // users: %330, %329
  // function_ref Array.append(_:)
  %328 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %329
  %329 = apply %328<Closure>(%325, %327) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %327 : $*Array<Closure>              // id: %330
  dealloc_stack %325 : $*Closure                  // id: %331
  end_borrow %217 : $Optional<String>             // id: %332
  br bb25                                         // id: %333

bb8:                                              // Preds: bb6
  destroy_value %296 : $Optional<String>          // id: %334
  %335 = copy_value %217 : $Optional<String>      // users: %357, %373, %346, %336
  debug_value %335 : $Optional<String>, let, name "$match" // id: %336
  %337 = string_literal utf8 "push2_1"            // user: %342
  %338 = integer_literal $Builtin.Word, 7         // user: %342
  %339 = integer_literal $Builtin.Int1, -1        // user: %342
  %340 = metatype $@thin String.Type              // user: %342
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %341 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %342
  %342 = apply %341(%337, %338, %339, %340) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %343
  %343 = enum $Optional<String>, #Optional.some!enumelt, %342 : $String // user: %345
  %344 = alloc_stack $Optional<String>            // users: %354, %353, %350, %345
  store %343 to [init] %344 : $*Optional<String>  // id: %345
  %346 = begin_borrow %335 : $Optional<String>    // users: %352, %348
  %347 = alloc_stack $Optional<String>            // users: %351, %350, %348
  %348 = store_borrow %346 to %347 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %349 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %350
  %350 = apply %349<String?>(%344, %347) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %355
  dealloc_stack %347 : $*Optional<String>         // id: %351
  end_borrow %346 : $Optional<String>             // id: %352
  destroy_addr %344 : $*Optional<String>          // id: %353
  dealloc_stack %344 : $*Optional<String>         // id: %354
  %355 = struct_extract %350 : $Bool, #Bool._value // user: %356
  cond_br %355, bb9, bb10                         // id: %356

bb9:                                              // Preds: bb8
  destroy_value %335 : $Optional<String>          // id: %357
  %358 = metatype $@thick Closure.Type            // user: %362
  %359 = begin_borrow %114 : $@callee_guaranteed () -> () // users: %363, %360
  %360 = copy_value %359 : $@callee_guaranteed () -> () // user: %362
  // function_ref Closure.__allocating_init(_:)
  %361 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %362
  %362 = apply %361(%360, %358) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %365
  end_borrow %359 : $@callee_guaranteed () -> ()  // id: %363
  %364 = alloc_stack $Closure                     // users: %370, %368, %365
  store %362 to [init] %364 : $*Closure           // id: %365
  %366 = begin_access [modify] [static] %141 : $*Array<Closure> // users: %369, %368
  // function_ref Array.append(_:)
  %367 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %368
  %368 = apply %367<Closure>(%364, %366) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %366 : $*Array<Closure>              // id: %369
  dealloc_stack %364 : $*Closure                  // id: %370
  end_borrow %217 : $Optional<String>             // id: %371
  br bb25                                         // id: %372

bb10:                                             // Preds: bb8
  destroy_value %335 : $Optional<String>          // id: %373
  %374 = copy_value %217 : $Optional<String>      // users: %396, %429, %385, %375
  debug_value %374 : $Optional<String>, let, name "$match" // id: %375
  %376 = string_literal utf8 "pop"                // user: %381
  %377 = integer_literal $Builtin.Word, 3         // user: %381
  %378 = integer_literal $Builtin.Int1, -1        // user: %381
  %379 = metatype $@thin String.Type              // user: %381
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %380 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %381
  %381 = apply %380(%376, %377, %378, %379) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %382
  %382 = enum $Optional<String>, #Optional.some!enumelt, %381 : $String // user: %384
  %383 = alloc_stack $Optional<String>            // users: %393, %392, %389, %384
  store %382 to [init] %383 : $*Optional<String>  // id: %384
  %385 = begin_borrow %374 : $Optional<String>    // users: %391, %387
  %386 = alloc_stack $Optional<String>            // users: %390, %389, %387
  %387 = store_borrow %385 to %386 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %388 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %389
  %389 = apply %388<String?>(%383, %386) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %394
  dealloc_stack %386 : $*Optional<String>         // id: %390
  end_borrow %385 : $Optional<String>             // id: %391
  destroy_addr %383 : $*Optional<String>          // id: %392
  dealloc_stack %383 : $*Optional<String>         // id: %393
  %394 = struct_extract %389 : $Bool, #Bool._value // user: %395
  cond_br %394, bb11, bb14                        // id: %395

bb11:                                             // Preds: bb10
  destroy_value %374 : $Optional<String>          // id: %396
  %397 = metatype $@thin Bool.Type                // user: %413
  %398 = begin_access [read] [static] %141 : $*Array<Closure> // users: %400, %399
  %399 = load [copy] %398 : $*Array<Closure>      // users: %411, %401
  end_access %398 : $*Array<Closure>              // id: %400
  %401 = begin_borrow %399 : $Array<Closure>      // users: %410, %403
  %402 = alloc_stack $Array<Closure>              // users: %415, %404, %403
  %403 = store_borrow %401 to %402 : $*Array<Closure>
  %404 = load_borrow %402 : $*Array<Closure>      // users: %414, %406
  %405 = alloc_stack $Array<Closure>              // users: %409, %408, %406
  %406 = store_borrow %404 to %405 : $*Array<Closure>
  // function_ref Collection.isEmpty.getter
  %407 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %408
  %408 = apply %407<[Closure]>(%405) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %413
  dealloc_stack %405 : $*Array<Closure>           // id: %409
  end_borrow %401 : $Array<Closure>               // id: %410
  destroy_value %399 : $Array<Closure>            // id: %411
  // function_ref static Bool.! prefix(_:)
  %412 = function_ref @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool // user: %413
  %413 = apply %412(%408, %397) : $@convention(method) (Bool, @thin Bool.Type) -> Bool // user: %416
  end_borrow %404 : $Array<Closure>               // id: %414
  dealloc_stack %402 : $*Array<Closure>           // id: %415
  %416 = struct_extract %413 : $Bool, #Bool._value // user: %417
  cond_br %416, bb12, bb13                        // id: %417

bb12:                                             // Preds: bb11
  %418 = alloc_stack $Closure                     // users: %425, %423, %421
  %419 = begin_access [modify] [static] %141 : $*Array<Closure> // users: %422, %421
  // function_ref RangeReplaceableCollection<>.removeLast()
  %420 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %421
  %421 = apply %420<[Closure]>(%418, %419) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %419 : $*Array<Closure>              // id: %422
  %423 = load [take] %418 : $*Closure             // user: %424
  destroy_value %423 : $Closure                   // id: %424
  dealloc_stack %418 : $*Closure                  // id: %425
  end_borrow %217 : $Optional<String>             // id: %426
  br bb25                                         // id: %427

bb13:                                             // Preds: bb11
  br bb15                                         // id: %428

bb14:                                             // Preds: bb10
  destroy_value %374 : $Optional<String>          // id: %429
  br bb15                                         // id: %430

bb15:                                             // Preds: bb13 bb14
  %431 = copy_value %217 : $Optional<String>      // users: %453, %465, %442, %432
  debug_value %431 : $Optional<String>, let, name "$match" // id: %432
  %433 = string_literal utf8 "inc"                // user: %438
  %434 = integer_literal $Builtin.Word, 3         // user: %438
  %435 = integer_literal $Builtin.Int1, -1        // user: %438
  %436 = metatype $@thin String.Type              // user: %438
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %437 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %438
  %438 = apply %437(%433, %434, %435, %436) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %439
  %439 = enum $Optional<String>, #Optional.some!enumelt, %438 : $String // user: %441
  %440 = alloc_stack $Optional<String>            // users: %450, %449, %446, %441
  store %439 to [init] %440 : $*Optional<String>  // id: %441
  %442 = begin_borrow %431 : $Optional<String>    // users: %448, %444
  %443 = alloc_stack $Optional<String>            // users: %447, %446, %444
  %444 = store_borrow %442 to %443 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %445 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %446
  %446 = apply %445<String?>(%440, %443) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %451
  dealloc_stack %443 : $*Optional<String>         // id: %447
  end_borrow %442 : $Optional<String>             // id: %448
  destroy_addr %440 : $*Optional<String>          // id: %449
  dealloc_stack %440 : $*Optional<String>         // id: %450
  %451 = struct_extract %446 : $Bool, #Bool._value // user: %452
  cond_br %451, bb16, bb17                        // id: %452

bb16:                                             // Preds: bb15
  destroy_value %431 : $Optional<String>          // id: %453
  %454 = metatype $@thin Int.Type                 // user: %461
  %455 = integer_literal $Builtin.IntLiteral, 1   // user: %458
  %456 = metatype $@thin Int.Type                 // user: %458
  // function_ref Int.init(_builtinIntegerLiteral:)
  %457 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %458
  %458 = apply %457(%455, %456) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %461
  %459 = begin_access [modify] [dynamic] %62 : $*Int // users: %462, %461
  // function_ref static Int.+= infix(_:_:)
  %460 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %461
  %461 = apply %460(%459, %458, %454) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %459 : $*Int                         // id: %462
  end_borrow %217 : $Optional<String>             // id: %463
  br bb25                                         // id: %464

bb17:                                             // Preds: bb15
  destroy_value %431 : $Optional<String>          // id: %465
  %466 = copy_value %217 : $Optional<String>      // users: %488, %532, %477, %467
  debug_value %466 : $Optional<String>, let, name "$match" // id: %467
  %468 = string_literal utf8 "exec"               // user: %473
  %469 = integer_literal $Builtin.Word, 4         // user: %473
  %470 = integer_literal $Builtin.Int1, -1        // user: %473
  %471 = metatype $@thin String.Type              // user: %473
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %472 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %473
  %473 = apply %472(%468, %469, %470, %471) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %474
  %474 = enum $Optional<String>, #Optional.some!enumelt, %473 : $String // user: %476
  %475 = alloc_stack $Optional<String>            // users: %485, %484, %481, %476
  store %474 to [init] %475 : $*Optional<String>  // id: %476
  %477 = begin_borrow %466 : $Optional<String>    // users: %483, %479
  %478 = alloc_stack $Optional<String>            // users: %482, %481, %479
  %479 = store_borrow %477 to %478 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %480 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %481
  %481 = apply %480<String?>(%475, %478) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %486
  dealloc_stack %478 : $*Optional<String>         // id: %482
  end_borrow %477 : $Optional<String>             // id: %483
  destroy_addr %475 : $*Optional<String>          // id: %484
  dealloc_stack %475 : $*Optional<String>         // id: %485
  %486 = struct_extract %481 : $Bool, #Bool._value // user: %487
  cond_br %486, bb18, bb22                        // id: %487

bb18:                                             // Preds: bb17
  destroy_value %466 : $Optional<String>          // id: %488
  %489 = begin_access [read] [static] %141 : $*Array<Closure> // users: %491, %490
  %490 = load [copy] %489 : $*Array<Closure>      // users: %504, %492
  end_access %489 : $*Array<Closure>              // id: %491
  %492 = begin_borrow %490 : $Array<Closure>      // users: %503, %494
  %493 = alloc_stack $Array<Closure>              // users: %522, %529, %495, %494
  %494 = store_borrow %492 to %493 : $*Array<Closure>
  %495 = load_borrow %493 : $*Array<Closure>      // users: %521, %528, %498
  %496 = alloc_stack $Optional<Closure>           // users: %520, %527, %502, %500
  %497 = alloc_stack $Array<Closure>              // users: %501, %500, %498
  %498 = store_borrow %495 to %497 : $*Array<Closure>
  // function_ref BidirectionalCollection.last.getter
  %499 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %500
  %500 = apply %499<[Closure]>(%496, %497) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %497 : $*Array<Closure>           // id: %501
  %502 = load [take] %496 : $*Optional<Closure>   // user: %505
  end_borrow %492 : $Array<Closure>               // id: %503
  destroy_value %490 : $Array<Closure>            // id: %504
  switch_enum %502 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %505

// %506                                           // users: %513, %507
bb19(%506 : @owned $Closure):                     // Preds: bb18
  %507 = begin_borrow %506 : $Closure             // users: %512, %508
  %508 = ref_element_addr %507 : $Closure, #Closure.closure // user: %509
  %509 = begin_access [read] [dynamic] %508 : $*@callee_guaranteed () -> () // users: %511, %510
  %510 = load [copy] %509 : $*@callee_guaranteed () -> () // users: %519, %514
  end_access %509 : $*@callee_guaranteed () -> () // id: %511
  end_borrow %507 : $Closure                      // id: %512
  destroy_value %506 : $Closure                   // id: %513
  %514 = begin_borrow %510 : $@callee_guaranteed () -> () // users: %516, %515
  %515 = apply %514() : $@callee_guaranteed () -> ()
  end_borrow %514 : $@callee_guaranteed () -> ()  // id: %516
  %517 = tuple ()                                 // user: %518
  %518 = enum $Optional<()>, #Optional.some!enumelt, %517 : $() // user: %523
  destroy_value %510 : $@callee_guaranteed () -> () // id: %519
  dealloc_stack %496 : $*Optional<Closure>        // id: %520
  end_borrow %495 : $Array<Closure>               // id: %521
  dealloc_stack %493 : $*Array<Closure>           // id: %522
  br bb20(%518 : $Optional<()>)                   // id: %523

bb20(%524 : $Optional<()>):                       // Preds: bb21 bb19
  end_borrow %217 : $Optional<String>             // id: %525
  br bb25                                         // id: %526

bb21:                                             // Preds: bb18
  dealloc_stack %496 : $*Optional<Closure>        // id: %527
  end_borrow %495 : $Array<Closure>               // id: %528
  dealloc_stack %493 : $*Array<Closure>           // id: %529
  %530 = enum $Optional<()>, #Optional.none!enumelt // user: %531
  br bb20(%530 : $Optional<()>)                   // id: %531

bb22:                                             // Preds: bb17
  destroy_value %466 : $Optional<String>          // id: %532
  %533 = copy_value %217 : $Optional<String>      // users: %555, %565, %544, %534
  debug_value %533 : $Optional<String>, let, name "$match" // id: %534
  %535 = string_literal utf8 "exit"               // user: %540
  %536 = integer_literal $Builtin.Word, 4         // user: %540
  %537 = integer_literal $Builtin.Int1, -1        // user: %540
  %538 = metatype $@thin String.Type              // user: %540
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %539 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %540
  %540 = apply %539(%535, %536, %537, %538) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %541
  %541 = enum $Optional<String>, #Optional.some!enumelt, %540 : $String // user: %543
  %542 = alloc_stack $Optional<String>            // users: %552, %551, %548, %543
  store %541 to [init] %542 : $*Optional<String>  // id: %543
  %544 = begin_borrow %533 : $Optional<String>    // users: %550, %546
  %545 = alloc_stack $Optional<String>            // users: %549, %548, %546
  %546 = store_borrow %544 to %545 : $*Optional<String>
  // function_ref ~= infix<A>(_:_:)
  %547 = function_ref @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %548
  %548 = apply %547<String?>(%542, %545) : $@convention(thin) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0) -> Bool // user: %553
  dealloc_stack %545 : $*Optional<String>         // id: %549
  end_borrow %544 : $Optional<String>             // id: %550
  destroy_addr %542 : $*Optional<String>          // id: %551
  dealloc_stack %542 : $*Optional<String>         // id: %552
  %553 = struct_extract %548 : $Bool, #Bool._value // user: %554
  cond_br %553, bb23, bb24                        // id: %554

bb23:                                             // Preds: bb22
  destroy_value %533 : $Optional<String>          // id: %555
  %556 = integer_literal $Builtin.Int1, 0         // user: %559
  %557 = metatype $@thin Bool.Type                // user: %559
  // function_ref Bool.init(_builtinBooleanLiteral:)
  %558 = function_ref @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %559
  %559 = apply %558(%556, %557) : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool // user: %561
  %560 = begin_access [modify] [static] %177 : $*Bool // users: %561, %562
  store %559 to [trivial] %560 : $*Bool           // id: %561
  end_access %560 : $*Bool                        // id: %562
  end_borrow %217 : $Optional<String>             // id: %563
  br bb25                                         // id: %564

bb24:                                             // Preds: bb22
  destroy_value %533 : $Optional<String>          // id: %565
  %566 = integer_literal $Builtin.Word, 1         // user: %568
  // function_ref _allocateUninitializedArray<A>(_:)
  %567 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %568
  %568 = apply %567<Any>(%566) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %569
  (%569, %570) = destructure_tuple %568 : $(Array<Any>, Builtin.RawPointer) // users: %588, %585, %571
  %571 = pointer_to_address %570 : $Builtin.RawPointer to [strict] $*Any // user: %578
  %572 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %577
  %573 = integer_literal $Builtin.Word, 44        // user: %577
  %574 = integer_literal $Builtin.Int1, 0         // user: %577
  %575 = metatype $@thin String.Type              // user: %577
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %576 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %577
  %577 = apply %576(%572, %573, %574, %575) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %579
  %578 = init_existential_addr %571 : $*Any, $String // user: %579
  store %577 to [init] %578 : $*String            // id: %579
  // function_ref default argument 1 of print(_:separator:terminator:)
  %580 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %581
  %581 = apply %580() : $@convention(thin) () -> @owned String // users: %587, %585
  // function_ref default argument 2 of print(_:separator:terminator:)
  %582 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %583
  %583 = apply %582() : $@convention(thin) () -> @owned String // users: %586, %585
  // function_ref print(_:separator:terminator:)
  %584 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %585
  %585 = apply %584(%569, %581, %583) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %583 : $String                    // id: %586
  destroy_value %581 : $String                    // id: %587
  destroy_value %569 : $Array<Any>                // id: %588
  end_borrow %217 : $Optional<String>             // id: %589
  br bb25                                         // id: %590

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  destroy_value %215 : $Optional<String>          // id: %591
  br bb1                                          // id: %592

bb26:                                             // Preds: bb1
  %593 = integer_literal $Builtin.Word, 1         // user: %595
  // function_ref _allocateUninitializedArray<A>(_:)
  %594 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %595
  %595 = apply %594<Any>(%593) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %596
  (%596, %597) = destructure_tuple %595 : $(Array<Any>, Builtin.RawPointer) // users: %615, %612, %598
  %598 = pointer_to_address %597 : $Builtin.RawPointer to [strict] $*Any // user: %605
  %599 = string_literal utf8 "===== will end"     // user: %604
  %600 = integer_literal $Builtin.Word, 14        // user: %604
  %601 = integer_literal $Builtin.Int1, -1        // user: %604
  %602 = metatype $@thin String.Type              // user: %604
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %603 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %604
  %604 = apply %603(%599, %600, %601, %602) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %606
  %605 = init_existential_addr %598 : $*Any, $String // user: %606
  store %604 to [init] %605 : $*String            // id: %606
  // function_ref default argument 1 of print(_:separator:terminator:)
  %607 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %608
  %608 = apply %607() : $@convention(thin) () -> @owned String // users: %614, %612
  // function_ref default argument 2 of print(_:separator:terminator:)
  %609 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %610
  %610 = apply %609() : $@convention(thin) () -> @owned String // users: %613, %612
  // function_ref print(_:separator:terminator:)
  %611 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %612
  %612 = apply %611(%596, %608, %610) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %610 : $String                    // id: %613
  destroy_value %608 : $String                    // id: %614
  destroy_value %596 : $Array<Any>                // id: %615
  dealloc_stack %177 : $*Bool                     // id: %616
  destroy_addr %141 : $*Array<Closure>            // id: %617
  dealloc_stack %141 : $*Array<Closure>           // id: %618
  destroy_value %114 : $@callee_guaranteed () -> () // id: %619
  destroy_value %98 : $@callee_guaranteed () -> () // id: %620
  destroy_value %84 : $@callee_guaranteed () -> () // id: %621
  destroy_value %74 : $@callee_guaranteed () -> () // id: %622
  destroy_value %61 : ${ var Int }                // id: %623
  destroy_value %13 : $Number                     // id: %624
  destroy_value %5 : $Empty                       // id: %625
  destroy_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %626
  %627 = tuple ()                                 // user: %628
  return %627 : $()                               // id: %628
} // end sil function '$s4file3fooyyF'

  *** SIL function after  #145, stage Guaranteed Passes, pass 5: AllocBoxToStack (allocbox-to-stack)
// closure #1 in closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %57, %4
// %1 "weak"                                      // users: %75, %5
// %2 "unowned"                                   // users: %93, %6
// %3 "name"                                      // users: %39, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : @guaranteed $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %11
  (%11, %12) = destructure_tuple %10 : $(Array<Any>, Builtin.RawPointer) // users: %126, %123, %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %116
  %14 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %112, %111, %26, %33, %40, %51, %58, %69, %76, %87, %94, %105, %110
  %15 = integer_literal $Builtin.IntLiteral, 39   // user: %18
  %16 = metatype $@thin Int.Type                  // user: %18
  // function_ref Int.init(_builtinIntegerLiteral:)
  %17 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %18
  %18 = apply %17(%15, %16) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %25
  %19 = integer_literal $Builtin.IntLiteral, 4    // user: %22
  %20 = metatype $@thin Int.Type                  // user: %22
  // function_ref Int.init(_builtinIntegerLiteral:)
  %21 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %22
  %22 = apply %21(%19, %20) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %25
  %23 = metatype $@thin DefaultStringInterpolation.Type // user: %25
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %24 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %25
  %25 = apply %24(%18, %22, %23) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %26
  store %25 to [init] %14 : $*DefaultStringInterpolation // id: %26
  %27 = string_literal utf8 "Name: "              // user: %32
  %28 = integer_literal $Builtin.Word, 6          // user: %32
  %29 = integer_literal $Builtin.Int1, -1         // user: %32
  %30 = metatype $@thin String.Type               // user: %32
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %31 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %32
  %32 = apply %31(%27, %28, %29, %30) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %37, %35
  %33 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %36, %35
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %34 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %35
  %35 = apply %34(%32, %33) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %33 : $*DefaultStringInterpolation   // id: %36
  destroy_value %32 : $String                     // id: %37
  %38 = alloc_stack $String                       // users: %44, %42, %39
  %39 = store_borrow %3 to %38 : $*String
  %40 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %43, %42
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %41 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %42
  %42 = apply %41<String>(%38, %40) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %40 : $*DefaultStringInterpolation   // id: %43
  dealloc_stack %38 : $*String                    // id: %44
  %45 = string_literal utf8 "; Strong: ("         // user: %50
  %46 = integer_literal $Builtin.Word, 11         // user: %50
  %47 = integer_literal $Builtin.Int1, -1         // user: %50
  %48 = metatype $@thin String.Type               // user: %50
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %49 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %50
  %50 = apply %49(%45, %46, %47, %48) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %55, %53
  %51 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %54, %53
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %52 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %53
  %53 = apply %52(%50, %51) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %51 : $*DefaultStringInterpolation   // id: %54
  destroy_value %50 : $String                     // id: %55
  %56 = alloc_stack $Int                          // users: %62, %60, %57
  store %0 to [trivial] %56 : $*Int               // id: %57
  %58 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %61, %60
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %59 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %60
  %60 = apply %59<Int>(%56, %58) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %58 : $*DefaultStringInterpolation   // id: %61
  dealloc_stack %56 : $*Int                       // id: %62
  %63 = string_literal utf8 "); Weak: ("          // user: %68
  %64 = integer_literal $Builtin.Word, 10         // user: %68
  %65 = integer_literal $Builtin.Int1, -1         // user: %68
  %66 = metatype $@thin String.Type               // user: %68
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %67 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %68
  %68 = apply %67(%63, %64, %65, %66) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %73, %71
  %69 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %72, %71
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %70 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %71
  %71 = apply %70(%68, %69) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %69 : $*DefaultStringInterpolation   // id: %72
  destroy_value %68 : $String                     // id: %73
  %74 = alloc_stack $Int                          // users: %80, %78, %75
  store %1 to [trivial] %74 : $*Int               // id: %75
  %76 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %79, %78
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %77 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %78
  %78 = apply %77<Int>(%74, %76) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %76 : $*DefaultStringInterpolation   // id: %79
  dealloc_stack %74 : $*Int                       // id: %80
  %81 = string_literal utf8 "); Unowned("         // user: %86
  %82 = integer_literal $Builtin.Word, 11         // user: %86
  %83 = integer_literal $Builtin.Int1, -1         // user: %86
  %84 = metatype $@thin String.Type               // user: %86
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %85 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %86
  %86 = apply %85(%81, %82, %83, %84) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %91, %89
  %87 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %90, %89
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %88 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %89
  %89 = apply %88(%86, %87) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %87 : $*DefaultStringInterpolation   // id: %90
  destroy_value %86 : $String                     // id: %91
  %92 = alloc_stack $Int                          // users: %98, %96, %93
  store %2 to [trivial] %92 : $*Int               // id: %93
  %94 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %97, %96
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %95 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %96
  %96 = apply %95<Int>(%92, %94) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %94 : $*DefaultStringInterpolation   // id: %97
  dealloc_stack %92 : $*Int                       // id: %98
  %99 = string_literal utf8 ")"                   // user: %104
  %100 = integer_literal $Builtin.Word, 1         // user: %104
  %101 = integer_literal $Builtin.Int1, -1        // user: %104
  %102 = metatype $@thin String.Type              // user: %104
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %103 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %104
  %104 = apply %103(%99, %100, %101, %102) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %109, %107
  %105 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %108, %107
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %106 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %107
  %107 = apply %106(%104, %105) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %105 : $*DefaultStringInterpolation  // id: %108
  destroy_value %104 : $String                    // id: %109
  %110 = load [copy] %14 : $*DefaultStringInterpolation // user: %115
  destroy_addr %14 : $*DefaultStringInterpolation // id: %111
  dealloc_stack %14 : $*DefaultStringInterpolation // id: %112
  %113 = metatype $@thin String.Type              // user: %115
  // function_ref String.init(stringInterpolation:)
  %114 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %115
  %115 = apply %114(%110, %113) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %117
  %116 = init_existential_addr %13 : $*Any, $String // user: %117
  store %115 to [init] %116 : $*String            // id: %117
  // function_ref default argument 1 of print(_:separator:terminator:)
  %118 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %119
  %119 = apply %118() : $@convention(thin) () -> @owned String // users: %125, %123
  // function_ref default argument 2 of print(_:separator:terminator:)
  %120 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %121
  %121 = apply %120() : $@convention(thin) () -> @owned String // users: %124, %123
  // function_ref print(_:separator:terminator:)
  %122 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %123
  %123 = apply %122(%11, %119, %121) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %121 : $String                    // id: %124
  destroy_value %119 : $String                    // id: %125
  destroy_value %11 : $Array<Any>                 // id: %126
  %127 = tuple ()                                 // user: %128
  return %127 : $()                               // id: %128
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

  *** SIL function after  #153, stage Guaranteed Passes, pass 5: AllocBoxToStack (allocbox-to-stack)
// closure #3 in foo()
sil private [ossa] @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %10, %2
// %1 "value"                                     // user: %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %45, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = metatype $@thin Int.Type                   // user: %13
  %6 = integer_literal $Builtin.IntLiteral, 1     // user: %9
  %7 = metatype $@thin Int.Type                   // user: %9
  // function_ref Int.init(_builtinIntegerLiteral:)
  %8 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %9
  %9 = apply %8(%6, %7) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %13
  %10 = ref_element_addr %0 : $Number, #Number.number // user: %11
  %11 = begin_access [modify] [dynamic] %10 : $*Int // users: %14, %13
  // function_ref static Int.+= infix(_:_:)
  %12 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %13
  %13 = apply %12(%11, %9, %5) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %11 : $*Int                          // id: %14
  %15 = integer_literal $Builtin.Word, 1          // user: %17
  // function_ref _allocateUninitializedArray<A>(_:)
  %16 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %17
  %17 = apply %16<Any>(%15) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %18
  (%18, %19) = destructure_tuple %17 : $(Array<Any>, Builtin.RawPointer) // users: %82, %79, %20
  %20 = pointer_to_address %19 : $Builtin.RawPointer to [strict] $*Any // user: %72
  %21 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %68, %67, %33, %40, %50, %61, %66
  %22 = integer_literal $Builtin.IntLiteral, 3    // user: %25
  %23 = metatype $@thin Int.Type                  // user: %25
  // function_ref Int.init(_builtinIntegerLiteral:)
  %24 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %25
  %25 = apply %24(%22, %23) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %32
  %26 = integer_literal $Builtin.IntLiteral, 1    // user: %29
  %27 = metatype $@thin Int.Type                  // user: %29
  // function_ref Int.init(_builtinIntegerLiteral:)
  %28 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %29
  %29 = apply %28(%26, %27) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %32
  %30 = metatype $@thin DefaultStringInterpolation.Type // user: %32
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %31 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %32
  %32 = apply %31(%25, %29, %30) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %33
  store %32 to [init] %21 : $*DefaultStringInterpolation // id: %33
  %34 = string_literal utf8 "v: "                 // user: %39
  %35 = integer_literal $Builtin.Word, 3          // user: %39
  %36 = integer_literal $Builtin.Int1, -1         // user: %39
  %37 = metatype $@thin String.Type               // user: %39
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %38 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %39
  %39 = apply %38(%34, %35, %36, %37) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %44, %42
  %40 = begin_access [modify] [static] %21 : $*DefaultStringInterpolation // users: %43, %42
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %41 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %42
  %42 = apply %41(%39, %40) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %40 : $*DefaultStringInterpolation   // id: %43
  destroy_value %39 : $String                     // id: %44
  %45 = begin_access [read] [dynamic] %3 : $*Int  // users: %47, %46
  %46 = load [trivial] %45 : $*Int                // user: %49
  end_access %45 : $*Int                          // id: %47
  %48 = alloc_stack $Int                          // users: %54, %52, %49
  store %46 to [trivial] %48 : $*Int              // id: %49
  %50 = begin_access [modify] [static] %21 : $*DefaultStringInterpolation // users: %53, %52
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %51 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %52
  %52 = apply %51<Int>(%48, %50) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %50 : $*DefaultStringInterpolation   // id: %53
  dealloc_stack %48 : $*Int                       // id: %54
  %55 = string_literal utf8 ""                    // user: %60
  %56 = integer_literal $Builtin.Word, 0          // user: %60
  %57 = integer_literal $Builtin.Int1, -1         // user: %60
  %58 = metatype $@thin String.Type               // user: %60
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %59 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %60
  %60 = apply %59(%55, %56, %57, %58) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %65, %63
  %61 = begin_access [modify] [static] %21 : $*DefaultStringInterpolation // users: %64, %63
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %62 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %63
  %63 = apply %62(%60, %61) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %61 : $*DefaultStringInterpolation   // id: %64
  destroy_value %60 : $String                     // id: %65
  %66 = load [copy] %21 : $*DefaultStringInterpolation // user: %71
  destroy_addr %21 : $*DefaultStringInterpolation // id: %67
  dealloc_stack %21 : $*DefaultStringInterpolation // id: %68
  %69 = metatype $@thin String.Type               // user: %71
  // function_ref String.init(stringInterpolation:)
  %70 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %71
  %71 = apply %70(%66, %69) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %73
  %72 = init_existential_addr %20 : $*Any, $String // user: %73
  store %71 to [init] %72 : $*String              // id: %73
  // function_ref default argument 1 of print(_:separator:terminator:)
  %74 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %75
  %75 = apply %74() : $@convention(thin) () -> @owned String // users: %81, %79
  // function_ref default argument 2 of print(_:separator:terminator:)
  %76 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %77
  %77 = apply %76() : $@convention(thin) () -> @owned String // users: %80, %79
  // function_ref print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %79
  %79 = apply %78(%18, %75, %77) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %77 : $String                     // id: %80
  destroy_value %75 : $String                     // id: %81
  destroy_value %18 : $Array<Any>                 // id: %82
  %83 = tuple ()                                  // user: %84
  return %83 : $()                                // id: %84
} // end sil function '$s4file3fooyyFyycfU1_'

  *** SIL function after  #161, stage Guaranteed Passes, pass 5: AllocBoxToStack (allocbox-to-stack)
// closure #5 in foo()
sil private [ossa] @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %12, %3
// %1 "empty"                                     // users: %18, %4
// %2 "value"                                     // user: %5
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty, %2 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %49, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = metatype $@thin Int.Type                   // user: %15
  %8 = integer_literal $Builtin.IntLiteral, 1     // user: %11
  %9 = metatype $@thin Int.Type                   // user: %11
  // function_ref Int.init(_builtinIntegerLiteral:)
  %10 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %11
  %11 = apply %10(%8, %9) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %15
  %12 = ref_element_addr %0 : $Number, #Number.number // user: %13
  %13 = begin_access [modify] [dynamic] %12 : $*Int // users: %16, %15
  // function_ref static Int.+= infix(_:_:)
  %14 = function_ref @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () // user: %15
  %15 = apply %14(%13, %11, %7) : $@convention(method) (@inout Int, Int, @thin Int.Type) -> ()
  end_access %13 : $*Int                          // id: %16
  // function_ref Empty.foo()
  %17 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %18
  %18 = apply %17(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %19 = integer_literal $Builtin.Word, 1          // user: %21
  // function_ref _allocateUninitializedArray<A>(_:)
  %20 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %21
  %21 = apply %20<Any>(%19) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %22
  (%22, %23) = destructure_tuple %21 : $(Array<Any>, Builtin.RawPointer) // users: %86, %83, %24
  %24 = pointer_to_address %23 : $Builtin.RawPointer to [strict] $*Any // user: %76
  %25 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %72, %71, %37, %44, %54, %65, %70
  %26 = integer_literal $Builtin.IntLiteral, 3    // user: %29
  %27 = metatype $@thin Int.Type                  // user: %29
  // function_ref Int.init(_builtinIntegerLiteral:)
  %28 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %29
  %29 = apply %28(%26, %27) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %36
  %30 = integer_literal $Builtin.IntLiteral, 1    // user: %33
  %31 = metatype $@thin Int.Type                  // user: %33
  // function_ref Int.init(_builtinIntegerLiteral:)
  %32 = function_ref @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %33
  %33 = apply %32(%30, %31) : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int // user: %36
  %34 = metatype $@thin DefaultStringInterpolation.Type // user: %36
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %35 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %36
  %36 = apply %35(%29, %33, %34) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %37
  store %36 to [init] %25 : $*DefaultStringInterpolation // id: %37
  %38 = string_literal utf8 "v: "                 // user: %43
  %39 = integer_literal $Builtin.Word, 3          // user: %43
  %40 = integer_literal $Builtin.Int1, -1         // user: %43
  %41 = metatype $@thin String.Type               // user: %43
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %42 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %43
  %43 = apply %42(%38, %39, %40, %41) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %48, %46
  %44 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %47, %46
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %45 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %46
  %46 = apply %45(%43, %44) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %44 : $*DefaultStringInterpolation   // id: %47
  destroy_value %43 : $String                     // id: %48
  %49 = begin_access [read] [dynamic] %5 : $*Int  // users: %51, %50
  %50 = load [trivial] %49 : $*Int                // user: %53
  end_access %49 : $*Int                          // id: %51
  %52 = alloc_stack $Int                          // users: %58, %56, %53
  store %50 to [trivial] %52 : $*Int              // id: %53
  %54 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 ""                    // user: %64
  %60 = integer_literal $Builtin.Word, 0          // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  destroy_value %64 : $String                     // id: %69
  %70 = load [copy] %25 : $*DefaultStringInterpolation // user: %75
  destroy_addr %25 : $*DefaultStringInterpolation // id: %71
  dealloc_stack %25 : $*DefaultStringInterpolation // id: %72
  %73 = metatype $@thin String.Type               // user: %75
  // function_ref String.init(stringInterpolation:)
  %74 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %75
  %75 = apply %74(%70, %73) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %77
  %76 = init_existential_addr %24 : $*Any, $String // user: %77
  store %75 to [init] %76 : $*String              // id: %77
  // function_ref default argument 1 of print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %79
  %79 = apply %78() : $@convention(thin) () -> @owned String // users: %85, %83
  // function_ref default argument 2 of print(_:separator:terminator:)
  %80 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %81
  %81 = apply %80() : $@convention(thin) () -> @owned String // users: %84, %83
  // function_ref print(_:separator:terminator:)
  %82 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %83
  %83 = apply %82(%22, %79, %81) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %81 : $String                     // id: %84
  destroy_value %79 : $String                     // id: %85
  destroy_value %22 : $Array<Any>                 // id: %86
  %87 = tuple ()                                  // user: %88
  return %87 : $()                                // id: %88
} // end sil function '$s4file3fooyyFyycfU3_'

  *** SIL module after #193, stage Guaranteed Passes, pass 11: MandatoryInlining (mandatory-inlining)
sil_stage raw

import Builtin
import Swift
import SwiftShims

// main
sil [ossa] @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

// Empty.foo()
sil hidden [ossa] @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4file5EmptyC3fooyyF'

// Empty.deinit
sil hidden [ossa] @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Empty to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file5EmptyCfd'

// Empty.__deallocating_deinit
sil hidden [ossa] @$s4file5EmptyCfD : $@convention(method) (@owned Empty) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  // function_ref Empty.deinit
  %2 = function_ref @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Empty                   // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Empty                          // id: %5
  end_lifetime %0 : $Empty                        // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Empty // user: %8
  dealloc_ref %7 : $Empty                         // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file5EmptyCfD'

// Empty.__allocating_init()
sil hidden [exact_self_class] [ossa] @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty {
// %0 "$metatype"
bb0(%0 : $@thick Empty.Type):
  %1 = alloc_ref $Empty                           // user: %3
  // function_ref Empty.init()
  %2 = function_ref @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Empty) -> @owned Empty // user: %4
  return %3 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfC'

// Empty.init()
sil hidden [ossa] @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty {
// %0 "self"                                      // users: %2, %3, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = copy_value %0 : $Empty                     // user: %4
  destroy_value %0 : $Empty                       // id: %3
  return %2 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfc'

// Number.number.getter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivg : $@convention(method) (@guaranteed Number) -> Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*Int   // users: %5, %4
  %4 = load [trivial] %3 : $*Int                  // user: %6
  end_access %3 : $*Int                           // id: %5
  return %4 : $Int                                // id: %6
} // end sil function '$s4file6NumberC6numberSivg'

// Number.number.setter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivs : $@convention(method) (Int, @guaranteed Number) -> () {
// %0 "value"                                     // users: %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : @guaranteed $Number):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to [trivial] %5 : $*Int                // id: %6
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9
} // end sil function '$s4file6NumberC6numberSivs'

// Number.number.modify
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivM : $@yield_once @convention(method) (@guaranteed Number) -> @yields @inout Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*Int // users: %5, %8, %4
  yield %3 : $*Int, resume bb1, unwind bb2        // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file6NumberC6numberSivM'

// Number.__allocating_init(number:)
sil hidden [exact_self_class] [ossa] @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number {
// %0 "number"                                    // user: %4
// %1 "$metatype"
bb0(%0 : $Int, %1 : $@thick Number.Type):
  %2 = alloc_ref $Number                          // user: %4
  // function_ref Number.init(number:)
  %3 = function_ref @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (Int, @owned Number) -> @owned Number // user: %5
  return %4 : $Number                             // id: %5
} // end sil function '$s4file6NumberC6numberACSi_tcfC'

// Number.init(number:)
sil hidden [ossa] @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %7, %2
// %1 "self"                                      // users: %4, %10, %11, %3
bb0(%0 : $Int, %1 : @owned $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %1 : $Number                  // users: %9, %5
  %5 = ref_element_addr %4 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %7, %8
  store %0 to [trivial] %6 : $*Int                // id: %7
  end_access %6 : $*Int                           // id: %8
  end_borrow %4 : $Number                         // id: %9
  %10 = copy_value %1 : $Number                   // user: %12
  destroy_value %1 : $Number                      // id: %11
  return %10 : $Number                            // id: %12
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

// Number.deinit
sil hidden [ossa] @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Number to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file6NumberCfd'

// Number.__deallocating_deinit
sil hidden [ossa] @$s4file6NumberCfD : $@convention(method) (@owned Number) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  // function_ref Number.deinit
  %2 = function_ref @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Number                  // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Number                         // id: %5
  end_lifetime %0 : $Number                       // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Number // user: %8
  dealloc_ref %7 : $Number                        // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file6NumberCfD'

// Closure.closure.getter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvg : $@convention(method) (@guaranteed Closure) -> @owned @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  %4 = load [copy] %3 : $*@callee_guaranteed () -> () // user: %6
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  return %4 : $@callee_guaranteed () -> ()        // id: %6
} // end sil function '$s4file7ClosureC7closureyycvg'

// Closure.closure.setter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvs : $@convention(method) (@owned @callee_guaranteed () -> (), @guaranteed Closure) -> () {
// %0 "value"                                     // users: %11, %4, %2
// %1 "self"                                      // users: %6, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @guaranteed $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "value", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %10, %5
  %5 = copy_value %4 : $@callee_guaranteed () -> () // user: %8
  %6 = ref_element_addr %1 : $Closure, #Closure.closure // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*@callee_guaranteed () -> () // users: %8, %9
  store %5 to [assign] %7 : $*@callee_guaranteed () -> () // id: %8
  end_access %7 : $*@callee_guaranteed () -> ()   // id: %9
  end_borrow %4 : $@callee_guaranteed () -> ()    // id: %10
  destroy_value %0 : $@callee_guaranteed () -> () // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file7ClosureC7closureyycvs'

// Closure.closure.modify
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvM : $@yield_once @convention(method) (@guaranteed Closure) -> @yields @inout @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %8, %4
  yield %3 : $*@callee_guaranteed () -> (), resume bb1, unwind bb2 // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file7ClosureC7closureyycvM'

// Closure.__allocating_init(_:)
sil hidden [exact_self_class] [ossa] @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure {
// %0 "block"                                     // user: %4
// %1 "$metatype"
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : $@thick Closure.Type):
  %2 = alloc_ref $Closure                         // user: %4
  // function_ref Closure.init(_:)
  %3 = function_ref @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %5
  return %4 : $Closure                            // id: %5
} // end sil function '$s4file7ClosureCyACyyccfC'

// Closure.init(_:)
sil hidden [ossa] @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %15, %5, %2
// %1 "self"                                      // users: %4, %13, %14, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @owned $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %1 : $Closure                 // users: %12, %7
  %5 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %11, %6
  %6 = copy_value %5 : $@callee_guaranteed () -> () // user: %9
  %7 = ref_element_addr %4 : $Closure, #Closure.closure // user: %8
  %8 = begin_access [modify] [dynamic] %7 : $*@callee_guaranteed () -> () // users: %9, %10
  store %6 to [init] %8 : $*@callee_guaranteed () -> () // id: %9
  end_access %8 : $*@callee_guaranteed () -> ()   // id: %10
  end_borrow %5 : $@callee_guaranteed () -> ()    // id: %11
  end_borrow %4 : $Closure                        // id: %12
  %13 = copy_value %1 : $Closure                  // user: %16
  destroy_value %1 : $Closure                     // id: %14
  destroy_value %0 : $@callee_guaranteed () -> () // id: %15
  return %13 : $Closure                           // id: %16
} // end sil function '$s4file7ClosureCyACyyccfc'

// Closure.deinit
sil hidden [ossa] @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %6, %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [deinit] [static] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  destroy_addr %3 : $*@callee_guaranteed () -> () // id: %4
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = unchecked_ref_cast %0 : $Closure to $Builtin.NativeObject // user: %7
  %7 = unchecked_ownership_conversion %6 : $Builtin.NativeObject, @guaranteed to @owned // user: %8
  return %7 : $Builtin.NativeObject               // id: %8
} // end sil function '$s4file7ClosureCfd'

// Closure.__deallocating_deinit
sil hidden [ossa] @$s4file7ClosureCfD : $@convention(method) (@owned Closure) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  // function_ref Closure.deinit
  %2 = function_ref @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Closure                 // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Closure                        // id: %5
  end_lifetime %0 : $Closure                      // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Closure // user: %8
  dealloc_ref %7 : $Closure                       // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file7ClosureCfD'

// foo()
sil hidden [ossa] @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %643, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %642, %108, %93, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %14
  %8 = integer_literal $Builtin.IntLiteral, 0     // user: %9
  %9 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%8 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %10
  (%10, %11) = destructure_tuple %9 : $(Builtin.Int64, Builtin.Int1) // user: %12
  %12 = struct $Int (%10 : $Builtin.Int64)        // user: %14
  // function_ref Number.__allocating_init(number:)
  %13 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %14
  %14 = apply %13(%12, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %641, %104, %89, %79, %70, %15
  debug_value %14 : $Number, let, name "number"   // id: %15
  %16 = integer_literal $Builtin.Word, 1          // user: %18
  // function_ref _allocateUninitializedArray<A>(_:)
  %17 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %18
  %18 = apply %17<Any>(%16) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %19
  (%19, %20) = destructure_tuple %18 : $(Array<Any>, Builtin.RawPointer) // users: %38, %35, %21
  %21 = pointer_to_address %20 : $Builtin.RawPointer to [strict] $*Any // user: %28
  %22 = string_literal utf8 "===== Did init"      // user: %27
  %23 = integer_literal $Builtin.Word, 14         // user: %27
  %24 = integer_literal $Builtin.Int1, -1         // user: %27
  %25 = metatype $@thin String.Type               // user: %27
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %26 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %27
  %27 = apply %26(%22, %23, %24, %25) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %29
  %28 = init_existential_addr %21 : $*Any, $String // user: %29
  store %27 to [init] %28 : $*String              // id: %29
  // function_ref default argument 1 of print(_:separator:terminator:)
  %30 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %31
  %31 = apply %30() : $@convention(thin) () -> @owned String // users: %37, %35
  // function_ref default argument 2 of print(_:separator:terminator:)
  %32 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %33
  %33 = apply %32() : $@convention(thin) () -> @owned String // users: %36, %35
  // function_ref print(_:separator:terminator:)
  %34 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %35
  %35 = apply %34(%19, %31, %33) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %33 : $String                     // id: %36
  destroy_value %31 : $String                     // id: %37
  destroy_value %19 : $Array<Any>                 // id: %38
  %39 = integer_literal $Builtin.Word, 1          // user: %41
  // function_ref _allocateUninitializedArray<A>(_:)
  %40 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %41
  %41 = apply %40<Any>(%39) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %42
  (%42, %43) = destructure_tuple %41 : $(Array<Any>, Builtin.RawPointer) // users: %61, %58, %44
  %44 = pointer_to_address %43 : $Builtin.RawPointer to [strict] $*Any // user: %51
  %45 = string_literal utf8 "===== Did hook"      // user: %50
  %46 = integer_literal $Builtin.Word, 14         // user: %50
  %47 = integer_literal $Builtin.Int1, -1         // user: %50
  %48 = metatype $@thin String.Type               // user: %50
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %49 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %50
  %50 = apply %49(%45, %46, %47, %48) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %52
  %51 = init_existential_addr %44 : $*Any, $String // user: %52
  store %50 to [init] %51 : $*String              // id: %52
  // function_ref default argument 1 of print(_:separator:terminator:)
  %53 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %54
  %54 = apply %53() : $@convention(thin) () -> @owned String // users: %60, %58
  // function_ref default argument 2 of print(_:separator:terminator:)
  %55 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %56
  %56 = apply %55() : $@convention(thin) () -> @owned String // users: %59, %58
  // function_ref print(_:separator:terminator:)
  %57 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %58
  %58 = apply %57(%42, %54, %56) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %56 : $String                     // id: %59
  destroy_value %54 : $String                     // id: %60
  destroy_value %42 : $Array<Any>                 // id: %61
  %62 = alloc_box ${ var Int }, var, name "value" // users: %640, %115, %85, %63
  %63 = project_box %62 : ${ var Int }, 0         // users: %467, %69
  %64 = integer_literal $Builtin.IntLiteral, 0    // user: %65
  %65 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%64 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %66
  (%66, %67) = destructure_tuple %65 : $(Builtin.Int64, Builtin.Int1) // user: %68
  %68 = struct $Int (%66 : $Builtin.Int64)        // user: %69
  store %68 to [trivial] %63 : $*Int              // id: %69
  %70 = begin_borrow %14 : $Number                // users: %73, %71
  %71 = copy_value %70 : $Number                  // users: %78, %75, %72
  debug_value %71 : $Number, let, name "number"   // id: %72
  end_borrow %70 : $Number                        // id: %73
  // function_ref closure #2 in foo()
  %74 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %76
  %75 = copy_value %71 : $Number                  // user: %76
  %76 = partial_apply [callee_guaranteed] %74(%75) : $@convention(thin) (@guaranteed Number) -> () // users: %639, %244, %77
  debug_value %76 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %77
  destroy_value %71 : $Number                     // id: %78
  %79 = begin_borrow %14 : $Number                // users: %82, %80
  %80 = copy_value %79 : $Number                  // users: %88, %84, %81
  debug_value %80 : $Number, let, name "number"   // id: %81
  end_borrow %79 : $Number                        // id: %82
  // function_ref closure #3 in foo()
  %83 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %86
  %84 = copy_value %80 : $Number                  // user: %86
  %85 = copy_value %62 : ${ var Int }             // user: %86
  %86 = partial_apply [callee_guaranteed] %83(%84, %85) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %638, %284, %87
  debug_value %86 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %87
  destroy_value %80 : $Number                     // id: %88
  %89 = begin_borrow %14 : $Number                // users: %92, %90
  %90 = copy_value %89 : $Number                  // users: %103, %98, %91
  debug_value %90 : $Number, let, name "number"   // id: %91
  end_borrow %89 : $Number                        // id: %92
  %93 = begin_borrow %5 : $Empty                  // users: %96, %94
  %94 = copy_value %93 : $Empty                   // users: %102, %99, %95
  debug_value %94 : $Empty, let, name "empty"     // id: %95
  end_borrow %93 : $Empty                         // id: %96
  // function_ref closure #4 in foo()
  %97 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %100
  %98 = copy_value %90 : $Number                  // user: %100
  %99 = copy_value %94 : $Empty                   // user: %100
  %100 = partial_apply [callee_guaranteed] %97(%98, %99) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %637, %324, %101
  debug_value %100 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %101
  destroy_value %94 : $Empty                      // id: %102
  destroy_value %90 : $Number                     // id: %103
  %104 = begin_borrow %14 : $Number               // users: %107, %105
  %105 = copy_value %104 : $Number                // users: %119, %113, %106
  debug_value %105 : $Number, let, name "number"  // id: %106
  end_borrow %104 : $Number                       // id: %107
  %108 = begin_borrow %5 : $Empty                 // users: %111, %109
  %109 = copy_value %108 : $Empty                 // users: %118, %114, %110
  debug_value %109 : $Empty, let, name "empty"    // id: %110
  end_borrow %108 : $Empty                        // id: %111
  // function_ref closure #5 in foo()
  %112 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %116
  %113 = copy_value %105 : $Number                // user: %116
  %114 = copy_value %109 : $Empty                 // user: %116
  %115 = copy_value %62 : ${ var Int }            // user: %116
  %116 = partial_apply [callee_guaranteed] %112(%113, %114, %115) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %636, %364, %117
  debug_value %116 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %117
  destroy_value %109 : $Empty                     // id: %118
  destroy_value %105 : $Number                    // id: %119
  %120 = integer_literal $Builtin.Word, 1         // user: %122
  // function_ref _allocateUninitializedArray<A>(_:)
  %121 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %122
  %122 = apply %121<Any>(%120) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %123
  (%123, %124) = destructure_tuple %122 : $(Array<Any>, Builtin.RawPointer) // users: %142, %139, %125
  %125 = pointer_to_address %124 : $Builtin.RawPointer to [strict] $*Any // user: %132
  %126 = string_literal utf8 "===== Did init closures" // user: %131
  %127 = integer_literal $Builtin.Word, 23        // user: %131
  %128 = integer_literal $Builtin.Int1, -1        // user: %131
  %129 = metatype $@thin String.Type              // user: %131
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %130 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %131
  %131 = apply %130(%126, %127, %128, %129) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %133
  %132 = init_existential_addr %125 : $*Any, $String // user: %133
  store %131 to [init] %132 : $*String            // id: %133
  // function_ref default argument 1 of print(_:separator:terminator:)
  %134 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %135
  %135 = apply %134() : $@convention(thin) () -> @owned String // users: %141, %139
  // function_ref default argument 2 of print(_:separator:terminator:)
  %136 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %137
  %137 = apply %136() : $@convention(thin) () -> @owned String // users: %140, %139
  // function_ref print(_:separator:terminator:)
  %138 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %139
  %139 = apply %138(%123, %135, %137) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %137 : $String                    // id: %140
  destroy_value %135 : $String                    // id: %141
  destroy_value %123 : $Array<Any>                // id: %142
  %143 = alloc_stack $Array<Closure>, var, name "storage" // users: %635, %634, %147, %153, %251, %291, %331, %371, %403, %426, %507
  %144 = metatype $@thin Array<Closure>.Type      // user: %146
  // function_ref Array.init()
  %145 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %146
  %146 = apply %145<Closure>(%144) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %147
  store %146 to [init] %143 : $*Array<Closure>    // id: %147
  %148 = integer_literal $Builtin.IntLiteral, 100 // user: %149
  %149 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%148 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %150
  (%150, %151) = destructure_tuple %149 : $(Builtin.Int64, Builtin.Int1) // user: %152
  %152 = struct $Int (%150 : $Builtin.Int64)      // user: %155
  %153 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %156, %155
  // function_ref Array.reserveCapacity(_:)
  %154 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %155
  %155 = apply %154<Closure>(%152, %153) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %153 : $*Array<Closure>              // id: %156
  %157 = integer_literal $Builtin.Word, 1         // user: %159
  // function_ref _allocateUninitializedArray<A>(_:)
  %158 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %159
  %159 = apply %158<Any>(%157) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %160
  (%160, %161) = destructure_tuple %159 : $(Array<Any>, Builtin.RawPointer) // users: %179, %176, %162
  %162 = pointer_to_address %161 : $Builtin.RawPointer to [strict] $*Any // user: %169
  %163 = string_literal utf8 "===== Did init array" // user: %168
  %164 = integer_literal $Builtin.Word, 20        // user: %168
  %165 = integer_literal $Builtin.Int1, -1        // user: %168
  %166 = metatype $@thin String.Type              // user: %168
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %167 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %168
  %168 = apply %167(%163, %164, %165, %166) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %170
  %169 = init_existential_addr %162 : $*Any, $String // user: %170
  store %168 to [init] %169 : $*String            // id: %170
  // function_ref default argument 1 of print(_:separator:terminator:)
  %171 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %172
  %172 = apply %171() : $@convention(thin) () -> @owned String // users: %178, %176
  // function_ref default argument 2 of print(_:separator:terminator:)
  %173 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %174
  %174 = apply %173() : $@convention(thin) () -> @owned String // users: %177, %176
  // function_ref print(_:separator:terminator:)
  %175 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %176
  %176 = apply %175(%160, %172, %174) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %174 : $String                    // id: %177
  destroy_value %172 : $String                    // id: %178
  destroy_value %160 : $Array<Any>                // id: %179
  %180 = alloc_stack $Bool, var, name "run"       // users: %633, %183, %185, %577
  %181 = integer_literal $Builtin.Int1, -1        // user: %182
  %182 = struct $Bool (%181 : $Builtin.Int1)      // user: %183
  store %182 to [trivial] %180 : $*Bool           // id: %183
  br bb1                                          // id: %184

bb1:                                              // Preds: bb25 bb0
  %185 = begin_access [read] [static] %180 : $*Bool // users: %186, %188
  %186 = struct_element_addr %185 : $*Bool, #Bool._value // user: %187
  %187 = load [trivial] %186 : $*Builtin.Int1     // user: %189
  end_access %185 : $*Bool                        // id: %188
  cond_br %187, bb2, bb26                         // id: %189

bb2:                                              // Preds: bb1
  %190 = integer_literal $Builtin.Word, 1         // user: %192
  // function_ref _allocateUninitializedArray<A>(_:)
  %191 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %192
  %192 = apply %191<Any>(%190) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %193
  (%193, %194) = destructure_tuple %192 : $(Array<Any>, Builtin.RawPointer) // users: %212, %209, %195
  %195 = pointer_to_address %194 : $Builtin.RawPointer to [strict] $*Any // user: %202
  %196 = string_literal utf8 "===== Ask"          // user: %201
  %197 = integer_literal $Builtin.Word, 9         // user: %201
  %198 = integer_literal $Builtin.Int1, -1        // user: %201
  %199 = metatype $@thin String.Type              // user: %201
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %200 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %201
  %201 = apply %200(%196, %197, %198, %199) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %203
  %202 = init_existential_addr %195 : $*Any, $String // user: %203
  store %201 to [init] %202 : $*String            // id: %203
  // function_ref default argument 1 of print(_:separator:terminator:)
  %204 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %205
  %205 = apply %204() : $@convention(thin) () -> @owned String // users: %211, %209
  // function_ref default argument 2 of print(_:separator:terminator:)
  %206 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %207
  %207 = apply %206() : $@convention(thin) () -> @owned String // users: %210, %209
  // function_ref print(_:separator:terminator:)
  %208 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %209
  %209 = apply %208(%193, %205, %207) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %207 : $String                    // id: %210
  destroy_value %205 : $String                    // id: %211
  destroy_value %193 : $Array<Any>                // id: %212
  // function_ref default argument 0 of readLine(strippingNewline:)
  %213 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %214
  %214 = apply %213() : $@convention(thin) () -> Bool // user: %216
  // function_ref readLine(strippingNewline:)
  %215 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %216
  %216 = apply %215(%214) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %608, %218, %217
  debug_value %216 : $Optional<String>, let, name "line" // id: %217
  %218 = begin_borrow %216 : $Optional<String>    // users: %606, %580, %551, %543, %483, %480, %438, %433, %379, %376, %339, %336, %299, %296, %259, %256, %219
  %219 = copy_value %218 : $Optional<String>      // users: %242, %258, %230, %220
  debug_value %219 : $Optional<String>, let, name "$match" // id: %220
  %221 = string_literal utf8 "push1"              // user: %226
  %222 = integer_literal $Builtin.Word, 5         // user: %226
  %223 = integer_literal $Builtin.Int1, -1        // user: %226
  %224 = metatype $@thin String.Type              // user: %226
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %225 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %226
  %226 = apply %225(%221, %222, %223, %224) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %227
  %227 = enum $Optional<String>, #Optional.some!enumelt, %226 : $String // user: %229
  %228 = alloc_stack $Optional<String>            // users: %235, %239, %238, %229
  store %227 to [init] %228 : $*Optional<String>  // id: %229
  %230 = begin_borrow %219 : $Optional<String>    // users: %237, %232
  %231 = alloc_stack $Optional<String>            // users: %235, %236, %232
  %232 = store_borrow %230 to %231 : $*Optional<String>
  %233 = metatype $@thin Optional<String>.Type    // user: %235
  // function_ref static Optional<A>.== infix(_:_:)
  %234 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %235
  %235 = apply %234<String>(%228, %231, %233) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %240
  dealloc_stack %231 : $*Optional<String>         // id: %236
  end_borrow %230 : $Optional<String>             // id: %237
  destroy_addr %228 : $*Optional<String>          // id: %238
  dealloc_stack %228 : $*Optional<String>         // id: %239
  %240 = struct_extract %235 : $Bool, #Bool._value // user: %241
  cond_br %240, bb3, bb4                          // id: %241

bb3:                                              // Preds: bb2
  destroy_value %219 : $Optional<String>          // id: %242
  %243 = metatype $@thick Closure.Type            // user: %247
  %244 = begin_borrow %76 : $@callee_guaranteed () -> () // users: %248, %245
  %245 = copy_value %244 : $@callee_guaranteed () -> () // user: %247
  // function_ref Closure.__allocating_init(_:)
  %246 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %247
  %247 = apply %246(%245, %243) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %250
  end_borrow %244 : $@callee_guaranteed () -> ()  // id: %248
  %249 = alloc_stack $Closure                     // users: %255, %253, %250
  store %247 to [init] %249 : $*Closure           // id: %250
  %251 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %254, %253
  // function_ref Array.append(_:)
  %252 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %253
  %253 = apply %252<Closure>(%249, %251) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %251 : $*Array<Closure>              // id: %254
  dealloc_stack %249 : $*Closure                  // id: %255
  end_borrow %218 : $Optional<String>             // id: %256
  br bb25                                         // id: %257

bb4:                                              // Preds: bb2
  destroy_value %219 : $Optional<String>          // id: %258
  %259 = copy_value %218 : $Optional<String>      // users: %282, %298, %270, %260
  debug_value %259 : $Optional<String>, let, name "$match" // id: %260
  %261 = string_literal utf8 "push1_1"            // user: %266
  %262 = integer_literal $Builtin.Word, 7         // user: %266
  %263 = integer_literal $Builtin.Int1, -1        // user: %266
  %264 = metatype $@thin String.Type              // user: %266
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %265 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %266
  %266 = apply %265(%261, %262, %263, %264) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %267
  %267 = enum $Optional<String>, #Optional.some!enumelt, %266 : $String // user: %269
  %268 = alloc_stack $Optional<String>            // users: %275, %279, %278, %269
  store %267 to [init] %268 : $*Optional<String>  // id: %269
  %270 = begin_borrow %259 : $Optional<String>    // users: %277, %272
  %271 = alloc_stack $Optional<String>            // users: %275, %276, %272
  %272 = store_borrow %270 to %271 : $*Optional<String>
  %273 = metatype $@thin Optional<String>.Type    // user: %275
  // function_ref static Optional<A>.== infix(_:_:)
  %274 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %275
  %275 = apply %274<String>(%268, %271, %273) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %280
  dealloc_stack %271 : $*Optional<String>         // id: %276
  end_borrow %270 : $Optional<String>             // id: %277
  destroy_addr %268 : $*Optional<String>          // id: %278
  dealloc_stack %268 : $*Optional<String>         // id: %279
  %280 = struct_extract %275 : $Bool, #Bool._value // user: %281
  cond_br %280, bb5, bb6                          // id: %281

bb5:                                              // Preds: bb4
  destroy_value %259 : $Optional<String>          // id: %282
  %283 = metatype $@thick Closure.Type            // user: %287
  %284 = begin_borrow %86 : $@callee_guaranteed () -> () // users: %288, %285
  %285 = copy_value %284 : $@callee_guaranteed () -> () // user: %287
  // function_ref Closure.__allocating_init(_:)
  %286 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %287
  %287 = apply %286(%285, %283) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %290
  end_borrow %284 : $@callee_guaranteed () -> ()  // id: %288
  %289 = alloc_stack $Closure                     // users: %295, %293, %290
  store %287 to [init] %289 : $*Closure           // id: %290
  %291 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %294, %293
  // function_ref Array.append(_:)
  %292 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %293
  %293 = apply %292<Closure>(%289, %291) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %291 : $*Array<Closure>              // id: %294
  dealloc_stack %289 : $*Closure                  // id: %295
  end_borrow %218 : $Optional<String>             // id: %296
  br bb25                                         // id: %297

bb6:                                              // Preds: bb4
  destroy_value %259 : $Optional<String>          // id: %298
  %299 = copy_value %218 : $Optional<String>      // users: %322, %338, %310, %300
  debug_value %299 : $Optional<String>, let, name "$match" // id: %300
  %301 = string_literal utf8 "push2"              // user: %306
  %302 = integer_literal $Builtin.Word, 5         // user: %306
  %303 = integer_literal $Builtin.Int1, -1        // user: %306
  %304 = metatype $@thin String.Type              // user: %306
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %305 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %306
  %306 = apply %305(%301, %302, %303, %304) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %307
  %307 = enum $Optional<String>, #Optional.some!enumelt, %306 : $String // user: %309
  %308 = alloc_stack $Optional<String>            // users: %315, %319, %318, %309
  store %307 to [init] %308 : $*Optional<String>  // id: %309
  %310 = begin_borrow %299 : $Optional<String>    // users: %317, %312
  %311 = alloc_stack $Optional<String>            // users: %315, %316, %312
  %312 = store_borrow %310 to %311 : $*Optional<String>
  %313 = metatype $@thin Optional<String>.Type    // user: %315
  // function_ref static Optional<A>.== infix(_:_:)
  %314 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %315
  %315 = apply %314<String>(%308, %311, %313) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %320
  dealloc_stack %311 : $*Optional<String>         // id: %316
  end_borrow %310 : $Optional<String>             // id: %317
  destroy_addr %308 : $*Optional<String>          // id: %318
  dealloc_stack %308 : $*Optional<String>         // id: %319
  %320 = struct_extract %315 : $Bool, #Bool._value // user: %321
  cond_br %320, bb7, bb8                          // id: %321

bb7:                                              // Preds: bb6
  destroy_value %299 : $Optional<String>          // id: %322
  %323 = metatype $@thick Closure.Type            // user: %327
  %324 = begin_borrow %100 : $@callee_guaranteed () -> () // users: %328, %325
  %325 = copy_value %324 : $@callee_guaranteed () -> () // user: %327
  // function_ref Closure.__allocating_init(_:)
  %326 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %327
  %327 = apply %326(%325, %323) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %330
  end_borrow %324 : $@callee_guaranteed () -> ()  // id: %328
  %329 = alloc_stack $Closure                     // users: %335, %333, %330
  store %327 to [init] %329 : $*Closure           // id: %330
  %331 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %334, %333
  // function_ref Array.append(_:)
  %332 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %333
  %333 = apply %332<Closure>(%329, %331) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %331 : $*Array<Closure>              // id: %334
  dealloc_stack %329 : $*Closure                  // id: %335
  end_borrow %218 : $Optional<String>             // id: %336
  br bb25                                         // id: %337

bb8:                                              // Preds: bb6
  destroy_value %299 : $Optional<String>          // id: %338
  %339 = copy_value %218 : $Optional<String>      // users: %362, %378, %350, %340
  debug_value %339 : $Optional<String>, let, name "$match" // id: %340
  %341 = string_literal utf8 "push2_1"            // user: %346
  %342 = integer_literal $Builtin.Word, 7         // user: %346
  %343 = integer_literal $Builtin.Int1, -1        // user: %346
  %344 = metatype $@thin String.Type              // user: %346
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %345 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %346
  %346 = apply %345(%341, %342, %343, %344) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %347
  %347 = enum $Optional<String>, #Optional.some!enumelt, %346 : $String // user: %349
  %348 = alloc_stack $Optional<String>            // users: %355, %359, %358, %349
  store %347 to [init] %348 : $*Optional<String>  // id: %349
  %350 = begin_borrow %339 : $Optional<String>    // users: %357, %352
  %351 = alloc_stack $Optional<String>            // users: %355, %356, %352
  %352 = store_borrow %350 to %351 : $*Optional<String>
  %353 = metatype $@thin Optional<String>.Type    // user: %355
  // function_ref static Optional<A>.== infix(_:_:)
  %354 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %355
  %355 = apply %354<String>(%348, %351, %353) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %360
  dealloc_stack %351 : $*Optional<String>         // id: %356
  end_borrow %350 : $Optional<String>             // id: %357
  destroy_addr %348 : $*Optional<String>          // id: %358
  dealloc_stack %348 : $*Optional<String>         // id: %359
  %360 = struct_extract %355 : $Bool, #Bool._value // user: %361
  cond_br %360, bb9, bb10                         // id: %361

bb9:                                              // Preds: bb8
  destroy_value %339 : $Optional<String>          // id: %362
  %363 = metatype $@thick Closure.Type            // user: %367
  %364 = begin_borrow %116 : $@callee_guaranteed () -> () // users: %368, %365
  %365 = copy_value %364 : $@callee_guaranteed () -> () // user: %367
  // function_ref Closure.__allocating_init(_:)
  %366 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %367
  %367 = apply %366(%365, %363) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %370
  end_borrow %364 : $@callee_guaranteed () -> ()  // id: %368
  %369 = alloc_stack $Closure                     // users: %375, %373, %370
  store %367 to [init] %369 : $*Closure           // id: %370
  %371 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %374, %373
  // function_ref Array.append(_:)
  %372 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %373
  %373 = apply %372<Closure>(%369, %371) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %371 : $*Array<Closure>              // id: %374
  dealloc_stack %369 : $*Closure                  // id: %375
  end_borrow %218 : $Optional<String>             // id: %376
  br bb25                                         // id: %377

bb10:                                             // Preds: bb8
  destroy_value %339 : $Optional<String>          // id: %378
  %379 = copy_value %218 : $Optional<String>      // users: %402, %436, %390, %380
  debug_value %379 : $Optional<String>, let, name "$match" // id: %380
  %381 = string_literal utf8 "pop"                // user: %386
  %382 = integer_literal $Builtin.Word, 3         // user: %386
  %383 = integer_literal $Builtin.Int1, -1        // user: %386
  %384 = metatype $@thin String.Type              // user: %386
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %385 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %386
  %386 = apply %385(%381, %382, %383, %384) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %387
  %387 = enum $Optional<String>, #Optional.some!enumelt, %386 : $String // user: %389
  %388 = alloc_stack $Optional<String>            // users: %395, %399, %398, %389
  store %387 to [init] %388 : $*Optional<String>  // id: %389
  %390 = begin_borrow %379 : $Optional<String>    // users: %397, %392
  %391 = alloc_stack $Optional<String>            // users: %395, %396, %392
  %392 = store_borrow %390 to %391 : $*Optional<String>
  %393 = metatype $@thin Optional<String>.Type    // user: %395
  // function_ref static Optional<A>.== infix(_:_:)
  %394 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %395
  %395 = apply %394<String>(%388, %391, %393) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %400
  dealloc_stack %391 : $*Optional<String>         // id: %396
  end_borrow %390 : $Optional<String>             // id: %397
  destroy_addr %388 : $*Optional<String>          // id: %398
  dealloc_stack %388 : $*Optional<String>         // id: %399
  %400 = struct_extract %395 : $Bool, #Bool._value // user: %401
  cond_br %400, bb11, bb14                        // id: %401

bb11:                                             // Preds: bb10
  destroy_value %379 : $Optional<String>          // id: %402
  %403 = begin_access [read] [static] %143 : $*Array<Closure> // users: %405, %404
  %404 = load [copy] %403 : $*Array<Closure>      // users: %416, %406
  end_access %403 : $*Array<Closure>              // id: %405
  %406 = begin_borrow %404 : $Array<Closure>      // users: %415, %408
  %407 = alloc_stack $Array<Closure>              // users: %422, %409, %408
  %408 = store_borrow %406 to %407 : $*Array<Closure>
  %409 = load_borrow %407 : $*Array<Closure>      // users: %421, %411
  %410 = alloc_stack $Array<Closure>              // users: %414, %413, %411
  %411 = store_borrow %409 to %410 : $*Array<Closure>
  // function_ref Collection.isEmpty.getter
  %412 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %413
  %413 = apply %412<[Closure]>(%410) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %417
  dealloc_stack %410 : $*Array<Closure>           // id: %414
  end_borrow %406 : $Array<Closure>               // id: %415
  destroy_value %404 : $Array<Closure>            // id: %416
  %417 = struct_extract %413 : $Bool, #Bool._value // user: %419
  %418 = integer_literal $Builtin.Int1, -1        // user: %419
  %419 = builtin "xor_Int1"(%417 : $Builtin.Int1, %418 : $Builtin.Int1) : $Builtin.Int1 // user: %420
  %420 = struct $Bool (%419 : $Builtin.Int1)      // user: %423
  end_borrow %409 : $Array<Closure>               // id: %421
  dealloc_stack %407 : $*Array<Closure>           // id: %422
  %423 = struct_extract %420 : $Bool, #Bool._value // user: %424
  cond_br %423, bb12, bb13                        // id: %424

bb12:                                             // Preds: bb11
  %425 = alloc_stack $Closure                     // users: %432, %430, %428
  %426 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %429, %428
  // function_ref RangeReplaceableCollection<>.removeLast()
  %427 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %428
  %428 = apply %427<[Closure]>(%425, %426) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %426 : $*Array<Closure>              // id: %429
  %430 = load [take] %425 : $*Closure             // user: %431
  destroy_value %430 : $Closure                   // id: %431
  dealloc_stack %425 : $*Closure                  // id: %432
  end_borrow %218 : $Optional<String>             // id: %433
  br bb25                                         // id: %434

bb13:                                             // Preds: bb11
  br bb15                                         // id: %435

bb14:                                             // Preds: bb10
  destroy_value %379 : $Optional<String>          // id: %436
  br bb15                                         // id: %437

bb15:                                             // Preds: bb13 bb14
  %438 = copy_value %218 : $Optional<String>      // users: %461, %482, %449, %439
  debug_value %438 : $Optional<String>, let, name "$match" // id: %439
  %440 = string_literal utf8 "inc"                // user: %445
  %441 = integer_literal $Builtin.Word, 3         // user: %445
  %442 = integer_literal $Builtin.Int1, -1        // user: %445
  %443 = metatype $@thin String.Type              // user: %445
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %444 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %445
  %445 = apply %444(%440, %441, %442, %443) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %446
  %446 = enum $Optional<String>, #Optional.some!enumelt, %445 : $String // user: %448
  %447 = alloc_stack $Optional<String>            // users: %454, %458, %457, %448
  store %446 to [init] %447 : $*Optional<String>  // id: %448
  %449 = begin_borrow %438 : $Optional<String>    // users: %456, %451
  %450 = alloc_stack $Optional<String>            // users: %454, %455, %451
  %451 = store_borrow %449 to %450 : $*Optional<String>
  %452 = metatype $@thin Optional<String>.Type    // user: %454
  // function_ref static Optional<A>.== infix(_:_:)
  %453 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %454
  %454 = apply %453<String>(%447, %450, %452) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %459
  dealloc_stack %450 : $*Optional<String>         // id: %455
  end_borrow %449 : $Optional<String>             // id: %456
  destroy_addr %447 : $*Optional<String>          // id: %457
  dealloc_stack %447 : $*Optional<String>         // id: %458
  %459 = struct_extract %454 : $Bool, #Bool._value // user: %460
  cond_br %459, bb16, bb17                        // id: %460

bb16:                                             // Preds: bb15
  destroy_value %438 : $Optional<String>          // id: %461
  %462 = integer_literal $Builtin.IntLiteral, 1   // user: %463
  %463 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%462 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %464
  (%464, %465) = destructure_tuple %463 : $(Builtin.Int64, Builtin.Int1) // user: %466
  %466 = struct $Int (%464 : $Builtin.Int64)      // user: %470
  %467 = begin_access [modify] [dynamic] %63 : $*Int // users: %477, %468, %479
  %468 = struct_element_addr %467 : $*Int, #Int._value // user: %469
  %469 = load [trivial] %468 : $*Builtin.Int64    // user: %472
  %470 = struct_extract %466 : $Int, #Int._value  // user: %472
  %471 = integer_literal $Builtin.Int1, -1        // user: %472
  %472 = builtin "sadd_with_overflow_Int64"(%469 : $Builtin.Int64, %470 : $Builtin.Int64, %471 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %473
  (%473, %474) = destructure_tuple %472 : $(Builtin.Int64, Builtin.Int1) // users: %476, %475
  cond_fail %474 : $Builtin.Int1, "arithmetic overflow" // id: %475
  %476 = struct $Int (%473 : $Builtin.Int64)      // user: %477
  store %476 to [trivial] %467 : $*Int            // id: %477
  %478 = tuple ()
  end_access %467 : $*Int                         // id: %479
  end_borrow %218 : $Optional<String>             // id: %480
  br bb25                                         // id: %481

bb17:                                             // Preds: bb15
  destroy_value %438 : $Optional<String>          // id: %482
  %483 = copy_value %218 : $Optional<String>      // users: %506, %550, %494, %484
  debug_value %483 : $Optional<String>, let, name "$match" // id: %484
  %485 = string_literal utf8 "exec"               // user: %490
  %486 = integer_literal $Builtin.Word, 4         // user: %490
  %487 = integer_literal $Builtin.Int1, -1        // user: %490
  %488 = metatype $@thin String.Type              // user: %490
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %489 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %490
  %490 = apply %489(%485, %486, %487, %488) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %491
  %491 = enum $Optional<String>, #Optional.some!enumelt, %490 : $String // user: %493
  %492 = alloc_stack $Optional<String>            // users: %499, %503, %502, %493
  store %491 to [init] %492 : $*Optional<String>  // id: %493
  %494 = begin_borrow %483 : $Optional<String>    // users: %501, %496
  %495 = alloc_stack $Optional<String>            // users: %499, %500, %496
  %496 = store_borrow %494 to %495 : $*Optional<String>
  %497 = metatype $@thin Optional<String>.Type    // user: %499
  // function_ref static Optional<A>.== infix(_:_:)
  %498 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %499
  %499 = apply %498<String>(%492, %495, %497) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %504
  dealloc_stack %495 : $*Optional<String>         // id: %500
  end_borrow %494 : $Optional<String>             // id: %501
  destroy_addr %492 : $*Optional<String>          // id: %502
  dealloc_stack %492 : $*Optional<String>         // id: %503
  %504 = struct_extract %499 : $Bool, #Bool._value // user: %505
  cond_br %504, bb18, bb22                        // id: %505

bb18:                                             // Preds: bb17
  destroy_value %483 : $Optional<String>          // id: %506
  %507 = begin_access [read] [static] %143 : $*Array<Closure> // users: %509, %508
  %508 = load [copy] %507 : $*Array<Closure>      // users: %522, %510
  end_access %507 : $*Array<Closure>              // id: %509
  %510 = begin_borrow %508 : $Array<Closure>      // users: %521, %512
  %511 = alloc_stack $Array<Closure>              // users: %540, %547, %513, %512
  %512 = store_borrow %510 to %511 : $*Array<Closure>
  %513 = load_borrow %511 : $*Array<Closure>      // users: %539, %546, %516
  %514 = alloc_stack $Optional<Closure>           // users: %538, %545, %520, %518
  %515 = alloc_stack $Array<Closure>              // users: %519, %518, %516
  %516 = store_borrow %513 to %515 : $*Array<Closure>
  // function_ref BidirectionalCollection.last.getter
  %517 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %518
  %518 = apply %517<[Closure]>(%514, %515) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %515 : $*Array<Closure>           // id: %519
  %520 = load [take] %514 : $*Optional<Closure>   // user: %523
  end_borrow %510 : $Array<Closure>               // id: %521
  destroy_value %508 : $Array<Closure>            // id: %522
  switch_enum %520 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %523

// %524                                           // users: %531, %525
bb19(%524 : @owned $Closure):                     // Preds: bb18
  %525 = begin_borrow %524 : $Closure             // users: %530, %526
  %526 = ref_element_addr %525 : $Closure, #Closure.closure // user: %527
  %527 = begin_access [read] [dynamic] %526 : $*@callee_guaranteed () -> () // users: %529, %528
  %528 = load [copy] %527 : $*@callee_guaranteed () -> () // users: %537, %532
  end_access %527 : $*@callee_guaranteed () -> () // id: %529
  end_borrow %525 : $Closure                      // id: %530
  destroy_value %524 : $Closure                   // id: %531
  %532 = begin_borrow %528 : $@callee_guaranteed () -> () // users: %534, %533
  %533 = apply %532() : $@callee_guaranteed () -> ()
  end_borrow %532 : $@callee_guaranteed () -> ()  // id: %534
  %535 = tuple ()                                 // user: %536
  %536 = enum $Optional<()>, #Optional.some!enumelt, %535 : $() // user: %541
  destroy_value %528 : $@callee_guaranteed () -> () // id: %537
  dealloc_stack %514 : $*Optional<Closure>        // id: %538
  end_borrow %513 : $Array<Closure>               // id: %539
  dealloc_stack %511 : $*Array<Closure>           // id: %540
  br bb20(%536 : $Optional<()>)                   // id: %541

bb20(%542 : $Optional<()>):                       // Preds: bb21 bb19
  end_borrow %218 : $Optional<String>             // id: %543
  br bb25                                         // id: %544

bb21:                                             // Preds: bb18
  dealloc_stack %514 : $*Optional<Closure>        // id: %545
  end_borrow %513 : $Array<Closure>               // id: %546
  dealloc_stack %511 : $*Array<Closure>           // id: %547
  %548 = enum $Optional<()>, #Optional.none!enumelt // user: %549
  br bb20(%548 : $Optional<()>)                   // id: %549

bb22:                                             // Preds: bb17
  destroy_value %483 : $Optional<String>          // id: %550
  %551 = copy_value %218 : $Optional<String>      // users: %574, %582, %562, %552
  debug_value %551 : $Optional<String>, let, name "$match" // id: %552
  %553 = string_literal utf8 "exit"               // user: %558
  %554 = integer_literal $Builtin.Word, 4         // user: %558
  %555 = integer_literal $Builtin.Int1, -1        // user: %558
  %556 = metatype $@thin String.Type              // user: %558
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %557 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %558
  %558 = apply %557(%553, %554, %555, %556) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %559
  %559 = enum $Optional<String>, #Optional.some!enumelt, %558 : $String // user: %561
  %560 = alloc_stack $Optional<String>            // users: %567, %571, %570, %561
  store %559 to [init] %560 : $*Optional<String>  // id: %561
  %562 = begin_borrow %551 : $Optional<String>    // users: %569, %564
  %563 = alloc_stack $Optional<String>            // users: %567, %568, %564
  %564 = store_borrow %562 to %563 : $*Optional<String>
  %565 = metatype $@thin Optional<String>.Type    // user: %567
  // function_ref static Optional<A>.== infix(_:_:)
  %566 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %567
  %567 = apply %566<String>(%560, %563, %565) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %572
  dealloc_stack %563 : $*Optional<String>         // id: %568
  end_borrow %562 : $Optional<String>             // id: %569
  destroy_addr %560 : $*Optional<String>          // id: %570
  dealloc_stack %560 : $*Optional<String>         // id: %571
  %572 = struct_extract %567 : $Bool, #Bool._value // user: %573
  cond_br %572, bb23, bb24                        // id: %573

bb23:                                             // Preds: bb22
  destroy_value %551 : $Optional<String>          // id: %574
  %575 = integer_literal $Builtin.Int1, 0         // user: %576
  %576 = struct $Bool (%575 : $Builtin.Int1)      // user: %578
  %577 = begin_access [modify] [static] %180 : $*Bool // users: %578, %579
  store %576 to [trivial] %577 : $*Bool           // id: %578
  end_access %577 : $*Bool                        // id: %579
  end_borrow %218 : $Optional<String>             // id: %580
  br bb25                                         // id: %581

bb24:                                             // Preds: bb22
  destroy_value %551 : $Optional<String>          // id: %582
  %583 = integer_literal $Builtin.Word, 1         // user: %585
  // function_ref _allocateUninitializedArray<A>(_:)
  %584 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %585
  %585 = apply %584<Any>(%583) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %586
  (%586, %587) = destructure_tuple %585 : $(Array<Any>, Builtin.RawPointer) // users: %605, %602, %588
  %588 = pointer_to_address %587 : $Builtin.RawPointer to [strict] $*Any // user: %595
  %589 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %594
  %590 = integer_literal $Builtin.Word, 44        // user: %594
  %591 = integer_literal $Builtin.Int1, 0         // user: %594
  %592 = metatype $@thin String.Type              // user: %594
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %593 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %594
  %594 = apply %593(%589, %590, %591, %592) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %596
  %595 = init_existential_addr %588 : $*Any, $String // user: %596
  store %594 to [init] %595 : $*String            // id: %596
  // function_ref default argument 1 of print(_:separator:terminator:)
  %597 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %598
  %598 = apply %597() : $@convention(thin) () -> @owned String // users: %604, %602
  // function_ref default argument 2 of print(_:separator:terminator:)
  %599 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %600
  %600 = apply %599() : $@convention(thin) () -> @owned String // users: %603, %602
  // function_ref print(_:separator:terminator:)
  %601 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %602
  %602 = apply %601(%586, %598, %600) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %600 : $String                    // id: %603
  destroy_value %598 : $String                    // id: %604
  destroy_value %586 : $Array<Any>                // id: %605
  end_borrow %218 : $Optional<String>             // id: %606
  br bb25                                         // id: %607

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  destroy_value %216 : $Optional<String>          // id: %608
  br bb1                                          // id: %609

bb26:                                             // Preds: bb1
  %610 = integer_literal $Builtin.Word, 1         // user: %612
  // function_ref _allocateUninitializedArray<A>(_:)
  %611 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %612
  %612 = apply %611<Any>(%610) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %613
  (%613, %614) = destructure_tuple %612 : $(Array<Any>, Builtin.RawPointer) // users: %632, %629, %615
  %615 = pointer_to_address %614 : $Builtin.RawPointer to [strict] $*Any // user: %622
  %616 = string_literal utf8 "===== will end"     // user: %621
  %617 = integer_literal $Builtin.Word, 14        // user: %621
  %618 = integer_literal $Builtin.Int1, -1        // user: %621
  %619 = metatype $@thin String.Type              // user: %621
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %620 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %621
  %621 = apply %620(%616, %617, %618, %619) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %623
  %622 = init_existential_addr %615 : $*Any, $String // user: %623
  store %621 to [init] %622 : $*String            // id: %623
  // function_ref default argument 1 of print(_:separator:terminator:)
  %624 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %625
  %625 = apply %624() : $@convention(thin) () -> @owned String // users: %631, %629
  // function_ref default argument 2 of print(_:separator:terminator:)
  %626 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %627
  %627 = apply %626() : $@convention(thin) () -> @owned String // users: %630, %629
  // function_ref print(_:separator:terminator:)
  %628 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %629
  %629 = apply %628(%613, %625, %627) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %627 : $String                    // id: %630
  destroy_value %625 : $String                    // id: %631
  destroy_value %613 : $Array<Any>                // id: %632
  dealloc_stack %180 : $*Bool                     // id: %633
  destroy_addr %143 : $*Array<Closure>            // id: %634
  dealloc_stack %143 : $*Array<Closure>           // id: %635
  destroy_value %116 : $@callee_guaranteed () -> () // id: %636
  destroy_value %100 : $@callee_guaranteed () -> () // id: %637
  destroy_value %86 : $@callee_guaranteed () -> () // id: %638
  destroy_value %76 : $@callee_guaranteed () -> () // id: %639
  destroy_value %62 : ${ var Int }                // id: %640
  destroy_value %14 : $Number                     // id: %641
  destroy_value %5 : $Empty                       // id: %642
  destroy_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %643
  %644 = tuple ()                                 // user: %645
  return %644 : $()                               // id: %645
} // end sil function '$s4file3fooyyF'

// closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () {
// %0 "name"                                      // users: %3, %1
bb0(%0 : @guaranteed $String):
  debug_value %0 : $String, let, name "name", argno 1 // id: %1
  // function_ref closure #1 in closure #1 in foo()
  %2 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %4
  %3 = copy_value %0 : $String                    // user: %4
  %4 = partial_apply [callee_guaranteed] %2(%3) : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %5
  return %4 : $@callee_guaranteed (Int, Int, Int) -> () // id: %5
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_'

// closure #1 in closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %59, %4
// %1 "weak"                                      // users: %77, %5
// %2 "unowned"                                   // users: %95, %6
// %3 "name"                                      // users: %41, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : @guaranteed $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %11
  (%11, %12) = destructure_tuple %10 : $(Array<Any>, Builtin.RawPointer) // users: %128, %125, %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %118
  %14 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %114, %113, %28, %35, %42, %53, %60, %71, %78, %89, %96, %107, %112
  %15 = integer_literal $Builtin.IntLiteral, 39   // user: %16
  %16 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%15 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %17
  (%17, %18) = destructure_tuple %16 : $(Builtin.Int64, Builtin.Int1) // user: %19
  %19 = struct $Int (%17 : $Builtin.Int64)        // user: %27
  %20 = integer_literal $Builtin.IntLiteral, 4    // user: %21
  %21 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%20 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %22
  (%22, %23) = destructure_tuple %21 : $(Builtin.Int64, Builtin.Int1) // user: %24
  %24 = struct $Int (%22 : $Builtin.Int64)        // user: %27
  %25 = metatype $@thin DefaultStringInterpolation.Type // user: %27
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %26 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %27
  %27 = apply %26(%19, %24, %25) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %28
  store %27 to [init] %14 : $*DefaultStringInterpolation // id: %28
  %29 = string_literal utf8 "Name: "              // user: %34
  %30 = integer_literal $Builtin.Word, 6          // user: %34
  %31 = integer_literal $Builtin.Int1, -1         // user: %34
  %32 = metatype $@thin String.Type               // user: %34
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %33 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %34
  %34 = apply %33(%29, %30, %31, %32) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %39, %37
  %35 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %38, %37
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %36 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %37
  %37 = apply %36(%34, %35) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %35 : $*DefaultStringInterpolation   // id: %38
  destroy_value %34 : $String                     // id: %39
  %40 = alloc_stack $String                       // users: %46, %44, %41
  %41 = store_borrow %3 to %40 : $*String
  %42 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %45, %44
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %43 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %44
  %44 = apply %43<String>(%40, %42) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %42 : $*DefaultStringInterpolation   // id: %45
  dealloc_stack %40 : $*String                    // id: %46
  %47 = string_literal utf8 "; Strong: ("         // user: %52
  %48 = integer_literal $Builtin.Word, 11         // user: %52
  %49 = integer_literal $Builtin.Int1, -1         // user: %52
  %50 = metatype $@thin String.Type               // user: %52
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %51 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %52
  %52 = apply %51(%47, %48, %49, %50) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %57, %55
  %53 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %56, %55
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %54 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %55
  %55 = apply %54(%52, %53) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %53 : $*DefaultStringInterpolation   // id: %56
  destroy_value %52 : $String                     // id: %57
  %58 = alloc_stack $Int                          // users: %64, %62, %59
  store %0 to [trivial] %58 : $*Int               // id: %59
  %60 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %63, %62
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %61 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %62
  %62 = apply %61<Int>(%58, %60) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %60 : $*DefaultStringInterpolation   // id: %63
  dealloc_stack %58 : $*Int                       // id: %64
  %65 = string_literal utf8 "); Weak: ("          // user: %70
  %66 = integer_literal $Builtin.Word, 10         // user: %70
  %67 = integer_literal $Builtin.Int1, -1         // user: %70
  %68 = metatype $@thin String.Type               // user: %70
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %69 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %70
  %70 = apply %69(%65, %66, %67, %68) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %75, %73
  %71 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %74, %73
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %72 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %73
  %73 = apply %72(%70, %71) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %71 : $*DefaultStringInterpolation   // id: %74
  destroy_value %70 : $String                     // id: %75
  %76 = alloc_stack $Int                          // users: %82, %80, %77
  store %1 to [trivial] %76 : $*Int               // id: %77
  %78 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %81, %80
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %79 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %80
  %80 = apply %79<Int>(%76, %78) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %78 : $*DefaultStringInterpolation   // id: %81
  dealloc_stack %76 : $*Int                       // id: %82
  %83 = string_literal utf8 "); Unowned("         // user: %88
  %84 = integer_literal $Builtin.Word, 11         // user: %88
  %85 = integer_literal $Builtin.Int1, -1         // user: %88
  %86 = metatype $@thin String.Type               // user: %88
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %87 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %88
  %88 = apply %87(%83, %84, %85, %86) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %93, %91
  %89 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %92, %91
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %90 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %91
  %91 = apply %90(%88, %89) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %89 : $*DefaultStringInterpolation   // id: %92
  destroy_value %88 : $String                     // id: %93
  %94 = alloc_stack $Int                          // users: %100, %98, %95
  store %2 to [trivial] %94 : $*Int               // id: %95
  %96 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %99, %98
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %97 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %98
  %98 = apply %97<Int>(%94, %96) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %96 : $*DefaultStringInterpolation   // id: %99
  dealloc_stack %94 : $*Int                       // id: %100
  %101 = string_literal utf8 ")"                  // user: %106
  %102 = integer_literal $Builtin.Word, 1         // user: %106
  %103 = integer_literal $Builtin.Int1, -1        // user: %106
  %104 = metatype $@thin String.Type              // user: %106
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %105 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %106
  %106 = apply %105(%101, %102, %103, %104) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %111, %109
  %107 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %110, %109
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %108 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %109
  %109 = apply %108(%106, %107) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %107 : $*DefaultStringInterpolation  // id: %110
  destroy_value %106 : $String                    // id: %111
  %112 = load [copy] %14 : $*DefaultStringInterpolation // user: %117
  destroy_addr %14 : $*DefaultStringInterpolation // id: %113
  dealloc_stack %14 : $*DefaultStringInterpolation // id: %114
  %115 = metatype $@thin String.Type              // user: %117
  // function_ref String.init(stringInterpolation:)
  %116 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %117
  %117 = apply %116(%112, %115) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %119
  %118 = init_existential_addr %13 : $*Any, $String // user: %119
  store %117 to [init] %118 : $*String            // id: %119
  // function_ref default argument 1 of print(_:separator:terminator:)
  %120 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %121
  %121 = apply %120() : $@convention(thin) () -> @owned String // users: %127, %125
  // function_ref default argument 2 of print(_:separator:terminator:)
  %122 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %123
  %123 = apply %122() : $@convention(thin) () -> @owned String // users: %126, %125
  // function_ref print(_:separator:terminator:)
  %124 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %125
  %125 = apply %124(%11, %121, %123) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %123 : $String                    // id: %126
  destroy_value %121 : $String                    // id: %127
  destroy_value %11 : $Array<Any>                 // id: %128
  %129 = tuple ()                                 // user: %130
  return %129 : $()                               // id: %130
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] [_semantics "array.uninitialized_intrinsic"] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer)

// Int.init(_builtinIntegerLiteral:)
sil public_external [transparent] [serialized] [canonical] [ossa] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int {
// %0                                             // user: %2
bb0(%0 : $Builtin.IntLiteral, %1 : $@thin Int.Type):
  %2 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%0 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %3
  (%3, %4) = destructure_tuple %2 : $(Builtin.Int64, Builtin.Int1) // user: %5
  %5 = struct $Int (%3 : $Builtin.Int64)          // user: %6
  return %5 : $Int                                // id: %6
} // end sil function '$sSi22_builtinIntegerLiteralSiBI_tcfC'

// DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
sil [serialized] @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// DefaultStringInterpolation.appendLiteral(_:)
sil [serialized] @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// String.init(stringInterpolation:)
sil [serialized] [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String

// default argument 1 of print(_:separator:terminator:)
sil hidden_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String

// default argument 2 of print(_:separator:terminator:)
sil hidden_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String

// print(_:separator:terminator:)
sil @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()

// closure #2 in foo()
sil private [ossa] @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () {
// %0 "number"                                    // users: %7, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %1
  %2 = integer_literal $Builtin.IntLiteral, 1     // user: %3
  %3 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%2 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %4
  (%4, %5) = destructure_tuple %3 : $(Builtin.Int64, Builtin.Int1) // user: %6
  %6 = struct $Int (%4 : $Builtin.Int64)          // user: %11
  %7 = ref_element_addr %0 : $Number, #Number.number // user: %8
  %8 = begin_access [modify] [dynamic] %7 : $*Int // users: %18, %9, %20
  %9 = struct_element_addr %8 : $*Int, #Int._value // user: %10
  %10 = load [trivial] %9 : $*Builtin.Int64       // user: %13
  %11 = struct_extract %6 : $Int, #Int._value     // user: %13
  %12 = integer_literal $Builtin.Int1, -1         // user: %13
  %13 = builtin "sadd_with_overflow_Int64"(%10 : $Builtin.Int64, %11 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %14
  (%14, %15) = destructure_tuple %13 : $(Builtin.Int64, Builtin.Int1) // users: %17, %16
  cond_fail %15 : $Builtin.Int1, "arithmetic overflow" // id: %16
  %17 = struct $Int (%14 : $Builtin.Int64)        // user: %18
  store %17 to [trivial] %8 : $*Int               // id: %18
  %19 = tuple ()
  end_access %8 : $*Int                           // id: %20
  %21 = tuple ()                                  // user: %22
  return %21 : $()                                // id: %22
} // end sil function '$s4file3fooyyFyycfU0_'

// static Int.+= infix(_:_:)
sil public_external [transparent] [serialized] [canonical] [ossa] @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () {
// %0                                             // users: %14, %3
// %1                                             // user: %5
bb0(%0 : $*Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_element_addr %0 : $*Int, #Int._value // user: %4
  %4 = load [trivial] %3 : $*Builtin.Int64        // user: %7
  %5 = struct_extract %1 : $Int, #Int._value      // user: %7
  %6 = integer_literal $Builtin.Int1, -1          // user: %7
  %7 = builtin "sadd_with_overflow_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %8
  (%8, %9) = destructure_tuple %7 : $(Builtin.Int64, Builtin.Int1) // users: %13, %12
  br bb1                                          // id: %10

bb1:                                              // Preds: bb0
  br bb2                                          // id: %11

bb2:                                              // Preds: bb1
  cond_fail %9 : $Builtin.Int1, "arithmetic overflow" // id: %12
  %13 = struct $Int (%8 : $Builtin.Int64)         // user: %14
  store %13 to [trivial] %0 : $*Int               // id: %14
  %15 = tuple ()                                  // user: %16
  return %15 : $()                                // id: %16
} // end sil function '$sSi2peoiyySiz_SitFZ'

// closure #3 in foo()
sil private [ossa] @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %10, %2
// %1 "value"                                     // user: %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %56, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = integer_literal $Builtin.IntLiteral, 1     // user: %6
  %6 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%5 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %7
  (%7, %8) = destructure_tuple %6 : $(Builtin.Int64, Builtin.Int1) // user: %9
  %9 = struct $Int (%7 : $Builtin.Int64)          // user: %14
  %10 = ref_element_addr %0 : $Number, #Number.number // user: %11
  %11 = begin_access [modify] [dynamic] %10 : $*Int // users: %21, %12, %23
  %12 = struct_element_addr %11 : $*Int, #Int._value // user: %13
  %13 = load [trivial] %12 : $*Builtin.Int64      // user: %16
  %14 = struct_extract %9 : $Int, #Int._value     // user: %16
  %15 = integer_literal $Builtin.Int1, -1         // user: %16
  %16 = builtin "sadd_with_overflow_Int64"(%13 : $Builtin.Int64, %14 : $Builtin.Int64, %15 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %17
  (%17, %18) = destructure_tuple %16 : $(Builtin.Int64, Builtin.Int1) // users: %20, %19
  cond_fail %18 : $Builtin.Int1, "arithmetic overflow" // id: %19
  %20 = struct $Int (%17 : $Builtin.Int64)        // user: %21
  store %20 to [trivial] %11 : $*Int              // id: %21
  %22 = tuple ()
  end_access %11 : $*Int                          // id: %23
  %24 = integer_literal $Builtin.Word, 1          // user: %26
  // function_ref _allocateUninitializedArray<A>(_:)
  %25 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %26
  %26 = apply %25<Any>(%24) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %27
  (%27, %28) = destructure_tuple %26 : $(Array<Any>, Builtin.RawPointer) // users: %93, %90, %29
  %29 = pointer_to_address %28 : $Builtin.RawPointer to [strict] $*Any // user: %83
  %30 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %79, %78, %44, %51, %61, %72, %77
  %31 = integer_literal $Builtin.IntLiteral, 3    // user: %32
  %32 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%31 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %33
  (%33, %34) = destructure_tuple %32 : $(Builtin.Int64, Builtin.Int1) // user: %35
  %35 = struct $Int (%33 : $Builtin.Int64)        // user: %43
  %36 = integer_literal $Builtin.IntLiteral, 1    // user: %37
  %37 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%36 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %38
  (%38, %39) = destructure_tuple %37 : $(Builtin.Int64, Builtin.Int1) // user: %40
  %40 = struct $Int (%38 : $Builtin.Int64)        // user: %43
  %41 = metatype $@thin DefaultStringInterpolation.Type // user: %43
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %42 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %43
  %43 = apply %42(%35, %40, %41) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %44
  store %43 to [init] %30 : $*DefaultStringInterpolation // id: %44
  %45 = string_literal utf8 "v: "                 // user: %50
  %46 = integer_literal $Builtin.Word, 3          // user: %50
  %47 = integer_literal $Builtin.Int1, -1         // user: %50
  %48 = metatype $@thin String.Type               // user: %50
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %49 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %50
  %50 = apply %49(%45, %46, %47, %48) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %55, %53
  %51 = begin_access [modify] [static] %30 : $*DefaultStringInterpolation // users: %54, %53
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %52 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %53
  %53 = apply %52(%50, %51) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %51 : $*DefaultStringInterpolation   // id: %54
  destroy_value %50 : $String                     // id: %55
  %56 = begin_access [read] [dynamic] %3 : $*Int  // users: %58, %57
  %57 = load [trivial] %56 : $*Int                // user: %60
  end_access %56 : $*Int                          // id: %58
  %59 = alloc_stack $Int                          // users: %65, %63, %60
  store %57 to [trivial] %59 : $*Int              // id: %60
  %61 = begin_access [modify] [static] %30 : $*DefaultStringInterpolation // users: %64, %63
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %62 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %63
  %63 = apply %62<Int>(%59, %61) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %61 : $*DefaultStringInterpolation   // id: %64
  dealloc_stack %59 : $*Int                       // id: %65
  %66 = string_literal utf8 ""                    // user: %71
  %67 = integer_literal $Builtin.Word, 0          // user: %71
  %68 = integer_literal $Builtin.Int1, -1         // user: %71
  %69 = metatype $@thin String.Type               // user: %71
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %70 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %71
  %71 = apply %70(%66, %67, %68, %69) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %76, %74
  %72 = begin_access [modify] [static] %30 : $*DefaultStringInterpolation // users: %75, %74
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %73 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %74
  %74 = apply %73(%71, %72) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %72 : $*DefaultStringInterpolation   // id: %75
  destroy_value %71 : $String                     // id: %76
  %77 = load [copy] %30 : $*DefaultStringInterpolation // user: %82
  destroy_addr %30 : $*DefaultStringInterpolation // id: %78
  dealloc_stack %30 : $*DefaultStringInterpolation // id: %79
  %80 = metatype $@thin String.Type               // user: %82
  // function_ref String.init(stringInterpolation:)
  %81 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %82
  %82 = apply %81(%77, %80) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %84
  %83 = init_existential_addr %29 : $*Any, $String // user: %84
  store %82 to [init] %83 : $*String              // id: %84
  // function_ref default argument 1 of print(_:separator:terminator:)
  %85 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %86
  %86 = apply %85() : $@convention(thin) () -> @owned String // users: %92, %90
  // function_ref default argument 2 of print(_:separator:terminator:)
  %87 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %88
  %88 = apply %87() : $@convention(thin) () -> @owned String // users: %91, %90
  // function_ref print(_:separator:terminator:)
  %89 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %90
  %90 = apply %89(%27, %86, %88) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %88 : $String                     // id: %91
  destroy_value %86 : $String                     // id: %92
  destroy_value %27 : $Array<Any>                 // id: %93
  %94 = tuple ()                                  // user: %95
  return %94 : $()                                // id: %95
} // end sil function '$s4file3fooyyFyycfU1_'

// closure #4 in foo()
sil private [ossa] @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () {
// %0 "number"                                    // users: %9, %2
// %1 "empty"                                     // users: %24, %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %3
  %4 = integer_literal $Builtin.IntLiteral, 1     // user: %5
  %5 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%4 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %6
  (%6, %7) = destructure_tuple %5 : $(Builtin.Int64, Builtin.Int1) // user: %8
  %8 = struct $Int (%6 : $Builtin.Int64)          // user: %13
  %9 = ref_element_addr %0 : $Number, #Number.number // user: %10
  %10 = begin_access [modify] [dynamic] %9 : $*Int // users: %20, %11, %22
  %11 = struct_element_addr %10 : $*Int, #Int._value // user: %12
  %12 = load [trivial] %11 : $*Builtin.Int64      // user: %15
  %13 = struct_extract %8 : $Int, #Int._value     // user: %15
  %14 = integer_literal $Builtin.Int1, -1         // user: %15
  %15 = builtin "sadd_with_overflow_Int64"(%12 : $Builtin.Int64, %13 : $Builtin.Int64, %14 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %16
  (%16, %17) = destructure_tuple %15 : $(Builtin.Int64, Builtin.Int1) // users: %19, %18
  cond_fail %17 : $Builtin.Int1, "arithmetic overflow" // id: %18
  %19 = struct $Int (%16 : $Builtin.Int64)        // user: %20
  store %19 to [trivial] %10 : $*Int              // id: %20
  %21 = tuple ()
  end_access %10 : $*Int                          // id: %22
  // function_ref Empty.foo()
  %23 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %24
  %24 = apply %23(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %25 = tuple ()                                  // user: %26
  return %25 : $()                                // id: %26
} // end sil function '$s4file3fooyyFyycfU2_'

// closure #5 in foo()
sil private [ossa] @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %12, %3
// %1 "empty"                                     // users: %27, %4
// %2 "value"                                     // user: %5
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty, %2 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %60, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = integer_literal $Builtin.IntLiteral, 1     // user: %8
  %8 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%7 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %9
  (%9, %10) = destructure_tuple %8 : $(Builtin.Int64, Builtin.Int1) // user: %11
  %11 = struct $Int (%9 : $Builtin.Int64)         // user: %16
  %12 = ref_element_addr %0 : $Number, #Number.number // user: %13
  %13 = begin_access [modify] [dynamic] %12 : $*Int // users: %23, %14, %25
  %14 = struct_element_addr %13 : $*Int, #Int._value // user: %15
  %15 = load [trivial] %14 : $*Builtin.Int64      // user: %18
  %16 = struct_extract %11 : $Int, #Int._value    // user: %18
  %17 = integer_literal $Builtin.Int1, -1         // user: %18
  %18 = builtin "sadd_with_overflow_Int64"(%15 : $Builtin.Int64, %16 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %19
  (%19, %20) = destructure_tuple %18 : $(Builtin.Int64, Builtin.Int1) // users: %22, %21
  cond_fail %20 : $Builtin.Int1, "arithmetic overflow" // id: %21
  %22 = struct $Int (%19 : $Builtin.Int64)        // user: %23
  store %22 to [trivial] %13 : $*Int              // id: %23
  %24 = tuple ()
  end_access %13 : $*Int                          // id: %25
  // function_ref Empty.foo()
  %26 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %27
  %27 = apply %26(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %28 = integer_literal $Builtin.Word, 1          // user: %30
  // function_ref _allocateUninitializedArray<A>(_:)
  %29 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %30
  %30 = apply %29<Any>(%28) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %31
  (%31, %32) = destructure_tuple %30 : $(Array<Any>, Builtin.RawPointer) // users: %97, %94, %33
  %33 = pointer_to_address %32 : $Builtin.RawPointer to [strict] $*Any // user: %87
  %34 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %83, %82, %48, %55, %65, %76, %81
  %35 = integer_literal $Builtin.IntLiteral, 3    // user: %36
  %36 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%35 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %37
  (%37, %38) = destructure_tuple %36 : $(Builtin.Int64, Builtin.Int1) // user: %39
  %39 = struct $Int (%37 : $Builtin.Int64)        // user: %47
  %40 = integer_literal $Builtin.IntLiteral, 1    // user: %41
  %41 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%40 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %42
  (%42, %43) = destructure_tuple %41 : $(Builtin.Int64, Builtin.Int1) // user: %44
  %44 = struct $Int (%42 : $Builtin.Int64)        // user: %47
  %45 = metatype $@thin DefaultStringInterpolation.Type // user: %47
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %46 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %47
  %47 = apply %46(%39, %44, %45) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %48
  store %47 to [init] %34 : $*DefaultStringInterpolation // id: %48
  %49 = string_literal utf8 "v: "                 // user: %54
  %50 = integer_literal $Builtin.Word, 3          // user: %54
  %51 = integer_literal $Builtin.Int1, -1         // user: %54
  %52 = metatype $@thin String.Type               // user: %54
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %53 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %54
  %54 = apply %53(%49, %50, %51, %52) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %59, %57
  %55 = begin_access [modify] [static] %34 : $*DefaultStringInterpolation // users: %58, %57
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %56 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %57
  %57 = apply %56(%54, %55) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %55 : $*DefaultStringInterpolation   // id: %58
  destroy_value %54 : $String                     // id: %59
  %60 = begin_access [read] [dynamic] %5 : $*Int  // users: %62, %61
  %61 = load [trivial] %60 : $*Int                // user: %64
  end_access %60 : $*Int                          // id: %62
  %63 = alloc_stack $Int                          // users: %69, %67, %64
  store %61 to [trivial] %63 : $*Int              // id: %64
  %65 = begin_access [modify] [static] %34 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66<Int>(%63, %65) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  dealloc_stack %63 : $*Int                       // id: %69
  %70 = string_literal utf8 ""                    // user: %75
  %71 = integer_literal $Builtin.Word, 0          // user: %75
  %72 = integer_literal $Builtin.Int1, -1         // user: %75
  %73 = metatype $@thin String.Type               // user: %75
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %74 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %75
  %75 = apply %74(%70, %71, %72, %73) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %80, %78
  %76 = begin_access [modify] [static] %34 : $*DefaultStringInterpolation // users: %79, %78
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %77 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %78
  %78 = apply %77(%75, %76) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %76 : $*DefaultStringInterpolation   // id: %79
  destroy_value %75 : $String                     // id: %80
  %81 = load [copy] %34 : $*DefaultStringInterpolation // user: %86
  destroy_addr %34 : $*DefaultStringInterpolation // id: %82
  dealloc_stack %34 : $*DefaultStringInterpolation // id: %83
  %84 = metatype $@thin String.Type               // user: %86
  // function_ref String.init(stringInterpolation:)
  %85 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %86
  %86 = apply %85(%81, %84) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %88
  %87 = init_existential_addr %33 : $*Any, $String // user: %88
  store %86 to [init] %87 : $*String              // id: %88
  // function_ref default argument 1 of print(_:separator:terminator:)
  %89 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %90
  %90 = apply %89() : $@convention(thin) () -> @owned String // users: %96, %94
  // function_ref default argument 2 of print(_:separator:terminator:)
  %91 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %92
  %92 = apply %91() : $@convention(thin) () -> @owned String // users: %95, %94
  // function_ref print(_:separator:terminator:)
  %93 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %94
  %94 = apply %93(%31, %90, %92) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %92 : $String                     // id: %95
  destroy_value %90 : $String                     // id: %96
  destroy_value %31 : $Array<Any>                 // id: %97
  %98 = tuple ()                                  // user: %99
  return %98 : $()                                // id: %99
} // end sil function '$s4file3fooyyFyycfU3_'

// Array.init()
sil [serialized] [_semantics "array.init.empty"] @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>

// Array.reserveCapacity(_:)
sil [serialized] [_semantics "array.mutate_unknown"] @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()

// Bool.init(_builtinBooleanLiteral:)
sil public_external [transparent] [serialized] [canonical] [ossa] @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Builtin.Int1, %1 : $@thin Bool.Type):
  %2 = struct $Bool (%0 : $Builtin.Int1)          // user: %3
  return %2 : $Bool                               // id: %3
} // end sil function '$sSb22_builtinBooleanLiteralSbBi1__tcfC'

// default argument 0 of readLine(strippingNewline:)
sil hidden_external [serialized] @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool

// readLine(strippingNewline:)
sil @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String>

// ~= infix<A>(_:_:)
sil public_external [transparent] [serialized] [canonical] [ossa] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <T where T : Equatable> (@in_guaranteed T, @in_guaranteed T) -> Bool {
// %0                                             // user: %4
// %1                                             // user: %4
bb0(%0 : $*T, %1 : $*T):
  %2 = metatype $@thick T.Type                    // user: %4
  %3 = witness_method $T, #Equatable."==" : <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %4
  %4 = apply %3<T>(%0, %1, %2) : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %5
  return %4 : $Bool                               // id: %5
} // end sil function '$ss2teoiySbx_xtSQRzlF'

// Array.append(_:)
sil [serialized] [_semantics "array.append_element"] @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()

// Collection.isEmpty.getter
sil [serialized] @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool

// static Bool.! prefix(_:)
sil public_external [transparent] [serialized] [canonical] [ossa] @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Bool, %1 : $@thin Bool.Type):
  %2 = struct_extract %0 : $Bool, #Bool._value    // user: %4
  %3 = integer_literal $Builtin.Int1, -1          // user: %4
  %4 = builtin "xor_Int1"(%2 : $Builtin.Int1, %3 : $Builtin.Int1) : $Builtin.Int1 // user: %5
  %5 = struct $Bool (%4 : $Builtin.Int1)          // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sSb1nopyS2bFZ'

// RangeReplaceableCollection<>.removeLast()
sil [serialized] @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element

// BidirectionalCollection.last.getter
sil [serialized] @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>

// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
sil shared_external [transparent] [serialized] [thunk] [canonical] [ossa] @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thick Optional<τ_0_0>.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Optional<τ_0_0>, %1 : $*Optional<τ_0_0>, %2 : $@thick Optional<τ_0_0>.Type):
  %3 = metatype $@thin Optional<τ_0_0>.Type      // user: %5
  // function_ref static Optional<A>.== infix(_:_:)
  %4 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %5
  %5 = apply %4<τ_0_0>(%0, %1, %3) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW'

// static Optional<A>.== infix(_:_:)
sil [serialized] [canonical] @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool

sil_vtable Empty {
  #Empty.init!allocator: (Empty.Type) -> () -> Empty : @$s4file5EmptyCACycfC	// Empty.__allocating_init()
  #Empty.deinit!deallocator: @$s4file5EmptyCfD	// Empty.__deallocating_deinit
}

sil_vtable Number {
  #Number.init!allocator: (Number.Type) -> (Int) -> Number : @$s4file6NumberC6numberACSi_tcfC	// Number.__allocating_init(number:)
  #Number.deinit!deallocator: @$s4file6NumberCfD	// Number.__deallocating_deinit
}

sil_vtable Closure {
  #Closure.init!allocator: (Closure.Type) -> (@escaping () -> ()) -> Closure : @$s4file7ClosureCyACyyccfC	// Closure.__allocating_init(_:)
  #Closure.deinit!deallocator: @$s4file7ClosureCfD	// Closure.__deallocating_deinit
}

sil_witness_table public_external [serialized] <Wrapped where Wrapped : Equatable> Optional<Wrapped>: Equatable module Swift {
  method #Equatable."==": <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW	// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
  conditional_conformance (Wrapped: Equatable): dependent
}



  *** SIL module after #194, stage Guaranteed Passes, pass 12: MandatorySILLinker (mandatory-linker)
sil_stage raw

import Builtin
import Swift
import SwiftShims

// main
sil [ossa] @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

// Empty.foo()
sil hidden [ossa] @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4file5EmptyC3fooyyF'

// Empty.deinit
sil hidden [ossa] @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Empty to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file5EmptyCfd'

// Empty.__deallocating_deinit
sil hidden [ossa] @$s4file5EmptyCfD : $@convention(method) (@owned Empty) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  // function_ref Empty.deinit
  %2 = function_ref @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Empty                   // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Empty                          // id: %5
  end_lifetime %0 : $Empty                        // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Empty // user: %8
  dealloc_ref %7 : $Empty                         // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file5EmptyCfD'

// Empty.__allocating_init()
sil hidden [exact_self_class] [ossa] @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty {
// %0 "$metatype"
bb0(%0 : $@thick Empty.Type):
  %1 = alloc_ref $Empty                           // user: %3
  // function_ref Empty.init()
  %2 = function_ref @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Empty) -> @owned Empty // user: %4
  return %3 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfC'

// Empty.init()
sil hidden [ossa] @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty {
// %0 "self"                                      // users: %2, %3, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = copy_value %0 : $Empty                     // user: %4
  destroy_value %0 : $Empty                       // id: %3
  return %2 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfc'

// Number.number.getter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivg : $@convention(method) (@guaranteed Number) -> Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*Int   // users: %5, %4
  %4 = load [trivial] %3 : $*Int                  // user: %6
  end_access %3 : $*Int                           // id: %5
  return %4 : $Int                                // id: %6
} // end sil function '$s4file6NumberC6numberSivg'

// Number.number.setter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivs : $@convention(method) (Int, @guaranteed Number) -> () {
// %0 "value"                                     // users: %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : @guaranteed $Number):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to [trivial] %5 : $*Int                // id: %6
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9
} // end sil function '$s4file6NumberC6numberSivs'

// Number.number.modify
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivM : $@yield_once @convention(method) (@guaranteed Number) -> @yields @inout Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*Int // users: %5, %8, %4
  yield %3 : $*Int, resume bb1, unwind bb2        // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file6NumberC6numberSivM'

// Number.__allocating_init(number:)
sil hidden [exact_self_class] [ossa] @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number {
// %0 "number"                                    // user: %4
// %1 "$metatype"
bb0(%0 : $Int, %1 : $@thick Number.Type):
  %2 = alloc_ref $Number                          // user: %4
  // function_ref Number.init(number:)
  %3 = function_ref @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (Int, @owned Number) -> @owned Number // user: %5
  return %4 : $Number                             // id: %5
} // end sil function '$s4file6NumberC6numberACSi_tcfC'

// Number.init(number:)
sil hidden [ossa] @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %7, %2
// %1 "self"                                      // users: %4, %10, %11, %3
bb0(%0 : $Int, %1 : @owned $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %1 : $Number                  // users: %9, %5
  %5 = ref_element_addr %4 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %7, %8
  store %0 to [trivial] %6 : $*Int                // id: %7
  end_access %6 : $*Int                           // id: %8
  end_borrow %4 : $Number                         // id: %9
  %10 = copy_value %1 : $Number                   // user: %12
  destroy_value %1 : $Number                      // id: %11
  return %10 : $Number                            // id: %12
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

// Number.deinit
sil hidden [ossa] @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Number to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file6NumberCfd'

// Number.__deallocating_deinit
sil hidden [ossa] @$s4file6NumberCfD : $@convention(method) (@owned Number) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  // function_ref Number.deinit
  %2 = function_ref @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Number                  // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Number                         // id: %5
  end_lifetime %0 : $Number                       // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Number // user: %8
  dealloc_ref %7 : $Number                        // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file6NumberCfD'

// Closure.closure.getter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvg : $@convention(method) (@guaranteed Closure) -> @owned @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  %4 = load [copy] %3 : $*@callee_guaranteed () -> () // user: %6
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  return %4 : $@callee_guaranteed () -> ()        // id: %6
} // end sil function '$s4file7ClosureC7closureyycvg'

// Closure.closure.setter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvs : $@convention(method) (@owned @callee_guaranteed () -> (), @guaranteed Closure) -> () {
// %0 "value"                                     // users: %11, %4, %2
// %1 "self"                                      // users: %6, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @guaranteed $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "value", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %10, %5
  %5 = copy_value %4 : $@callee_guaranteed () -> () // user: %8
  %6 = ref_element_addr %1 : $Closure, #Closure.closure // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*@callee_guaranteed () -> () // users: %8, %9
  store %5 to [assign] %7 : $*@callee_guaranteed () -> () // id: %8
  end_access %7 : $*@callee_guaranteed () -> ()   // id: %9
  end_borrow %4 : $@callee_guaranteed () -> ()    // id: %10
  destroy_value %0 : $@callee_guaranteed () -> () // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file7ClosureC7closureyycvs'

// Closure.closure.modify
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvM : $@yield_once @convention(method) (@guaranteed Closure) -> @yields @inout @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %8, %4
  yield %3 : $*@callee_guaranteed () -> (), resume bb1, unwind bb2 // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file7ClosureC7closureyycvM'

// Closure.__allocating_init(_:)
sil hidden [exact_self_class] [ossa] @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure {
// %0 "block"                                     // user: %4
// %1 "$metatype"
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : $@thick Closure.Type):
  %2 = alloc_ref $Closure                         // user: %4
  // function_ref Closure.init(_:)
  %3 = function_ref @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %5
  return %4 : $Closure                            // id: %5
} // end sil function '$s4file7ClosureCyACyyccfC'

// Closure.init(_:)
sil hidden [ossa] @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %15, %5, %2
// %1 "self"                                      // users: %4, %13, %14, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @owned $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %1 : $Closure                 // users: %12, %7
  %5 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %11, %6
  %6 = copy_value %5 : $@callee_guaranteed () -> () // user: %9
  %7 = ref_element_addr %4 : $Closure, #Closure.closure // user: %8
  %8 = begin_access [modify] [dynamic] %7 : $*@callee_guaranteed () -> () // users: %9, %10
  store %6 to [init] %8 : $*@callee_guaranteed () -> () // id: %9
  end_access %8 : $*@callee_guaranteed () -> ()   // id: %10
  end_borrow %5 : $@callee_guaranteed () -> ()    // id: %11
  end_borrow %4 : $Closure                        // id: %12
  %13 = copy_value %1 : $Closure                  // user: %16
  destroy_value %1 : $Closure                     // id: %14
  destroy_value %0 : $@callee_guaranteed () -> () // id: %15
  return %13 : $Closure                           // id: %16
} // end sil function '$s4file7ClosureCyACyyccfc'

// Closure.deinit
sil hidden [ossa] @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %6, %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [deinit] [static] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  destroy_addr %3 : $*@callee_guaranteed () -> () // id: %4
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = unchecked_ref_cast %0 : $Closure to $Builtin.NativeObject // user: %7
  %7 = unchecked_ownership_conversion %6 : $Builtin.NativeObject, @guaranteed to @owned // user: %8
  return %7 : $Builtin.NativeObject               // id: %8
} // end sil function '$s4file7ClosureCfd'

// Closure.__deallocating_deinit
sil hidden [ossa] @$s4file7ClosureCfD : $@convention(method) (@owned Closure) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  // function_ref Closure.deinit
  %2 = function_ref @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Closure                 // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Closure                        // id: %5
  end_lifetime %0 : $Closure                      // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Closure // user: %8
  dealloc_ref %7 : $Closure                       // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file7ClosureCfD'

// foo()
sil hidden [ossa] @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %643, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %642, %108, %93, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %14
  %8 = integer_literal $Builtin.IntLiteral, 0     // user: %9
  %9 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%8 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %10
  (%10, %11) = destructure_tuple %9 : $(Builtin.Int64, Builtin.Int1) // user: %12
  %12 = struct $Int (%10 : $Builtin.Int64)        // user: %14
  // function_ref Number.__allocating_init(number:)
  %13 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %14
  %14 = apply %13(%12, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %641, %104, %89, %79, %70, %15
  debug_value %14 : $Number, let, name "number"   // id: %15
  %16 = integer_literal $Builtin.Word, 1          // user: %18
  // function_ref _allocateUninitializedArray<A>(_:)
  %17 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %18
  %18 = apply %17<Any>(%16) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %19
  (%19, %20) = destructure_tuple %18 : $(Array<Any>, Builtin.RawPointer) // users: %38, %35, %21
  %21 = pointer_to_address %20 : $Builtin.RawPointer to [strict] $*Any // user: %28
  %22 = string_literal utf8 "===== Did init"      // user: %27
  %23 = integer_literal $Builtin.Word, 14         // user: %27
  %24 = integer_literal $Builtin.Int1, -1         // user: %27
  %25 = metatype $@thin String.Type               // user: %27
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %26 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %27
  %27 = apply %26(%22, %23, %24, %25) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %29
  %28 = init_existential_addr %21 : $*Any, $String // user: %29
  store %27 to [init] %28 : $*String              // id: %29
  // function_ref default argument 1 of print(_:separator:terminator:)
  %30 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %31
  %31 = apply %30() : $@convention(thin) () -> @owned String // users: %37, %35
  // function_ref default argument 2 of print(_:separator:terminator:)
  %32 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %33
  %33 = apply %32() : $@convention(thin) () -> @owned String // users: %36, %35
  // function_ref print(_:separator:terminator:)
  %34 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %35
  %35 = apply %34(%19, %31, %33) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %33 : $String                     // id: %36
  destroy_value %31 : $String                     // id: %37
  destroy_value %19 : $Array<Any>                 // id: %38
  %39 = integer_literal $Builtin.Word, 1          // user: %41
  // function_ref _allocateUninitializedArray<A>(_:)
  %40 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %41
  %41 = apply %40<Any>(%39) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %42
  (%42, %43) = destructure_tuple %41 : $(Array<Any>, Builtin.RawPointer) // users: %61, %58, %44
  %44 = pointer_to_address %43 : $Builtin.RawPointer to [strict] $*Any // user: %51
  %45 = string_literal utf8 "===== Did hook"      // user: %50
  %46 = integer_literal $Builtin.Word, 14         // user: %50
  %47 = integer_literal $Builtin.Int1, -1         // user: %50
  %48 = metatype $@thin String.Type               // user: %50
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %49 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %50
  %50 = apply %49(%45, %46, %47, %48) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %52
  %51 = init_existential_addr %44 : $*Any, $String // user: %52
  store %50 to [init] %51 : $*String              // id: %52
  // function_ref default argument 1 of print(_:separator:terminator:)
  %53 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %54
  %54 = apply %53() : $@convention(thin) () -> @owned String // users: %60, %58
  // function_ref default argument 2 of print(_:separator:terminator:)
  %55 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %56
  %56 = apply %55() : $@convention(thin) () -> @owned String // users: %59, %58
  // function_ref print(_:separator:terminator:)
  %57 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %58
  %58 = apply %57(%42, %54, %56) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %56 : $String                     // id: %59
  destroy_value %54 : $String                     // id: %60
  destroy_value %42 : $Array<Any>                 // id: %61
  %62 = alloc_box ${ var Int }, var, name "value" // users: %640, %115, %85, %63
  %63 = project_box %62 : ${ var Int }, 0         // users: %467, %69
  %64 = integer_literal $Builtin.IntLiteral, 0    // user: %65
  %65 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%64 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %66
  (%66, %67) = destructure_tuple %65 : $(Builtin.Int64, Builtin.Int1) // user: %68
  %68 = struct $Int (%66 : $Builtin.Int64)        // user: %69
  store %68 to [trivial] %63 : $*Int              // id: %69
  %70 = begin_borrow %14 : $Number                // users: %73, %71
  %71 = copy_value %70 : $Number                  // users: %78, %75, %72
  debug_value %71 : $Number, let, name "number"   // id: %72
  end_borrow %70 : $Number                        // id: %73
  // function_ref closure #2 in foo()
  %74 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %76
  %75 = copy_value %71 : $Number                  // user: %76
  %76 = partial_apply [callee_guaranteed] %74(%75) : $@convention(thin) (@guaranteed Number) -> () // users: %639, %244, %77
  debug_value %76 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %77
  destroy_value %71 : $Number                     // id: %78
  %79 = begin_borrow %14 : $Number                // users: %82, %80
  %80 = copy_value %79 : $Number                  // users: %88, %84, %81
  debug_value %80 : $Number, let, name "number"   // id: %81
  end_borrow %79 : $Number                        // id: %82
  // function_ref closure #3 in foo()
  %83 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %86
  %84 = copy_value %80 : $Number                  // user: %86
  %85 = copy_value %62 : ${ var Int }             // user: %86
  %86 = partial_apply [callee_guaranteed] %83(%84, %85) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %638, %284, %87
  debug_value %86 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %87
  destroy_value %80 : $Number                     // id: %88
  %89 = begin_borrow %14 : $Number                // users: %92, %90
  %90 = copy_value %89 : $Number                  // users: %103, %98, %91
  debug_value %90 : $Number, let, name "number"   // id: %91
  end_borrow %89 : $Number                        // id: %92
  %93 = begin_borrow %5 : $Empty                  // users: %96, %94
  %94 = copy_value %93 : $Empty                   // users: %102, %99, %95
  debug_value %94 : $Empty, let, name "empty"     // id: %95
  end_borrow %93 : $Empty                         // id: %96
  // function_ref closure #4 in foo()
  %97 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %100
  %98 = copy_value %90 : $Number                  // user: %100
  %99 = copy_value %94 : $Empty                   // user: %100
  %100 = partial_apply [callee_guaranteed] %97(%98, %99) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %637, %324, %101
  debug_value %100 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %101
  destroy_value %94 : $Empty                      // id: %102
  destroy_value %90 : $Number                     // id: %103
  %104 = begin_borrow %14 : $Number               // users: %107, %105
  %105 = copy_value %104 : $Number                // users: %119, %113, %106
  debug_value %105 : $Number, let, name "number"  // id: %106
  end_borrow %104 : $Number                       // id: %107
  %108 = begin_borrow %5 : $Empty                 // users: %111, %109
  %109 = copy_value %108 : $Empty                 // users: %118, %114, %110
  debug_value %109 : $Empty, let, name "empty"    // id: %110
  end_borrow %108 : $Empty                        // id: %111
  // function_ref closure #5 in foo()
  %112 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %116
  %113 = copy_value %105 : $Number                // user: %116
  %114 = copy_value %109 : $Empty                 // user: %116
  %115 = copy_value %62 : ${ var Int }            // user: %116
  %116 = partial_apply [callee_guaranteed] %112(%113, %114, %115) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %636, %364, %117
  debug_value %116 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %117
  destroy_value %109 : $Empty                     // id: %118
  destroy_value %105 : $Number                    // id: %119
  %120 = integer_literal $Builtin.Word, 1         // user: %122
  // function_ref _allocateUninitializedArray<A>(_:)
  %121 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %122
  %122 = apply %121<Any>(%120) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %123
  (%123, %124) = destructure_tuple %122 : $(Array<Any>, Builtin.RawPointer) // users: %142, %139, %125
  %125 = pointer_to_address %124 : $Builtin.RawPointer to [strict] $*Any // user: %132
  %126 = string_literal utf8 "===== Did init closures" // user: %131
  %127 = integer_literal $Builtin.Word, 23        // user: %131
  %128 = integer_literal $Builtin.Int1, -1        // user: %131
  %129 = metatype $@thin String.Type              // user: %131
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %130 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %131
  %131 = apply %130(%126, %127, %128, %129) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %133
  %132 = init_existential_addr %125 : $*Any, $String // user: %133
  store %131 to [init] %132 : $*String            // id: %133
  // function_ref default argument 1 of print(_:separator:terminator:)
  %134 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %135
  %135 = apply %134() : $@convention(thin) () -> @owned String // users: %141, %139
  // function_ref default argument 2 of print(_:separator:terminator:)
  %136 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %137
  %137 = apply %136() : $@convention(thin) () -> @owned String // users: %140, %139
  // function_ref print(_:separator:terminator:)
  %138 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %139
  %139 = apply %138(%123, %135, %137) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %137 : $String                    // id: %140
  destroy_value %135 : $String                    // id: %141
  destroy_value %123 : $Array<Any>                // id: %142
  %143 = alloc_stack $Array<Closure>, var, name "storage" // users: %635, %634, %147, %153, %251, %291, %331, %371, %403, %426, %507
  %144 = metatype $@thin Array<Closure>.Type      // user: %146
  // function_ref Array.init()
  %145 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %146
  %146 = apply %145<Closure>(%144) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %147
  store %146 to [init] %143 : $*Array<Closure>    // id: %147
  %148 = integer_literal $Builtin.IntLiteral, 100 // user: %149
  %149 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%148 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %150
  (%150, %151) = destructure_tuple %149 : $(Builtin.Int64, Builtin.Int1) // user: %152
  %152 = struct $Int (%150 : $Builtin.Int64)      // user: %155
  %153 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %156, %155
  // function_ref Array.reserveCapacity(_:)
  %154 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %155
  %155 = apply %154<Closure>(%152, %153) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %153 : $*Array<Closure>              // id: %156
  %157 = integer_literal $Builtin.Word, 1         // user: %159
  // function_ref _allocateUninitializedArray<A>(_:)
  %158 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %159
  %159 = apply %158<Any>(%157) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %160
  (%160, %161) = destructure_tuple %159 : $(Array<Any>, Builtin.RawPointer) // users: %179, %176, %162
  %162 = pointer_to_address %161 : $Builtin.RawPointer to [strict] $*Any // user: %169
  %163 = string_literal utf8 "===== Did init array" // user: %168
  %164 = integer_literal $Builtin.Word, 20        // user: %168
  %165 = integer_literal $Builtin.Int1, -1        // user: %168
  %166 = metatype $@thin String.Type              // user: %168
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %167 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %168
  %168 = apply %167(%163, %164, %165, %166) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %170
  %169 = init_existential_addr %162 : $*Any, $String // user: %170
  store %168 to [init] %169 : $*String            // id: %170
  // function_ref default argument 1 of print(_:separator:terminator:)
  %171 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %172
  %172 = apply %171() : $@convention(thin) () -> @owned String // users: %178, %176
  // function_ref default argument 2 of print(_:separator:terminator:)
  %173 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %174
  %174 = apply %173() : $@convention(thin) () -> @owned String // users: %177, %176
  // function_ref print(_:separator:terminator:)
  %175 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %176
  %176 = apply %175(%160, %172, %174) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %174 : $String                    // id: %177
  destroy_value %172 : $String                    // id: %178
  destroy_value %160 : $Array<Any>                // id: %179
  %180 = alloc_stack $Bool, var, name "run"       // users: %633, %183, %185, %577
  %181 = integer_literal $Builtin.Int1, -1        // user: %182
  %182 = struct $Bool (%181 : $Builtin.Int1)      // user: %183
  store %182 to [trivial] %180 : $*Bool           // id: %183
  br bb1                                          // id: %184

bb1:                                              // Preds: bb25 bb0
  %185 = begin_access [read] [static] %180 : $*Bool // users: %186, %188
  %186 = struct_element_addr %185 : $*Bool, #Bool._value // user: %187
  %187 = load [trivial] %186 : $*Builtin.Int1     // user: %189
  end_access %185 : $*Bool                        // id: %188
  cond_br %187, bb2, bb26                         // id: %189

bb2:                                              // Preds: bb1
  %190 = integer_literal $Builtin.Word, 1         // user: %192
  // function_ref _allocateUninitializedArray<A>(_:)
  %191 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %192
  %192 = apply %191<Any>(%190) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %193
  (%193, %194) = destructure_tuple %192 : $(Array<Any>, Builtin.RawPointer) // users: %212, %209, %195
  %195 = pointer_to_address %194 : $Builtin.RawPointer to [strict] $*Any // user: %202
  %196 = string_literal utf8 "===== Ask"          // user: %201
  %197 = integer_literal $Builtin.Word, 9         // user: %201
  %198 = integer_literal $Builtin.Int1, -1        // user: %201
  %199 = metatype $@thin String.Type              // user: %201
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %200 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %201
  %201 = apply %200(%196, %197, %198, %199) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %203
  %202 = init_existential_addr %195 : $*Any, $String // user: %203
  store %201 to [init] %202 : $*String            // id: %203
  // function_ref default argument 1 of print(_:separator:terminator:)
  %204 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %205
  %205 = apply %204() : $@convention(thin) () -> @owned String // users: %211, %209
  // function_ref default argument 2 of print(_:separator:terminator:)
  %206 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %207
  %207 = apply %206() : $@convention(thin) () -> @owned String // users: %210, %209
  // function_ref print(_:separator:terminator:)
  %208 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %209
  %209 = apply %208(%193, %205, %207) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %207 : $String                    // id: %210
  destroy_value %205 : $String                    // id: %211
  destroy_value %193 : $Array<Any>                // id: %212
  // function_ref default argument 0 of readLine(strippingNewline:)
  %213 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %214
  %214 = apply %213() : $@convention(thin) () -> Bool // user: %216
  // function_ref readLine(strippingNewline:)
  %215 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %216
  %216 = apply %215(%214) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %608, %218, %217
  debug_value %216 : $Optional<String>, let, name "line" // id: %217
  %218 = begin_borrow %216 : $Optional<String>    // users: %606, %580, %551, %543, %483, %480, %438, %433, %379, %376, %339, %336, %299, %296, %259, %256, %219
  %219 = copy_value %218 : $Optional<String>      // users: %242, %258, %230, %220
  debug_value %219 : $Optional<String>, let, name "$match" // id: %220
  %221 = string_literal utf8 "push1"              // user: %226
  %222 = integer_literal $Builtin.Word, 5         // user: %226
  %223 = integer_literal $Builtin.Int1, -1        // user: %226
  %224 = metatype $@thin String.Type              // user: %226
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %225 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %226
  %226 = apply %225(%221, %222, %223, %224) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %227
  %227 = enum $Optional<String>, #Optional.some!enumelt, %226 : $String // user: %229
  %228 = alloc_stack $Optional<String>            // users: %235, %239, %238, %229
  store %227 to [init] %228 : $*Optional<String>  // id: %229
  %230 = begin_borrow %219 : $Optional<String>    // users: %237, %232
  %231 = alloc_stack $Optional<String>            // users: %235, %236, %232
  %232 = store_borrow %230 to %231 : $*Optional<String>
  %233 = metatype $@thin Optional<String>.Type    // user: %235
  // function_ref static Optional<A>.== infix(_:_:)
  %234 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %235
  %235 = apply %234<String>(%228, %231, %233) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %240
  dealloc_stack %231 : $*Optional<String>         // id: %236
  end_borrow %230 : $Optional<String>             // id: %237
  destroy_addr %228 : $*Optional<String>          // id: %238
  dealloc_stack %228 : $*Optional<String>         // id: %239
  %240 = struct_extract %235 : $Bool, #Bool._value // user: %241
  cond_br %240, bb3, bb4                          // id: %241

bb3:                                              // Preds: bb2
  destroy_value %219 : $Optional<String>          // id: %242
  %243 = metatype $@thick Closure.Type            // user: %247
  %244 = begin_borrow %76 : $@callee_guaranteed () -> () // users: %248, %245
  %245 = copy_value %244 : $@callee_guaranteed () -> () // user: %247
  // function_ref Closure.__allocating_init(_:)
  %246 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %247
  %247 = apply %246(%245, %243) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %250
  end_borrow %244 : $@callee_guaranteed () -> ()  // id: %248
  %249 = alloc_stack $Closure                     // users: %255, %253, %250
  store %247 to [init] %249 : $*Closure           // id: %250
  %251 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %254, %253
  // function_ref Array.append(_:)
  %252 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %253
  %253 = apply %252<Closure>(%249, %251) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %251 : $*Array<Closure>              // id: %254
  dealloc_stack %249 : $*Closure                  // id: %255
  end_borrow %218 : $Optional<String>             // id: %256
  br bb25                                         // id: %257

bb4:                                              // Preds: bb2
  destroy_value %219 : $Optional<String>          // id: %258
  %259 = copy_value %218 : $Optional<String>      // users: %282, %298, %270, %260
  debug_value %259 : $Optional<String>, let, name "$match" // id: %260
  %261 = string_literal utf8 "push1_1"            // user: %266
  %262 = integer_literal $Builtin.Word, 7         // user: %266
  %263 = integer_literal $Builtin.Int1, -1        // user: %266
  %264 = metatype $@thin String.Type              // user: %266
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %265 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %266
  %266 = apply %265(%261, %262, %263, %264) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %267
  %267 = enum $Optional<String>, #Optional.some!enumelt, %266 : $String // user: %269
  %268 = alloc_stack $Optional<String>            // users: %275, %279, %278, %269
  store %267 to [init] %268 : $*Optional<String>  // id: %269
  %270 = begin_borrow %259 : $Optional<String>    // users: %277, %272
  %271 = alloc_stack $Optional<String>            // users: %275, %276, %272
  %272 = store_borrow %270 to %271 : $*Optional<String>
  %273 = metatype $@thin Optional<String>.Type    // user: %275
  // function_ref static Optional<A>.== infix(_:_:)
  %274 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %275
  %275 = apply %274<String>(%268, %271, %273) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %280
  dealloc_stack %271 : $*Optional<String>         // id: %276
  end_borrow %270 : $Optional<String>             // id: %277
  destroy_addr %268 : $*Optional<String>          // id: %278
  dealloc_stack %268 : $*Optional<String>         // id: %279
  %280 = struct_extract %275 : $Bool, #Bool._value // user: %281
  cond_br %280, bb5, bb6                          // id: %281

bb5:                                              // Preds: bb4
  destroy_value %259 : $Optional<String>          // id: %282
  %283 = metatype $@thick Closure.Type            // user: %287
  %284 = begin_borrow %86 : $@callee_guaranteed () -> () // users: %288, %285
  %285 = copy_value %284 : $@callee_guaranteed () -> () // user: %287
  // function_ref Closure.__allocating_init(_:)
  %286 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %287
  %287 = apply %286(%285, %283) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %290
  end_borrow %284 : $@callee_guaranteed () -> ()  // id: %288
  %289 = alloc_stack $Closure                     // users: %295, %293, %290
  store %287 to [init] %289 : $*Closure           // id: %290
  %291 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %294, %293
  // function_ref Array.append(_:)
  %292 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %293
  %293 = apply %292<Closure>(%289, %291) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %291 : $*Array<Closure>              // id: %294
  dealloc_stack %289 : $*Closure                  // id: %295
  end_borrow %218 : $Optional<String>             // id: %296
  br bb25                                         // id: %297

bb6:                                              // Preds: bb4
  destroy_value %259 : $Optional<String>          // id: %298
  %299 = copy_value %218 : $Optional<String>      // users: %322, %338, %310, %300
  debug_value %299 : $Optional<String>, let, name "$match" // id: %300
  %301 = string_literal utf8 "push2"              // user: %306
  %302 = integer_literal $Builtin.Word, 5         // user: %306
  %303 = integer_literal $Builtin.Int1, -1        // user: %306
  %304 = metatype $@thin String.Type              // user: %306
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %305 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %306
  %306 = apply %305(%301, %302, %303, %304) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %307
  %307 = enum $Optional<String>, #Optional.some!enumelt, %306 : $String // user: %309
  %308 = alloc_stack $Optional<String>            // users: %315, %319, %318, %309
  store %307 to [init] %308 : $*Optional<String>  // id: %309
  %310 = begin_borrow %299 : $Optional<String>    // users: %317, %312
  %311 = alloc_stack $Optional<String>            // users: %315, %316, %312
  %312 = store_borrow %310 to %311 : $*Optional<String>
  %313 = metatype $@thin Optional<String>.Type    // user: %315
  // function_ref static Optional<A>.== infix(_:_:)
  %314 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %315
  %315 = apply %314<String>(%308, %311, %313) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %320
  dealloc_stack %311 : $*Optional<String>         // id: %316
  end_borrow %310 : $Optional<String>             // id: %317
  destroy_addr %308 : $*Optional<String>          // id: %318
  dealloc_stack %308 : $*Optional<String>         // id: %319
  %320 = struct_extract %315 : $Bool, #Bool._value // user: %321
  cond_br %320, bb7, bb8                          // id: %321

bb7:                                              // Preds: bb6
  destroy_value %299 : $Optional<String>          // id: %322
  %323 = metatype $@thick Closure.Type            // user: %327
  %324 = begin_borrow %100 : $@callee_guaranteed () -> () // users: %328, %325
  %325 = copy_value %324 : $@callee_guaranteed () -> () // user: %327
  // function_ref Closure.__allocating_init(_:)
  %326 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %327
  %327 = apply %326(%325, %323) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %330
  end_borrow %324 : $@callee_guaranteed () -> ()  // id: %328
  %329 = alloc_stack $Closure                     // users: %335, %333, %330
  store %327 to [init] %329 : $*Closure           // id: %330
  %331 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %334, %333
  // function_ref Array.append(_:)
  %332 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %333
  %333 = apply %332<Closure>(%329, %331) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %331 : $*Array<Closure>              // id: %334
  dealloc_stack %329 : $*Closure                  // id: %335
  end_borrow %218 : $Optional<String>             // id: %336
  br bb25                                         // id: %337

bb8:                                              // Preds: bb6
  destroy_value %299 : $Optional<String>          // id: %338
  %339 = copy_value %218 : $Optional<String>      // users: %362, %378, %350, %340
  debug_value %339 : $Optional<String>, let, name "$match" // id: %340
  %341 = string_literal utf8 "push2_1"            // user: %346
  %342 = integer_literal $Builtin.Word, 7         // user: %346
  %343 = integer_literal $Builtin.Int1, -1        // user: %346
  %344 = metatype $@thin String.Type              // user: %346
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %345 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %346
  %346 = apply %345(%341, %342, %343, %344) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %347
  %347 = enum $Optional<String>, #Optional.some!enumelt, %346 : $String // user: %349
  %348 = alloc_stack $Optional<String>            // users: %355, %359, %358, %349
  store %347 to [init] %348 : $*Optional<String>  // id: %349
  %350 = begin_borrow %339 : $Optional<String>    // users: %357, %352
  %351 = alloc_stack $Optional<String>            // users: %355, %356, %352
  %352 = store_borrow %350 to %351 : $*Optional<String>
  %353 = metatype $@thin Optional<String>.Type    // user: %355
  // function_ref static Optional<A>.== infix(_:_:)
  %354 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %355
  %355 = apply %354<String>(%348, %351, %353) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %360
  dealloc_stack %351 : $*Optional<String>         // id: %356
  end_borrow %350 : $Optional<String>             // id: %357
  destroy_addr %348 : $*Optional<String>          // id: %358
  dealloc_stack %348 : $*Optional<String>         // id: %359
  %360 = struct_extract %355 : $Bool, #Bool._value // user: %361
  cond_br %360, bb9, bb10                         // id: %361

bb9:                                              // Preds: bb8
  destroy_value %339 : $Optional<String>          // id: %362
  %363 = metatype $@thick Closure.Type            // user: %367
  %364 = begin_borrow %116 : $@callee_guaranteed () -> () // users: %368, %365
  %365 = copy_value %364 : $@callee_guaranteed () -> () // user: %367
  // function_ref Closure.__allocating_init(_:)
  %366 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %367
  %367 = apply %366(%365, %363) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %370
  end_borrow %364 : $@callee_guaranteed () -> ()  // id: %368
  %369 = alloc_stack $Closure                     // users: %375, %373, %370
  store %367 to [init] %369 : $*Closure           // id: %370
  %371 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %374, %373
  // function_ref Array.append(_:)
  %372 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %373
  %373 = apply %372<Closure>(%369, %371) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %371 : $*Array<Closure>              // id: %374
  dealloc_stack %369 : $*Closure                  // id: %375
  end_borrow %218 : $Optional<String>             // id: %376
  br bb25                                         // id: %377

bb10:                                             // Preds: bb8
  destroy_value %339 : $Optional<String>          // id: %378
  %379 = copy_value %218 : $Optional<String>      // users: %402, %436, %390, %380
  debug_value %379 : $Optional<String>, let, name "$match" // id: %380
  %381 = string_literal utf8 "pop"                // user: %386
  %382 = integer_literal $Builtin.Word, 3         // user: %386
  %383 = integer_literal $Builtin.Int1, -1        // user: %386
  %384 = metatype $@thin String.Type              // user: %386
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %385 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %386
  %386 = apply %385(%381, %382, %383, %384) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %387
  %387 = enum $Optional<String>, #Optional.some!enumelt, %386 : $String // user: %389
  %388 = alloc_stack $Optional<String>            // users: %395, %399, %398, %389
  store %387 to [init] %388 : $*Optional<String>  // id: %389
  %390 = begin_borrow %379 : $Optional<String>    // users: %397, %392
  %391 = alloc_stack $Optional<String>            // users: %395, %396, %392
  %392 = store_borrow %390 to %391 : $*Optional<String>
  %393 = metatype $@thin Optional<String>.Type    // user: %395
  // function_ref static Optional<A>.== infix(_:_:)
  %394 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %395
  %395 = apply %394<String>(%388, %391, %393) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %400
  dealloc_stack %391 : $*Optional<String>         // id: %396
  end_borrow %390 : $Optional<String>             // id: %397
  destroy_addr %388 : $*Optional<String>          // id: %398
  dealloc_stack %388 : $*Optional<String>         // id: %399
  %400 = struct_extract %395 : $Bool, #Bool._value // user: %401
  cond_br %400, bb11, bb14                        // id: %401

bb11:                                             // Preds: bb10
  destroy_value %379 : $Optional<String>          // id: %402
  %403 = begin_access [read] [static] %143 : $*Array<Closure> // users: %405, %404
  %404 = load [copy] %403 : $*Array<Closure>      // users: %416, %406
  end_access %403 : $*Array<Closure>              // id: %405
  %406 = begin_borrow %404 : $Array<Closure>      // users: %415, %408
  %407 = alloc_stack $Array<Closure>              // users: %422, %409, %408
  %408 = store_borrow %406 to %407 : $*Array<Closure>
  %409 = load_borrow %407 : $*Array<Closure>      // users: %421, %411
  %410 = alloc_stack $Array<Closure>              // users: %414, %413, %411
  %411 = store_borrow %409 to %410 : $*Array<Closure>
  // function_ref Collection.isEmpty.getter
  %412 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %413
  %413 = apply %412<[Closure]>(%410) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %417
  dealloc_stack %410 : $*Array<Closure>           // id: %414
  end_borrow %406 : $Array<Closure>               // id: %415
  destroy_value %404 : $Array<Closure>            // id: %416
  %417 = struct_extract %413 : $Bool, #Bool._value // user: %419
  %418 = integer_literal $Builtin.Int1, -1        // user: %419
  %419 = builtin "xor_Int1"(%417 : $Builtin.Int1, %418 : $Builtin.Int1) : $Builtin.Int1 // user: %420
  %420 = struct $Bool (%419 : $Builtin.Int1)      // user: %423
  end_borrow %409 : $Array<Closure>               // id: %421
  dealloc_stack %407 : $*Array<Closure>           // id: %422
  %423 = struct_extract %420 : $Bool, #Bool._value // user: %424
  cond_br %423, bb12, bb13                        // id: %424

bb12:                                             // Preds: bb11
  %425 = alloc_stack $Closure                     // users: %432, %430, %428
  %426 = begin_access [modify] [static] %143 : $*Array<Closure> // users: %429, %428
  // function_ref RangeReplaceableCollection<>.removeLast()
  %427 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %428
  %428 = apply %427<[Closure]>(%425, %426) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %426 : $*Array<Closure>              // id: %429
  %430 = load [take] %425 : $*Closure             // user: %431
  destroy_value %430 : $Closure                   // id: %431
  dealloc_stack %425 : $*Closure                  // id: %432
  end_borrow %218 : $Optional<String>             // id: %433
  br bb25                                         // id: %434

bb13:                                             // Preds: bb11
  br bb15                                         // id: %435

bb14:                                             // Preds: bb10
  destroy_value %379 : $Optional<String>          // id: %436
  br bb15                                         // id: %437

bb15:                                             // Preds: bb13 bb14
  %438 = copy_value %218 : $Optional<String>      // users: %461, %482, %449, %439
  debug_value %438 : $Optional<String>, let, name "$match" // id: %439
  %440 = string_literal utf8 "inc"                // user: %445
  %441 = integer_literal $Builtin.Word, 3         // user: %445
  %442 = integer_literal $Builtin.Int1, -1        // user: %445
  %443 = metatype $@thin String.Type              // user: %445
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %444 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %445
  %445 = apply %444(%440, %441, %442, %443) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %446
  %446 = enum $Optional<String>, #Optional.some!enumelt, %445 : $String // user: %448
  %447 = alloc_stack $Optional<String>            // users: %454, %458, %457, %448
  store %446 to [init] %447 : $*Optional<String>  // id: %448
  %449 = begin_borrow %438 : $Optional<String>    // users: %456, %451
  %450 = alloc_stack $Optional<String>            // users: %454, %455, %451
  %451 = store_borrow %449 to %450 : $*Optional<String>
  %452 = metatype $@thin Optional<String>.Type    // user: %454
  // function_ref static Optional<A>.== infix(_:_:)
  %453 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %454
  %454 = apply %453<String>(%447, %450, %452) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %459
  dealloc_stack %450 : $*Optional<String>         // id: %455
  end_borrow %449 : $Optional<String>             // id: %456
  destroy_addr %447 : $*Optional<String>          // id: %457
  dealloc_stack %447 : $*Optional<String>         // id: %458
  %459 = struct_extract %454 : $Bool, #Bool._value // user: %460
  cond_br %459, bb16, bb17                        // id: %460

bb16:                                             // Preds: bb15
  destroy_value %438 : $Optional<String>          // id: %461
  %462 = integer_literal $Builtin.IntLiteral, 1   // user: %463
  %463 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%462 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %464
  (%464, %465) = destructure_tuple %463 : $(Builtin.Int64, Builtin.Int1) // user: %466
  %466 = struct $Int (%464 : $Builtin.Int64)      // user: %470
  %467 = begin_access [modify] [dynamic] %63 : $*Int // users: %477, %468, %479
  %468 = struct_element_addr %467 : $*Int, #Int._value // user: %469
  %469 = load [trivial] %468 : $*Builtin.Int64    // user: %472
  %470 = struct_extract %466 : $Int, #Int._value  // user: %472
  %471 = integer_literal $Builtin.Int1, -1        // user: %472
  %472 = builtin "sadd_with_overflow_Int64"(%469 : $Builtin.Int64, %470 : $Builtin.Int64, %471 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %473
  (%473, %474) = destructure_tuple %472 : $(Builtin.Int64, Builtin.Int1) // users: %476, %475
  cond_fail %474 : $Builtin.Int1, "arithmetic overflow" // id: %475
  %476 = struct $Int (%473 : $Builtin.Int64)      // user: %477
  store %476 to [trivial] %467 : $*Int            // id: %477
  %478 = tuple ()
  end_access %467 : $*Int                         // id: %479
  end_borrow %218 : $Optional<String>             // id: %480
  br bb25                                         // id: %481

bb17:                                             // Preds: bb15
  destroy_value %438 : $Optional<String>          // id: %482
  %483 = copy_value %218 : $Optional<String>      // users: %506, %550, %494, %484
  debug_value %483 : $Optional<String>, let, name "$match" // id: %484
  %485 = string_literal utf8 "exec"               // user: %490
  %486 = integer_literal $Builtin.Word, 4         // user: %490
  %487 = integer_literal $Builtin.Int1, -1        // user: %490
  %488 = metatype $@thin String.Type              // user: %490
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %489 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %490
  %490 = apply %489(%485, %486, %487, %488) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %491
  %491 = enum $Optional<String>, #Optional.some!enumelt, %490 : $String // user: %493
  %492 = alloc_stack $Optional<String>            // users: %499, %503, %502, %493
  store %491 to [init] %492 : $*Optional<String>  // id: %493
  %494 = begin_borrow %483 : $Optional<String>    // users: %501, %496
  %495 = alloc_stack $Optional<String>            // users: %499, %500, %496
  %496 = store_borrow %494 to %495 : $*Optional<String>
  %497 = metatype $@thin Optional<String>.Type    // user: %499
  // function_ref static Optional<A>.== infix(_:_:)
  %498 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %499
  %499 = apply %498<String>(%492, %495, %497) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %504
  dealloc_stack %495 : $*Optional<String>         // id: %500
  end_borrow %494 : $Optional<String>             // id: %501
  destroy_addr %492 : $*Optional<String>          // id: %502
  dealloc_stack %492 : $*Optional<String>         // id: %503
  %504 = struct_extract %499 : $Bool, #Bool._value // user: %505
  cond_br %504, bb18, bb22                        // id: %505

bb18:                                             // Preds: bb17
  destroy_value %483 : $Optional<String>          // id: %506
  %507 = begin_access [read] [static] %143 : $*Array<Closure> // users: %509, %508
  %508 = load [copy] %507 : $*Array<Closure>      // users: %522, %510
  end_access %507 : $*Array<Closure>              // id: %509
  %510 = begin_borrow %508 : $Array<Closure>      // users: %521, %512
  %511 = alloc_stack $Array<Closure>              // users: %540, %547, %513, %512
  %512 = store_borrow %510 to %511 : $*Array<Closure>
  %513 = load_borrow %511 : $*Array<Closure>      // users: %539, %546, %516
  %514 = alloc_stack $Optional<Closure>           // users: %538, %545, %520, %518
  %515 = alloc_stack $Array<Closure>              // users: %519, %518, %516
  %516 = store_borrow %513 to %515 : $*Array<Closure>
  // function_ref BidirectionalCollection.last.getter
  %517 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %518
  %518 = apply %517<[Closure]>(%514, %515) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %515 : $*Array<Closure>           // id: %519
  %520 = load [take] %514 : $*Optional<Closure>   // user: %523
  end_borrow %510 : $Array<Closure>               // id: %521
  destroy_value %508 : $Array<Closure>            // id: %522
  switch_enum %520 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %523

// %524                                           // users: %531, %525
bb19(%524 : @owned $Closure):                     // Preds: bb18
  %525 = begin_borrow %524 : $Closure             // users: %530, %526
  %526 = ref_element_addr %525 : $Closure, #Closure.closure // user: %527
  %527 = begin_access [read] [dynamic] %526 : $*@callee_guaranteed () -> () // users: %529, %528
  %528 = load [copy] %527 : $*@callee_guaranteed () -> () // users: %537, %532
  end_access %527 : $*@callee_guaranteed () -> () // id: %529
  end_borrow %525 : $Closure                      // id: %530
  destroy_value %524 : $Closure                   // id: %531
  %532 = begin_borrow %528 : $@callee_guaranteed () -> () // users: %534, %533
  %533 = apply %532() : $@callee_guaranteed () -> ()
  end_borrow %532 : $@callee_guaranteed () -> ()  // id: %534
  %535 = tuple ()                                 // user: %536
  %536 = enum $Optional<()>, #Optional.some!enumelt, %535 : $() // user: %541
  destroy_value %528 : $@callee_guaranteed () -> () // id: %537
  dealloc_stack %514 : $*Optional<Closure>        // id: %538
  end_borrow %513 : $Array<Closure>               // id: %539
  dealloc_stack %511 : $*Array<Closure>           // id: %540
  br bb20(%536 : $Optional<()>)                   // id: %541

bb20(%542 : $Optional<()>):                       // Preds: bb21 bb19
  end_borrow %218 : $Optional<String>             // id: %543
  br bb25                                         // id: %544

bb21:                                             // Preds: bb18
  dealloc_stack %514 : $*Optional<Closure>        // id: %545
  end_borrow %513 : $Array<Closure>               // id: %546
  dealloc_stack %511 : $*Array<Closure>           // id: %547
  %548 = enum $Optional<()>, #Optional.none!enumelt // user: %549
  br bb20(%548 : $Optional<()>)                   // id: %549

bb22:                                             // Preds: bb17
  destroy_value %483 : $Optional<String>          // id: %550
  %551 = copy_value %218 : $Optional<String>      // users: %574, %582, %562, %552
  debug_value %551 : $Optional<String>, let, name "$match" // id: %552
  %553 = string_literal utf8 "exit"               // user: %558
  %554 = integer_literal $Builtin.Word, 4         // user: %558
  %555 = integer_literal $Builtin.Int1, -1        // user: %558
  %556 = metatype $@thin String.Type              // user: %558
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %557 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %558
  %558 = apply %557(%553, %554, %555, %556) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %559
  %559 = enum $Optional<String>, #Optional.some!enumelt, %558 : $String // user: %561
  %560 = alloc_stack $Optional<String>            // users: %567, %571, %570, %561
  store %559 to [init] %560 : $*Optional<String>  // id: %561
  %562 = begin_borrow %551 : $Optional<String>    // users: %569, %564
  %563 = alloc_stack $Optional<String>            // users: %567, %568, %564
  %564 = store_borrow %562 to %563 : $*Optional<String>
  %565 = metatype $@thin Optional<String>.Type    // user: %567
  // function_ref static Optional<A>.== infix(_:_:)
  %566 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %567
  %567 = apply %566<String>(%560, %563, %565) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %572
  dealloc_stack %563 : $*Optional<String>         // id: %568
  end_borrow %562 : $Optional<String>             // id: %569
  destroy_addr %560 : $*Optional<String>          // id: %570
  dealloc_stack %560 : $*Optional<String>         // id: %571
  %572 = struct_extract %567 : $Bool, #Bool._value // user: %573
  cond_br %572, bb23, bb24                        // id: %573

bb23:                                             // Preds: bb22
  destroy_value %551 : $Optional<String>          // id: %574
  %575 = integer_literal $Builtin.Int1, 0         // user: %576
  %576 = struct $Bool (%575 : $Builtin.Int1)      // user: %578
  %577 = begin_access [modify] [static] %180 : $*Bool // users: %578, %579
  store %576 to [trivial] %577 : $*Bool           // id: %578
  end_access %577 : $*Bool                        // id: %579
  end_borrow %218 : $Optional<String>             // id: %580
  br bb25                                         // id: %581

bb24:                                             // Preds: bb22
  destroy_value %551 : $Optional<String>          // id: %582
  %583 = integer_literal $Builtin.Word, 1         // user: %585
  // function_ref _allocateUninitializedArray<A>(_:)
  %584 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %585
  %585 = apply %584<Any>(%583) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %586
  (%586, %587) = destructure_tuple %585 : $(Array<Any>, Builtin.RawPointer) // users: %605, %602, %588
  %588 = pointer_to_address %587 : $Builtin.RawPointer to [strict] $*Any // user: %595
  %589 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %594
  %590 = integer_literal $Builtin.Word, 44        // user: %594
  %591 = integer_literal $Builtin.Int1, 0         // user: %594
  %592 = metatype $@thin String.Type              // user: %594
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %593 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %594
  %594 = apply %593(%589, %590, %591, %592) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %596
  %595 = init_existential_addr %588 : $*Any, $String // user: %596
  store %594 to [init] %595 : $*String            // id: %596
  // function_ref default argument 1 of print(_:separator:terminator:)
  %597 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %598
  %598 = apply %597() : $@convention(thin) () -> @owned String // users: %604, %602
  // function_ref default argument 2 of print(_:separator:terminator:)
  %599 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %600
  %600 = apply %599() : $@convention(thin) () -> @owned String // users: %603, %602
  // function_ref print(_:separator:terminator:)
  %601 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %602
  %602 = apply %601(%586, %598, %600) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %600 : $String                    // id: %603
  destroy_value %598 : $String                    // id: %604
  destroy_value %586 : $Array<Any>                // id: %605
  end_borrow %218 : $Optional<String>             // id: %606
  br bb25                                         // id: %607

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  destroy_value %216 : $Optional<String>          // id: %608
  br bb1                                          // id: %609

bb26:                                             // Preds: bb1
  %610 = integer_literal $Builtin.Word, 1         // user: %612
  // function_ref _allocateUninitializedArray<A>(_:)
  %611 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %612
  %612 = apply %611<Any>(%610) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %613
  (%613, %614) = destructure_tuple %612 : $(Array<Any>, Builtin.RawPointer) // users: %632, %629, %615
  %615 = pointer_to_address %614 : $Builtin.RawPointer to [strict] $*Any // user: %622
  %616 = string_literal utf8 "===== will end"     // user: %621
  %617 = integer_literal $Builtin.Word, 14        // user: %621
  %618 = integer_literal $Builtin.Int1, -1        // user: %621
  %619 = metatype $@thin String.Type              // user: %621
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %620 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %621
  %621 = apply %620(%616, %617, %618, %619) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %623
  %622 = init_existential_addr %615 : $*Any, $String // user: %623
  store %621 to [init] %622 : $*String            // id: %623
  // function_ref default argument 1 of print(_:separator:terminator:)
  %624 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %625
  %625 = apply %624() : $@convention(thin) () -> @owned String // users: %631, %629
  // function_ref default argument 2 of print(_:separator:terminator:)
  %626 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %627
  %627 = apply %626() : $@convention(thin) () -> @owned String // users: %630, %629
  // function_ref print(_:separator:terminator:)
  %628 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %629
  %629 = apply %628(%613, %625, %627) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %627 : $String                    // id: %630
  destroy_value %625 : $String                    // id: %631
  destroy_value %613 : $Array<Any>                // id: %632
  dealloc_stack %180 : $*Bool                     // id: %633
  destroy_addr %143 : $*Array<Closure>            // id: %634
  dealloc_stack %143 : $*Array<Closure>           // id: %635
  destroy_value %116 : $@callee_guaranteed () -> () // id: %636
  destroy_value %100 : $@callee_guaranteed () -> () // id: %637
  destroy_value %86 : $@callee_guaranteed () -> () // id: %638
  destroy_value %76 : $@callee_guaranteed () -> () // id: %639
  destroy_value %62 : ${ var Int }                // id: %640
  destroy_value %14 : $Number                     // id: %641
  destroy_value %5 : $Empty                       // id: %642
  destroy_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %643
  %644 = tuple ()                                 // user: %645
  return %644 : $()                               // id: %645
} // end sil function '$s4file3fooyyF'

// closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () {
// %0 "name"                                      // users: %3, %1
bb0(%0 : @guaranteed $String):
  debug_value %0 : $String, let, name "name", argno 1 // id: %1
  // function_ref closure #1 in closure #1 in foo()
  %2 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %4
  %3 = copy_value %0 : $String                    // user: %4
  %4 = partial_apply [callee_guaranteed] %2(%3) : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %5
  return %4 : $@callee_guaranteed (Int, Int, Int) -> () // id: %5
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_'

// closure #1 in closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %59, %4
// %1 "weak"                                      // users: %77, %5
// %2 "unowned"                                   // users: %95, %6
// %3 "name"                                      // users: %41, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : @guaranteed $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %11
  (%11, %12) = destructure_tuple %10 : $(Array<Any>, Builtin.RawPointer) // users: %128, %125, %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %118
  %14 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %114, %113, %28, %35, %42, %53, %60, %71, %78, %89, %96, %107, %112
  %15 = integer_literal $Builtin.IntLiteral, 39   // user: %16
  %16 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%15 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %17
  (%17, %18) = destructure_tuple %16 : $(Builtin.Int64, Builtin.Int1) // user: %19
  %19 = struct $Int (%17 : $Builtin.Int64)        // user: %27
  %20 = integer_literal $Builtin.IntLiteral, 4    // user: %21
  %21 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%20 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %22
  (%22, %23) = destructure_tuple %21 : $(Builtin.Int64, Builtin.Int1) // user: %24
  %24 = struct $Int (%22 : $Builtin.Int64)        // user: %27
  %25 = metatype $@thin DefaultStringInterpolation.Type // user: %27
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %26 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %27
  %27 = apply %26(%19, %24, %25) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %28
  store %27 to [init] %14 : $*DefaultStringInterpolation // id: %28
  %29 = string_literal utf8 "Name: "              // user: %34
  %30 = integer_literal $Builtin.Word, 6          // user: %34
  %31 = integer_literal $Builtin.Int1, -1         // user: %34
  %32 = metatype $@thin String.Type               // user: %34
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %33 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %34
  %34 = apply %33(%29, %30, %31, %32) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %39, %37
  %35 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %38, %37
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %36 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %37
  %37 = apply %36(%34, %35) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %35 : $*DefaultStringInterpolation   // id: %38
  destroy_value %34 : $String                     // id: %39
  %40 = alloc_stack $String                       // users: %46, %44, %41
  %41 = store_borrow %3 to %40 : $*String
  %42 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %45, %44
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %43 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %44
  %44 = apply %43<String>(%40, %42) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %42 : $*DefaultStringInterpolation   // id: %45
  dealloc_stack %40 : $*String                    // id: %46
  %47 = string_literal utf8 "; Strong: ("         // user: %52
  %48 = integer_literal $Builtin.Word, 11         // user: %52
  %49 = integer_literal $Builtin.Int1, -1         // user: %52
  %50 = metatype $@thin String.Type               // user: %52
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %51 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %52
  %52 = apply %51(%47, %48, %49, %50) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %57, %55
  %53 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %56, %55
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %54 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %55
  %55 = apply %54(%52, %53) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %53 : $*DefaultStringInterpolation   // id: %56
  destroy_value %52 : $String                     // id: %57
  %58 = alloc_stack $Int                          // users: %64, %62, %59
  store %0 to [trivial] %58 : $*Int               // id: %59
  %60 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %63, %62
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %61 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %62
  %62 = apply %61<Int>(%58, %60) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %60 : $*DefaultStringInterpolation   // id: %63
  dealloc_stack %58 : $*Int                       // id: %64
  %65 = string_literal utf8 "); Weak: ("          // user: %70
  %66 = integer_literal $Builtin.Word, 10         // user: %70
  %67 = integer_literal $Builtin.Int1, -1         // user: %70
  %68 = metatype $@thin String.Type               // user: %70
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %69 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %70
  %70 = apply %69(%65, %66, %67, %68) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %75, %73
  %71 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %74, %73
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %72 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %73
  %73 = apply %72(%70, %71) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %71 : $*DefaultStringInterpolation   // id: %74
  destroy_value %70 : $String                     // id: %75
  %76 = alloc_stack $Int                          // users: %82, %80, %77
  store %1 to [trivial] %76 : $*Int               // id: %77
  %78 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %81, %80
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %79 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %80
  %80 = apply %79<Int>(%76, %78) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %78 : $*DefaultStringInterpolation   // id: %81
  dealloc_stack %76 : $*Int                       // id: %82
  %83 = string_literal utf8 "); Unowned("         // user: %88
  %84 = integer_literal $Builtin.Word, 11         // user: %88
  %85 = integer_literal $Builtin.Int1, -1         // user: %88
  %86 = metatype $@thin String.Type               // user: %88
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %87 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %88
  %88 = apply %87(%83, %84, %85, %86) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %93, %91
  %89 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %92, %91
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %90 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %91
  %91 = apply %90(%88, %89) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %89 : $*DefaultStringInterpolation   // id: %92
  destroy_value %88 : $String                     // id: %93
  %94 = alloc_stack $Int                          // users: %100, %98, %95
  store %2 to [trivial] %94 : $*Int               // id: %95
  %96 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %99, %98
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %97 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %98
  %98 = apply %97<Int>(%94, %96) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %96 : $*DefaultStringInterpolation   // id: %99
  dealloc_stack %94 : $*Int                       // id: %100
  %101 = string_literal utf8 ")"                  // user: %106
  %102 = integer_literal $Builtin.Word, 1         // user: %106
  %103 = integer_literal $Builtin.Int1, -1        // user: %106
  %104 = metatype $@thin String.Type              // user: %106
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %105 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %106
  %106 = apply %105(%101, %102, %103, %104) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %111, %109
  %107 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %110, %109
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %108 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %109
  %109 = apply %108(%106, %107) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %107 : $*DefaultStringInterpolation  // id: %110
  destroy_value %106 : $String                    // id: %111
  %112 = load [copy] %14 : $*DefaultStringInterpolation // user: %117
  destroy_addr %14 : $*DefaultStringInterpolation // id: %113
  dealloc_stack %14 : $*DefaultStringInterpolation // id: %114
  %115 = metatype $@thin String.Type              // user: %117
  // function_ref String.init(stringInterpolation:)
  %116 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %117
  %117 = apply %116(%112, %115) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %119
  %118 = init_existential_addr %13 : $*Any, $String // user: %119
  store %117 to [init] %118 : $*String            // id: %119
  // function_ref default argument 1 of print(_:separator:terminator:)
  %120 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %121
  %121 = apply %120() : $@convention(thin) () -> @owned String // users: %127, %125
  // function_ref default argument 2 of print(_:separator:terminator:)
  %122 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %123
  %123 = apply %122() : $@convention(thin) () -> @owned String // users: %126, %125
  // function_ref print(_:separator:terminator:)
  %124 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %125
  %125 = apply %124(%11, %121, %123) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %123 : $String                    // id: %126
  destroy_value %121 : $String                    // id: %127
  destroy_value %11 : $Array<Any>                 // id: %128
  %129 = tuple ()                                 // user: %130
  return %129 : $()                               // id: %130
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] [_semantics "array.uninitialized_intrinsic"] [canonical] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer)

// Int.init(_builtinIntegerLiteral:)
sil public_external [transparent] [serialized] [canonical] [ossa] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int {
// %0                                             // user: %2
bb0(%0 : $Builtin.IntLiteral, %1 : $@thin Int.Type):
  %2 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%0 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %3
  (%3, %4) = destructure_tuple %2 : $(Builtin.Int64, Builtin.Int1) // user: %5
  %5 = struct $Int (%3 : $Builtin.Int64)          // user: %6
  return %5 : $Int                                // id: %6
} // end sil function '$sSi22_builtinIntegerLiteralSiBI_tcfC'

// DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
sil [serialized] [canonical] @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] [canonical] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// DefaultStringInterpolation.appendLiteral(_:)
sil [serialized] [canonical] @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] [canonical] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] [canonical] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// String.init(stringInterpolation:)
sil [serialized] [readonly] [canonical] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String

// default argument 1 of print(_:separator:terminator:)
sil shared_external [serialized] [canonical] @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 " "                    // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA0_'

// default argument 2 of print(_:separator:terminator:)
sil shared_external [serialized] [canonical] @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 "\n"                   // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA1_'

// print(_:separator:terminator:)
sil @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()

// closure #2 in foo()
sil private [ossa] @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () {
// %0 "number"                                    // users: %7, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %1
  %2 = integer_literal $Builtin.IntLiteral, 1     // user: %3
  %3 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%2 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %4
  (%4, %5) = destructure_tuple %3 : $(Builtin.Int64, Builtin.Int1) // user: %6
  %6 = struct $Int (%4 : $Builtin.Int64)          // user: %11
  %7 = ref_element_addr %0 : $Number, #Number.number // user: %8
  %8 = begin_access [modify] [dynamic] %7 : $*Int // users: %18, %9, %20
  %9 = struct_element_addr %8 : $*Int, #Int._value // user: %10
  %10 = load [trivial] %9 : $*Builtin.Int64       // user: %13
  %11 = struct_extract %6 : $Int, #Int._value     // user: %13
  %12 = integer_literal $Builtin.Int1, -1         // user: %13
  %13 = builtin "sadd_with_overflow_Int64"(%10 : $Builtin.Int64, %11 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %14
  (%14, %15) = destructure_tuple %13 : $(Builtin.Int64, Builtin.Int1) // users: %17, %16
  cond_fail %15 : $Builtin.Int1, "arithmetic overflow" // id: %16
  %17 = struct $Int (%14 : $Builtin.Int64)        // user: %18
  store %17 to [trivial] %8 : $*Int               // id: %18
  %19 = tuple ()
  end_access %8 : $*Int                           // id: %20
  %21 = tuple ()                                  // user: %22
  return %21 : $()                                // id: %22
} // end sil function '$s4file3fooyyFyycfU0_'

// static Int.+= infix(_:_:)
sil public_external [transparent] [serialized] [canonical] [ossa] @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () {
// %0                                             // users: %14, %3
// %1                                             // user: %5
bb0(%0 : $*Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_element_addr %0 : $*Int, #Int._value // user: %4
  %4 = load [trivial] %3 : $*Builtin.Int64        // user: %7
  %5 = struct_extract %1 : $Int, #Int._value      // user: %7
  %6 = integer_literal $Builtin.Int1, -1          // user: %7
  %7 = builtin "sadd_with_overflow_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %8
  (%8, %9) = destructure_tuple %7 : $(Builtin.Int64, Builtin.Int1) // users: %13, %12
  br bb1                                          // id: %10

bb1:                                              // Preds: bb0
  br bb2                                          // id: %11

bb2:                                              // Preds: bb1
  cond_fail %9 : $Builtin.Int1, "arithmetic overflow" // id: %12
  %13 = struct $Int (%8 : $Builtin.Int64)         // user: %14
  store %13 to [trivial] %0 : $*Int               // id: %14
  %15 = tuple ()                                  // user: %16
  return %15 : $()                                // id: %16
} // end sil function '$sSi2peoiyySiz_SitFZ'

// closure #3 in foo()
sil private [ossa] @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %10, %2
// %1 "value"                                     // user: %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %56, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = integer_literal $Builtin.IntLiteral, 1     // user: %6
  %6 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%5 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %7
  (%7, %8) = destructure_tuple %6 : $(Builtin.Int64, Builtin.Int1) // user: %9
  %9 = struct $Int (%7 : $Builtin.Int64)          // user: %14
  %10 = ref_element_addr %0 : $Number, #Number.number // user: %11
  %11 = begin_access [modify] [dynamic] %10 : $*Int // users: %21, %12, %23
  %12 = struct_element_addr %11 : $*Int, #Int._value // user: %13
  %13 = load [trivial] %12 : $*Builtin.Int64      // user: %16
  %14 = struct_extract %9 : $Int, #Int._value     // user: %16
  %15 = integer_literal $Builtin.Int1, -1         // user: %16
  %16 = builtin "sadd_with_overflow_Int64"(%13 : $Builtin.Int64, %14 : $Builtin.Int64, %15 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %17
  (%17, %18) = destructure_tuple %16 : $(Builtin.Int64, Builtin.Int1) // users: %20, %19
  cond_fail %18 : $Builtin.Int1, "arithmetic overflow" // id: %19
  %20 = struct $Int (%17 : $Builtin.Int64)        // user: %21
  store %20 to [trivial] %11 : $*Int              // id: %21
  %22 = tuple ()
  end_access %11 : $*Int                          // id: %23
  %24 = integer_literal $Builtin.Word, 1          // user: %26
  // function_ref _allocateUninitializedArray<A>(_:)
  %25 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %26
  %26 = apply %25<Any>(%24) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %27
  (%27, %28) = destructure_tuple %26 : $(Array<Any>, Builtin.RawPointer) // users: %93, %90, %29
  %29 = pointer_to_address %28 : $Builtin.RawPointer to [strict] $*Any // user: %83
  %30 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %79, %78, %44, %51, %61, %72, %77
  %31 = integer_literal $Builtin.IntLiteral, 3    // user: %32
  %32 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%31 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %33
  (%33, %34) = destructure_tuple %32 : $(Builtin.Int64, Builtin.Int1) // user: %35
  %35 = struct $Int (%33 : $Builtin.Int64)        // user: %43
  %36 = integer_literal $Builtin.IntLiteral, 1    // user: %37
  %37 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%36 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %38
  (%38, %39) = destructure_tuple %37 : $(Builtin.Int64, Builtin.Int1) // user: %40
  %40 = struct $Int (%38 : $Builtin.Int64)        // user: %43
  %41 = metatype $@thin DefaultStringInterpolation.Type // user: %43
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %42 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %43
  %43 = apply %42(%35, %40, %41) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %44
  store %43 to [init] %30 : $*DefaultStringInterpolation // id: %44
  %45 = string_literal utf8 "v: "                 // user: %50
  %46 = integer_literal $Builtin.Word, 3          // user: %50
  %47 = integer_literal $Builtin.Int1, -1         // user: %50
  %48 = metatype $@thin String.Type               // user: %50
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %49 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %50
  %50 = apply %49(%45, %46, %47, %48) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %55, %53
  %51 = begin_access [modify] [static] %30 : $*DefaultStringInterpolation // users: %54, %53
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %52 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %53
  %53 = apply %52(%50, %51) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %51 : $*DefaultStringInterpolation   // id: %54
  destroy_value %50 : $String                     // id: %55
  %56 = begin_access [read] [dynamic] %3 : $*Int  // users: %58, %57
  %57 = load [trivial] %56 : $*Int                // user: %60
  end_access %56 : $*Int                          // id: %58
  %59 = alloc_stack $Int                          // users: %65, %63, %60
  store %57 to [trivial] %59 : $*Int              // id: %60
  %61 = begin_access [modify] [static] %30 : $*DefaultStringInterpolation // users: %64, %63
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %62 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %63
  %63 = apply %62<Int>(%59, %61) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %61 : $*DefaultStringInterpolation   // id: %64
  dealloc_stack %59 : $*Int                       // id: %65
  %66 = string_literal utf8 ""                    // user: %71
  %67 = integer_literal $Builtin.Word, 0          // user: %71
  %68 = integer_literal $Builtin.Int1, -1         // user: %71
  %69 = metatype $@thin String.Type               // user: %71
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %70 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %71
  %71 = apply %70(%66, %67, %68, %69) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %76, %74
  %72 = begin_access [modify] [static] %30 : $*DefaultStringInterpolation // users: %75, %74
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %73 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %74
  %74 = apply %73(%71, %72) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %72 : $*DefaultStringInterpolation   // id: %75
  destroy_value %71 : $String                     // id: %76
  %77 = load [copy] %30 : $*DefaultStringInterpolation // user: %82
  destroy_addr %30 : $*DefaultStringInterpolation // id: %78
  dealloc_stack %30 : $*DefaultStringInterpolation // id: %79
  %80 = metatype $@thin String.Type               // user: %82
  // function_ref String.init(stringInterpolation:)
  %81 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %82
  %82 = apply %81(%77, %80) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %84
  %83 = init_existential_addr %29 : $*Any, $String // user: %84
  store %82 to [init] %83 : $*String              // id: %84
  // function_ref default argument 1 of print(_:separator:terminator:)
  %85 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %86
  %86 = apply %85() : $@convention(thin) () -> @owned String // users: %92, %90
  // function_ref default argument 2 of print(_:separator:terminator:)
  %87 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %88
  %88 = apply %87() : $@convention(thin) () -> @owned String // users: %91, %90
  // function_ref print(_:separator:terminator:)
  %89 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %90
  %90 = apply %89(%27, %86, %88) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %88 : $String                     // id: %91
  destroy_value %86 : $String                     // id: %92
  destroy_value %27 : $Array<Any>                 // id: %93
  %94 = tuple ()                                  // user: %95
  return %94 : $()                                // id: %95
} // end sil function '$s4file3fooyyFyycfU1_'

// closure #4 in foo()
sil private [ossa] @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () {
// %0 "number"                                    // users: %9, %2
// %1 "empty"                                     // users: %24, %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %3
  %4 = integer_literal $Builtin.IntLiteral, 1     // user: %5
  %5 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%4 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %6
  (%6, %7) = destructure_tuple %5 : $(Builtin.Int64, Builtin.Int1) // user: %8
  %8 = struct $Int (%6 : $Builtin.Int64)          // user: %13
  %9 = ref_element_addr %0 : $Number, #Number.number // user: %10
  %10 = begin_access [modify] [dynamic] %9 : $*Int // users: %20, %11, %22
  %11 = struct_element_addr %10 : $*Int, #Int._value // user: %12
  %12 = load [trivial] %11 : $*Builtin.Int64      // user: %15
  %13 = struct_extract %8 : $Int, #Int._value     // user: %15
  %14 = integer_literal $Builtin.Int1, -1         // user: %15
  %15 = builtin "sadd_with_overflow_Int64"(%12 : $Builtin.Int64, %13 : $Builtin.Int64, %14 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %16
  (%16, %17) = destructure_tuple %15 : $(Builtin.Int64, Builtin.Int1) // users: %19, %18
  cond_fail %17 : $Builtin.Int1, "arithmetic overflow" // id: %18
  %19 = struct $Int (%16 : $Builtin.Int64)        // user: %20
  store %19 to [trivial] %10 : $*Int              // id: %20
  %21 = tuple ()
  end_access %10 : $*Int                          // id: %22
  // function_ref Empty.foo()
  %23 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %24
  %24 = apply %23(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %25 = tuple ()                                  // user: %26
  return %25 : $()                                // id: %26
} // end sil function '$s4file3fooyyFyycfU2_'

// closure #5 in foo()
sil private [ossa] @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %12, %3
// %1 "empty"                                     // users: %27, %4
// %2 "value"                                     // user: %5
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty, %2 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %60, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = integer_literal $Builtin.IntLiteral, 1     // user: %8
  %8 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%7 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %9
  (%9, %10) = destructure_tuple %8 : $(Builtin.Int64, Builtin.Int1) // user: %11
  %11 = struct $Int (%9 : $Builtin.Int64)         // user: %16
  %12 = ref_element_addr %0 : $Number, #Number.number // user: %13
  %13 = begin_access [modify] [dynamic] %12 : $*Int // users: %23, %14, %25
  %14 = struct_element_addr %13 : $*Int, #Int._value // user: %15
  %15 = load [trivial] %14 : $*Builtin.Int64      // user: %18
  %16 = struct_extract %11 : $Int, #Int._value    // user: %18
  %17 = integer_literal $Builtin.Int1, -1         // user: %18
  %18 = builtin "sadd_with_overflow_Int64"(%15 : $Builtin.Int64, %16 : $Builtin.Int64, %17 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %19
  (%19, %20) = destructure_tuple %18 : $(Builtin.Int64, Builtin.Int1) // users: %22, %21
  cond_fail %20 : $Builtin.Int1, "arithmetic overflow" // id: %21
  %22 = struct $Int (%19 : $Builtin.Int64)        // user: %23
  store %22 to [trivial] %13 : $*Int              // id: %23
  %24 = tuple ()
  end_access %13 : $*Int                          // id: %25
  // function_ref Empty.foo()
  %26 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %27
  %27 = apply %26(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %28 = integer_literal $Builtin.Word, 1          // user: %30
  // function_ref _allocateUninitializedArray<A>(_:)
  %29 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %30
  %30 = apply %29<Any>(%28) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %31
  (%31, %32) = destructure_tuple %30 : $(Array<Any>, Builtin.RawPointer) // users: %97, %94, %33
  %33 = pointer_to_address %32 : $Builtin.RawPointer to [strict] $*Any // user: %87
  %34 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %83, %82, %48, %55, %65, %76, %81
  %35 = integer_literal $Builtin.IntLiteral, 3    // user: %36
  %36 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%35 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %37
  (%37, %38) = destructure_tuple %36 : $(Builtin.Int64, Builtin.Int1) // user: %39
  %39 = struct $Int (%37 : $Builtin.Int64)        // user: %47
  %40 = integer_literal $Builtin.IntLiteral, 1    // user: %41
  %41 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%40 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %42
  (%42, %43) = destructure_tuple %41 : $(Builtin.Int64, Builtin.Int1) // user: %44
  %44 = struct $Int (%42 : $Builtin.Int64)        // user: %47
  %45 = metatype $@thin DefaultStringInterpolation.Type // user: %47
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %46 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %47
  %47 = apply %46(%39, %44, %45) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %48
  store %47 to [init] %34 : $*DefaultStringInterpolation // id: %48
  %49 = string_literal utf8 "v: "                 // user: %54
  %50 = integer_literal $Builtin.Word, 3          // user: %54
  %51 = integer_literal $Builtin.Int1, -1         // user: %54
  %52 = metatype $@thin String.Type               // user: %54
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %53 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %54
  %54 = apply %53(%49, %50, %51, %52) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %59, %57
  %55 = begin_access [modify] [static] %34 : $*DefaultStringInterpolation // users: %58, %57
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %56 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %57
  %57 = apply %56(%54, %55) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %55 : $*DefaultStringInterpolation   // id: %58
  destroy_value %54 : $String                     // id: %59
  %60 = begin_access [read] [dynamic] %5 : $*Int  // users: %62, %61
  %61 = load [trivial] %60 : $*Int                // user: %64
  end_access %60 : $*Int                          // id: %62
  %63 = alloc_stack $Int                          // users: %69, %67, %64
  store %61 to [trivial] %63 : $*Int              // id: %64
  %65 = begin_access [modify] [static] %34 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66<Int>(%63, %65) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  dealloc_stack %63 : $*Int                       // id: %69
  %70 = string_literal utf8 ""                    // user: %75
  %71 = integer_literal $Builtin.Word, 0          // user: %75
  %72 = integer_literal $Builtin.Int1, -1         // user: %75
  %73 = metatype $@thin String.Type               // user: %75
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %74 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %75
  %75 = apply %74(%70, %71, %72, %73) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %80, %78
  %76 = begin_access [modify] [static] %34 : $*DefaultStringInterpolation // users: %79, %78
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %77 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %78
  %78 = apply %77(%75, %76) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %76 : $*DefaultStringInterpolation   // id: %79
  destroy_value %75 : $String                     // id: %80
  %81 = load [copy] %34 : $*DefaultStringInterpolation // user: %86
  destroy_addr %34 : $*DefaultStringInterpolation // id: %82
  dealloc_stack %34 : $*DefaultStringInterpolation // id: %83
  %84 = metatype $@thin String.Type               // user: %86
  // function_ref String.init(stringInterpolation:)
  %85 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %86
  %86 = apply %85(%81, %84) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %88
  %87 = init_existential_addr %33 : $*Any, $String // user: %88
  store %86 to [init] %87 : $*String              // id: %88
  // function_ref default argument 1 of print(_:separator:terminator:)
  %89 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %90
  %90 = apply %89() : $@convention(thin) () -> @owned String // users: %96, %94
  // function_ref default argument 2 of print(_:separator:terminator:)
  %91 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %92
  %92 = apply %91() : $@convention(thin) () -> @owned String // users: %95, %94
  // function_ref print(_:separator:terminator:)
  %93 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %94
  %94 = apply %93(%31, %90, %92) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %92 : $String                     // id: %95
  destroy_value %90 : $String                     // id: %96
  destroy_value %31 : $Array<Any>                 // id: %97
  %98 = tuple ()                                  // user: %99
  return %98 : $()                                // id: %99
} // end sil function '$s4file3fooyyFyycfU3_'

// Array.init()
sil [serialized] [_semantics "array.init.empty"] [canonical] @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>

// Array.reserveCapacity(_:)
sil [serialized] [_semantics "array.mutate_unknown"] [canonical] @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()

// Bool.init(_builtinBooleanLiteral:)
sil public_external [transparent] [serialized] [canonical] [ossa] @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Builtin.Int1, %1 : $@thin Bool.Type):
  %2 = struct $Bool (%0 : $Builtin.Int1)          // user: %3
  return %2 : $Bool                               // id: %3
} // end sil function '$sSb22_builtinBooleanLiteralSbBi1__tcfC'

// default argument 0 of readLine(strippingNewline:)
sil shared_external [serialized] [canonical] @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool {
bb0:
  %0 = integer_literal $Builtin.Int1, -1          // user: %1
  %1 = struct $Bool (%0 : $Builtin.Int1)          // user: %2
  return %1 : $Bool                               // id: %2
} // end sil function '$ss8readLine16strippingNewlineSSSgSb_tFfA_'

// readLine(strippingNewline:)
sil @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String>

// ~= infix<A>(_:_:)
sil public_external [transparent] [serialized] [canonical] [ossa] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <T where T : Equatable> (@in_guaranteed T, @in_guaranteed T) -> Bool {
// %0                                             // user: %4
// %1                                             // user: %4
bb0(%0 : $*T, %1 : $*T):
  %2 = metatype $@thick T.Type                    // user: %4
  %3 = witness_method $T, #Equatable."==" : <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %4
  %4 = apply %3<T>(%0, %1, %2) : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %5
  return %4 : $Bool                               // id: %5
} // end sil function '$ss2teoiySbx_xtSQRzlF'

// Array.append(_:)
sil [serialized] [_semantics "array.append_element"] [canonical] @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()

// Collection.isEmpty.getter
sil [serialized] [canonical] @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool

// static Bool.! prefix(_:)
sil public_external [transparent] [serialized] [canonical] [ossa] @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Bool, %1 : $@thin Bool.Type):
  %2 = struct_extract %0 : $Bool, #Bool._value    // user: %4
  %3 = integer_literal $Builtin.Int1, -1          // user: %4
  %4 = builtin "xor_Int1"(%2 : $Builtin.Int1, %3 : $Builtin.Int1) : $Builtin.Int1 // user: %5
  %5 = struct $Bool (%4 : $Builtin.Int1)          // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sSb1nopyS2bFZ'

// RangeReplaceableCollection<>.removeLast()
sil [serialized] [canonical] @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element

// BidirectionalCollection.last.getter
sil [serialized] [canonical] @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>

// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
sil shared_external [transparent] [serialized] [thunk] [canonical] [ossa] @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thick Optional<τ_0_0>.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Optional<τ_0_0>, %1 : $*Optional<τ_0_0>, %2 : $@thick Optional<τ_0_0>.Type):
  %3 = metatype $@thin Optional<τ_0_0>.Type      // user: %5
  // function_ref static Optional<A>.== infix(_:_:)
  %4 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %5
  %5 = apply %4<τ_0_0>(%0, %1, %3) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW'

// static Optional<A>.== infix(_:_:)
sil [serialized] [canonical] @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool

sil_vtable Empty {
  #Empty.init!allocator: (Empty.Type) -> () -> Empty : @$s4file5EmptyCACycfC	// Empty.__allocating_init()
  #Empty.deinit!deallocator: @$s4file5EmptyCfD	// Empty.__deallocating_deinit
}

sil_vtable Number {
  #Number.init!allocator: (Number.Type) -> (Int) -> Number : @$s4file6NumberC6numberACSi_tcfC	// Number.__allocating_init(number:)
  #Number.deinit!deallocator: @$s4file6NumberCfD	// Number.__deallocating_deinit
}

sil_vtable Closure {
  #Closure.init!allocator: (Closure.Type) -> (@escaping () -> ()) -> Closure : @$s4file7ClosureCyACyyccfC	// Closure.__allocating_init(_:)
  #Closure.deinit!deallocator: @$s4file7ClosureCfD	// Closure.__deallocating_deinit
}

sil_witness_table public_external [serialized] <Wrapped where Wrapped : Equatable> Optional<Wrapped>: Equatable module Swift {
  method #Equatable."==": <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW	// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
  conditional_conformance (Wrapped: Equatable): dependent
}



  *** SIL function after  #200, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// main
sil [ossa] @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

  *** SIL function after  #210, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Empty.foo()
sil hidden [ossa] @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4file5EmptyC3fooyyF'

  *** SIL function after  #220, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Empty.deinit
sil hidden [ossa] @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Empty to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file5EmptyCfd'

  *** SIL function after  #230, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Empty.__deallocating_deinit
sil hidden [ossa] @$s4file5EmptyCfD : $@convention(method) (@owned Empty) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  // function_ref Empty.deinit
  %2 = function_ref @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Empty                   // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Empty                          // id: %5
  end_lifetime %0 : $Empty                        // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Empty // user: %8
  dealloc_ref %7 : $Empty                         // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file5EmptyCfD'

  *** SIL function after  #240, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Empty.init()
sil hidden [ossa] @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty {
// %0 "self"                                      // users: %2, %3, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = copy_value %0 : $Empty                     // user: %4
  destroy_value %0 : $Empty                       // id: %3
  return %2 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfc'

  *** SIL function after  #250, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Empty.__allocating_init()
sil hidden [exact_self_class] [ossa] @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty {
// %0 "$metatype"
bb0(%0 : $@thick Empty.Type):
  %1 = alloc_ref $Empty                           // user: %3
  // function_ref Empty.init()
  %2 = function_ref @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Empty) -> @owned Empty // user: %4
  return %3 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfC'

  *** SIL function after  #260, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Number.number.getter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivg : $@convention(method) (@guaranteed Number) -> Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*Int   // users: %5, %4
  %4 = load [trivial] %3 : $*Int                  // user: %6
  end_access %3 : $*Int                           // id: %5
  return %4 : $Int                                // id: %6
} // end sil function '$s4file6NumberC6numberSivg'

  *** SIL function after  #270, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Number.number.setter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivs : $@convention(method) (Int, @guaranteed Number) -> () {
// %0 "value"                                     // users: %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : @guaranteed $Number):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to [trivial] %5 : $*Int                // id: %6
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9
} // end sil function '$s4file6NumberC6numberSivs'

  *** SIL function after  #280, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Number.number.modify
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivM : $@yield_once @convention(method) (@guaranteed Number) -> @yields @inout Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*Int // users: %5, %8, %4
  yield %3 : $*Int, resume bb1, unwind bb2        // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file6NumberC6numberSivM'

  *** SIL function after  #290, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Number.init(number:)
sil hidden [ossa] @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %7, %2
// %1 "self"                                      // users: %4, %10, %11, %3
bb0(%0 : $Int, %1 : @owned $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %1 : $Number                  // users: %9, %5
  %5 = ref_element_addr %4 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %7, %8
  store %0 to [trivial] %6 : $*Int                // id: %7
  end_access %6 : $*Int                           // id: %8
  end_borrow %4 : $Number                         // id: %9
  %10 = copy_value %1 : $Number                   // user: %12
  destroy_value %1 : $Number                      // id: %11
  return %10 : $Number                            // id: %12
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

  *** SIL function after  #300, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Number.__allocating_init(number:)
sil hidden [exact_self_class] [ossa] @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number {
// %0 "number"                                    // user: %4
// %1 "$metatype"
bb0(%0 : $Int, %1 : $@thick Number.Type):
  %2 = alloc_ref $Number                          // user: %4
  // function_ref Number.init(number:)
  %3 = function_ref @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (Int, @owned Number) -> @owned Number // user: %5
  return %4 : $Number                             // id: %5
} // end sil function '$s4file6NumberC6numberACSi_tcfC'

  *** SIL function after  #310, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Number.deinit
sil hidden [ossa] @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Number to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file6NumberCfd'

  *** SIL function after  #320, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Number.__deallocating_deinit
sil hidden [ossa] @$s4file6NumberCfD : $@convention(method) (@owned Number) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  // function_ref Number.deinit
  %2 = function_ref @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Number                  // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Number                         // id: %5
  end_lifetime %0 : $Number                       // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Number // user: %8
  dealloc_ref %7 : $Number                        // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file6NumberCfD'

  *** SIL function after  #330, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Closure.closure.getter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvg : $@convention(method) (@guaranteed Closure) -> @owned @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  %4 = load [copy] %3 : $*@callee_guaranteed () -> () // user: %6
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  return %4 : $@callee_guaranteed () -> ()        // id: %6
} // end sil function '$s4file7ClosureC7closureyycvg'

  *** SIL function after  #340, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Closure.closure.setter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvs : $@convention(method) (@owned @callee_guaranteed () -> (), @guaranteed Closure) -> () {
// %0 "value"                                     // users: %11, %4, %2
// %1 "self"                                      // users: %6, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @guaranteed $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "value", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %10, %5
  %5 = copy_value %4 : $@callee_guaranteed () -> () // user: %8
  %6 = ref_element_addr %1 : $Closure, #Closure.closure // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*@callee_guaranteed () -> () // users: %8, %9
  store %5 to [assign] %7 : $*@callee_guaranteed () -> () // id: %8
  end_access %7 : $*@callee_guaranteed () -> ()   // id: %9
  end_borrow %4 : $@callee_guaranteed () -> ()    // id: %10
  destroy_value %0 : $@callee_guaranteed () -> () // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file7ClosureC7closureyycvs'

  *** SIL function after  #350, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Closure.closure.modify
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvM : $@yield_once @convention(method) (@guaranteed Closure) -> @yields @inout @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %8, %4
  yield %3 : $*@callee_guaranteed () -> (), resume bb1, unwind bb2 // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file7ClosureC7closureyycvM'

  *** SIL function after  #360, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Closure.init(_:)
sil hidden [ossa] @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %15, %5, %2
// %1 "self"                                      // users: %4, %13, %14, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @owned $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %1 : $Closure                 // users: %12, %7
  %5 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %11, %6
  %6 = copy_value %5 : $@callee_guaranteed () -> () // user: %9
  %7 = ref_element_addr %4 : $Closure, #Closure.closure // user: %8
  %8 = begin_access [modify] [dynamic] %7 : $*@callee_guaranteed () -> () // users: %9, %10
  store %6 to [init] %8 : $*@callee_guaranteed () -> () // id: %9
  end_access %8 : $*@callee_guaranteed () -> ()   // id: %10
  end_borrow %5 : $@callee_guaranteed () -> ()    // id: %11
  end_borrow %4 : $Closure                        // id: %12
  %13 = copy_value %1 : $Closure                  // user: %16
  destroy_value %1 : $Closure                     // id: %14
  destroy_value %0 : $@callee_guaranteed () -> () // id: %15
  return %13 : $Closure                           // id: %16
} // end sil function '$s4file7ClosureCyACyyccfc'

  *** SIL function after  #370, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Closure.__allocating_init(_:)
sil hidden [exact_self_class] [ossa] @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure {
// %0 "block"                                     // user: %4
// %1 "$metatype"
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : $@thick Closure.Type):
  %2 = alloc_ref $Closure                         // user: %4
  // function_ref Closure.init(_:)
  %3 = function_ref @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %5
  return %4 : $Closure                            // id: %5
} // end sil function '$s4file7ClosureCyACyyccfC'

  *** SIL function after  #380, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Closure.deinit
sil hidden [ossa] @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %6, %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [deinit] [static] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  destroy_addr %3 : $*@callee_guaranteed () -> () // id: %4
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = unchecked_ref_cast %0 : $Closure to $Builtin.NativeObject // user: %7
  %7 = unchecked_ownership_conversion %6 : $Builtin.NativeObject, @guaranteed to @owned // user: %8
  return %7 : $Builtin.NativeObject               // id: %8
} // end sil function '$s4file7ClosureCfd'

  *** SIL function after  #390, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Closure.__deallocating_deinit
sil hidden [ossa] @$s4file7ClosureCfD : $@convention(method) (@owned Closure) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  // function_ref Closure.deinit
  %2 = function_ref @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Closure                 // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Closure                        // id: %5
  end_lifetime %0 : $Closure                      // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Closure // user: %8
  dealloc_ref %7 : $Closure                       // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file7ClosureCfD'

  *** SIL function after  #400, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// default argument 1 of print(_:separator:terminator:)
sil shared_external [serialized] [canonical] @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 " "                    // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA0_'

  *** SIL function after  #410, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// default argument 2 of print(_:separator:terminator:)
sil shared_external [serialized] [canonical] @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 "\n"                   // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA1_'

  *** SIL function after  #420, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// default argument 0 of readLine(strippingNewline:)
sil shared_external [serialized] [canonical] @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool {
bb0:
  %0 = integer_literal $Builtin.Int1, -1          // user: %1
  %1 = struct $Bool (%0 : $Builtin.Int1)          // user: %2
  return %1 : $Bool                               // id: %2
} // end sil function '$ss8readLine16strippingNewlineSSSgSb_tFfA_'

  *** SIL function after  #427, stage Guaranteed Passes, pass 15: DiagnosticConstantPropagation (diagnostic-constant-propagation)
// foo()
sil hidden [ossa] @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %627, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %626, %102, %87, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %11
  %8 = integer_literal $Builtin.Int64, 0          // user: %9
  %9 = struct $Int (%8 : $Builtin.Int64)          // user: %11
  // function_ref Number.__allocating_init(number:)
  %10 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %11
  %11 = apply %10(%9, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %625, %98, %83, %73, %64, %12
  debug_value %11 : $Number, let, name "number"   // id: %12
  %13 = integer_literal $Builtin.Word, 1          // user: %15
  // function_ref _allocateUninitializedArray<A>(_:)
  %14 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %15
  %15 = apply %14<Any>(%13) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %16
  (%16, %17) = destructure_tuple %15 : $(Array<Any>, Builtin.RawPointer) // users: %35, %32, %18
  %18 = pointer_to_address %17 : $Builtin.RawPointer to [strict] $*Any // user: %25
  %19 = string_literal utf8 "===== Did init"      // user: %24
  %20 = integer_literal $Builtin.Word, 14         // user: %24
  %21 = integer_literal $Builtin.Int1, -1         // user: %24
  %22 = metatype $@thin String.Type               // user: %24
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %23 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %24
  %24 = apply %23(%19, %20, %21, %22) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %25 = init_existential_addr %18 : $*Any, $String // user: %26
  store %24 to [init] %25 : $*String              // id: %26
  // function_ref default argument 1 of print(_:separator:terminator:)
  %27 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %28
  %28 = apply %27() : $@convention(thin) () -> @owned String // users: %34, %32
  // function_ref default argument 2 of print(_:separator:terminator:)
  %29 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %30
  %30 = apply %29() : $@convention(thin) () -> @owned String // users: %33, %32
  // function_ref print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %32
  %32 = apply %31(%16, %28, %30) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %30 : $String                     // id: %33
  destroy_value %28 : $String                     // id: %34
  destroy_value %16 : $Array<Any>                 // id: %35
  %36 = integer_literal $Builtin.Word, 1          // user: %38
  // function_ref _allocateUninitializedArray<A>(_:)
  %37 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %38
  %38 = apply %37<Any>(%36) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %39
  (%39, %40) = destructure_tuple %38 : $(Array<Any>, Builtin.RawPointer) // users: %58, %55, %41
  %41 = pointer_to_address %40 : $Builtin.RawPointer to [strict] $*Any // user: %48
  %42 = string_literal utf8 "===== Did hook"      // user: %47
  %43 = integer_literal $Builtin.Word, 14         // user: %47
  %44 = integer_literal $Builtin.Int1, -1         // user: %47
  %45 = metatype $@thin String.Type               // user: %47
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %46 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %47
  %47 = apply %46(%42, %43, %44, %45) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %49
  %48 = init_existential_addr %41 : $*Any, $String // user: %49
  store %47 to [init] %48 : $*String              // id: %49
  // function_ref default argument 1 of print(_:separator:terminator:)
  %50 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %51
  %51 = apply %50() : $@convention(thin) () -> @owned String // users: %57, %55
  // function_ref default argument 2 of print(_:separator:terminator:)
  %52 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %53
  %53 = apply %52() : $@convention(thin) () -> @owned String // users: %56, %55
  // function_ref print(_:separator:terminator:)
  %54 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %55
  %55 = apply %54(%39, %51, %53) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %53 : $String                     // id: %56
  destroy_value %51 : $String                     // id: %57
  destroy_value %39 : $Array<Any>                 // id: %58
  %59 = alloc_box ${ var Int }, var, name "value" // users: %624, %109, %79, %60
  %60 = project_box %59 : ${ var Int }, 0         // users: %452, %63
  %61 = integer_literal $Builtin.Int64, 0         // user: %62
  %62 = struct $Int (%61 : $Builtin.Int64)        // user: %63
  store %62 to [trivial] %60 : $*Int              // id: %63
  %64 = begin_borrow %11 : $Number                // users: %67, %65
  %65 = copy_value %64 : $Number                  // users: %72, %69, %66
  debug_value %65 : $Number, let, name "number"   // id: %66
  end_borrow %64 : $Number                        // id: %67
  // function_ref closure #2 in foo()
  %68 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %70
  %69 = copy_value %65 : $Number                  // user: %70
  %70 = partial_apply [callee_guaranteed] %68(%69) : $@convention(thin) (@guaranteed Number) -> () // users: %623, %235, %71
  debug_value %70 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %71
  destroy_value %65 : $Number                     // id: %72
  %73 = begin_borrow %11 : $Number                // users: %76, %74
  %74 = copy_value %73 : $Number                  // users: %82, %78, %75
  debug_value %74 : $Number, let, name "number"   // id: %75
  end_borrow %73 : $Number                        // id: %76
  // function_ref closure #3 in foo()
  %77 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %80
  %78 = copy_value %74 : $Number                  // user: %80
  %79 = copy_value %59 : ${ var Int }             // user: %80
  %80 = partial_apply [callee_guaranteed] %77(%78, %79) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %622, %275, %81
  debug_value %80 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %81
  destroy_value %74 : $Number                     // id: %82
  %83 = begin_borrow %11 : $Number                // users: %86, %84
  %84 = copy_value %83 : $Number                  // users: %97, %92, %85
  debug_value %84 : $Number, let, name "number"   // id: %85
  end_borrow %83 : $Number                        // id: %86
  %87 = begin_borrow %5 : $Empty                  // users: %90, %88
  %88 = copy_value %87 : $Empty                   // users: %96, %93, %89
  debug_value %88 : $Empty, let, name "empty"     // id: %89
  end_borrow %87 : $Empty                         // id: %90
  // function_ref closure #4 in foo()
  %91 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %94
  %92 = copy_value %84 : $Number                  // user: %94
  %93 = copy_value %88 : $Empty                   // user: %94
  %94 = partial_apply [callee_guaranteed] %91(%92, %93) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %621, %315, %95
  debug_value %94 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %95
  destroy_value %88 : $Empty                      // id: %96
  destroy_value %84 : $Number                     // id: %97
  %98 = begin_borrow %11 : $Number                // users: %101, %99
  %99 = copy_value %98 : $Number                  // users: %113, %107, %100
  debug_value %99 : $Number, let, name "number"   // id: %100
  end_borrow %98 : $Number                        // id: %101
  %102 = begin_borrow %5 : $Empty                 // users: %105, %103
  %103 = copy_value %102 : $Empty                 // users: %112, %108, %104
  debug_value %103 : $Empty, let, name "empty"    // id: %104
  end_borrow %102 : $Empty                        // id: %105
  // function_ref closure #5 in foo()
  %106 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %110
  %107 = copy_value %99 : $Number                 // user: %110
  %108 = copy_value %103 : $Empty                 // user: %110
  %109 = copy_value %59 : ${ var Int }            // user: %110
  %110 = partial_apply [callee_guaranteed] %106(%107, %108, %109) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %620, %355, %111
  debug_value %110 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %111
  destroy_value %103 : $Empty                     // id: %112
  destroy_value %99 : $Number                     // id: %113
  %114 = integer_literal $Builtin.Word, 1         // user: %116
  // function_ref _allocateUninitializedArray<A>(_:)
  %115 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %116
  %116 = apply %115<Any>(%114) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %117
  (%117, %118) = destructure_tuple %116 : $(Array<Any>, Builtin.RawPointer) // users: %136, %133, %119
  %119 = pointer_to_address %118 : $Builtin.RawPointer to [strict] $*Any // user: %126
  %120 = string_literal utf8 "===== Did init closures" // user: %125
  %121 = integer_literal $Builtin.Word, 23        // user: %125
  %122 = integer_literal $Builtin.Int1, -1        // user: %125
  %123 = metatype $@thin String.Type              // user: %125
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %124 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %125
  %125 = apply %124(%120, %121, %122, %123) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %127
  %126 = init_existential_addr %119 : $*Any, $String // user: %127
  store %125 to [init] %126 : $*String            // id: %127
  // function_ref default argument 1 of print(_:separator:terminator:)
  %128 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %129
  %129 = apply %128() : $@convention(thin) () -> @owned String // users: %135, %133
  // function_ref default argument 2 of print(_:separator:terminator:)
  %130 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %131
  %131 = apply %130() : $@convention(thin) () -> @owned String // users: %134, %133
  // function_ref print(_:separator:terminator:)
  %132 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %133
  %133 = apply %132(%117, %129, %131) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %131 : $String                    // id: %134
  destroy_value %129 : $String                    // id: %135
  destroy_value %117 : $Array<Any>                // id: %136
  %137 = alloc_stack $Array<Closure>, var, name "storage" // users: %619, %618, %141, %144, %242, %282, %322, %362, %394, %415, %491
  %138 = metatype $@thin Array<Closure>.Type      // user: %140
  // function_ref Array.init()
  %139 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %140
  %140 = apply %139<Closure>(%138) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %141
  store %140 to [init] %137 : $*Array<Closure>    // id: %141
  %142 = integer_literal $Builtin.Int64, 100      // user: %143
  %143 = struct $Int (%142 : $Builtin.Int64)      // user: %146
  %144 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %147, %146
  // function_ref Array.reserveCapacity(_:)
  %145 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %146
  %146 = apply %145<Closure>(%143, %144) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %144 : $*Array<Closure>              // id: %147
  %148 = integer_literal $Builtin.Word, 1         // user: %150
  // function_ref _allocateUninitializedArray<A>(_:)
  %149 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %150
  %150 = apply %149<Any>(%148) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %151
  (%151, %152) = destructure_tuple %150 : $(Array<Any>, Builtin.RawPointer) // users: %170, %167, %153
  %153 = pointer_to_address %152 : $Builtin.RawPointer to [strict] $*Any // user: %160
  %154 = string_literal utf8 "===== Did init array" // user: %159
  %155 = integer_literal $Builtin.Word, 20        // user: %159
  %156 = integer_literal $Builtin.Int1, -1        // user: %159
  %157 = metatype $@thin String.Type              // user: %159
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %158 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %159
  %159 = apply %158(%154, %155, %156, %157) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %161
  %160 = init_existential_addr %153 : $*Any, $String // user: %161
  store %159 to [init] %160 : $*String            // id: %161
  // function_ref default argument 1 of print(_:separator:terminator:)
  %162 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %163
  %163 = apply %162() : $@convention(thin) () -> @owned String // users: %169, %167
  // function_ref default argument 2 of print(_:separator:terminator:)
  %164 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %165
  %165 = apply %164() : $@convention(thin) () -> @owned String // users: %168, %167
  // function_ref print(_:separator:terminator:)
  %166 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %167
  %167 = apply %166(%151, %163, %165) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %165 : $String                    // id: %168
  destroy_value %163 : $String                    // id: %169
  destroy_value %151 : $Array<Any>                // id: %170
  %171 = alloc_stack $Bool, var, name "run"       // users: %617, %174, %176, %561
  %172 = integer_literal $Builtin.Int1, -1        // user: %173
  %173 = struct $Bool (%172 : $Builtin.Int1)      // user: %174
  store %173 to [trivial] %171 : $*Bool           // id: %174
  br bb1                                          // id: %175

bb1:                                              // Preds: bb25 bb0
  %176 = begin_access [read] [static] %171 : $*Bool // users: %177, %179
  %177 = struct_element_addr %176 : $*Bool, #Bool._value // user: %178
  %178 = load [trivial] %177 : $*Builtin.Int1     // user: %180
  end_access %176 : $*Bool                        // id: %179
  cond_br %178, bb2, bb26                         // id: %180

bb2:                                              // Preds: bb1
  %181 = integer_literal $Builtin.Word, 1         // user: %183
  // function_ref _allocateUninitializedArray<A>(_:)
  %182 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %183
  %183 = apply %182<Any>(%181) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %184
  (%184, %185) = destructure_tuple %183 : $(Array<Any>, Builtin.RawPointer) // users: %203, %200, %186
  %186 = pointer_to_address %185 : $Builtin.RawPointer to [strict] $*Any // user: %193
  %187 = string_literal utf8 "===== Ask"          // user: %192
  %188 = integer_literal $Builtin.Word, 9         // user: %192
  %189 = integer_literal $Builtin.Int1, -1        // user: %192
  %190 = metatype $@thin String.Type              // user: %192
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %191 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %192
  %192 = apply %191(%187, %188, %189, %190) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %194
  %193 = init_existential_addr %186 : $*Any, $String // user: %194
  store %192 to [init] %193 : $*String            // id: %194
  // function_ref default argument 1 of print(_:separator:terminator:)
  %195 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %196
  %196 = apply %195() : $@convention(thin) () -> @owned String // users: %202, %200
  // function_ref default argument 2 of print(_:separator:terminator:)
  %197 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %198
  %198 = apply %197() : $@convention(thin) () -> @owned String // users: %201, %200
  // function_ref print(_:separator:terminator:)
  %199 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %200
  %200 = apply %199(%184, %196, %198) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %198 : $String                    // id: %201
  destroy_value %196 : $String                    // id: %202
  destroy_value %184 : $Array<Any>                // id: %203
  // function_ref default argument 0 of readLine(strippingNewline:)
  %204 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %205
  %205 = apply %204() : $@convention(thin) () -> Bool // user: %207
  // function_ref readLine(strippingNewline:)
  %206 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %207
  %207 = apply %206(%205) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %592, %209, %208
  debug_value %207 : $Optional<String>, let, name "line" // id: %208
  %209 = begin_borrow %207 : $Optional<String>    // users: %590, %564, %535, %527, %467, %464, %427, %422, %370, %367, %330, %327, %290, %287, %250, %247, %210
  %210 = copy_value %209 : $Optional<String>      // users: %233, %249, %221, %211
  debug_value %210 : $Optional<String>, let, name "$match" // id: %211
  %212 = string_literal utf8 "push1"              // user: %217
  %213 = integer_literal $Builtin.Word, 5         // user: %217
  %214 = integer_literal $Builtin.Int1, -1        // user: %217
  %215 = metatype $@thin String.Type              // user: %217
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %216 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %217
  %217 = apply %216(%212, %213, %214, %215) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %218
  %218 = enum $Optional<String>, #Optional.some!enumelt, %217 : $String // user: %220
  %219 = alloc_stack $Optional<String>            // users: %226, %230, %229, %220
  store %218 to [init] %219 : $*Optional<String>  // id: %220
  %221 = begin_borrow %210 : $Optional<String>    // users: %228, %223
  %222 = alloc_stack $Optional<String>            // users: %226, %227, %223
  %223 = store_borrow %221 to %222 : $*Optional<String>
  %224 = metatype $@thin Optional<String>.Type    // user: %226
  // function_ref static Optional<A>.== infix(_:_:)
  %225 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %226
  %226 = apply %225<String>(%219, %222, %224) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %231
  dealloc_stack %222 : $*Optional<String>         // id: %227
  end_borrow %221 : $Optional<String>             // id: %228
  destroy_addr %219 : $*Optional<String>          // id: %229
  dealloc_stack %219 : $*Optional<String>         // id: %230
  %231 = struct_extract %226 : $Bool, #Bool._value // user: %232
  cond_br %231, bb3, bb4                          // id: %232

bb3:                                              // Preds: bb2
  destroy_value %210 : $Optional<String>          // id: %233
  %234 = metatype $@thick Closure.Type            // user: %238
  %235 = begin_borrow %70 : $@callee_guaranteed () -> () // users: %239, %236
  %236 = copy_value %235 : $@callee_guaranteed () -> () // user: %238
  // function_ref Closure.__allocating_init(_:)
  %237 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %238
  %238 = apply %237(%236, %234) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %241
  end_borrow %235 : $@callee_guaranteed () -> ()  // id: %239
  %240 = alloc_stack $Closure                     // users: %246, %244, %241
  store %238 to [init] %240 : $*Closure           // id: %241
  %242 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %245, %244
  // function_ref Array.append(_:)
  %243 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %244
  %244 = apply %243<Closure>(%240, %242) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %242 : $*Array<Closure>              // id: %245
  dealloc_stack %240 : $*Closure                  // id: %246
  end_borrow %209 : $Optional<String>             // id: %247
  br bb25                                         // id: %248

bb4:                                              // Preds: bb2
  destroy_value %210 : $Optional<String>          // id: %249
  %250 = copy_value %209 : $Optional<String>      // users: %273, %289, %261, %251
  debug_value %250 : $Optional<String>, let, name "$match" // id: %251
  %252 = string_literal utf8 "push1_1"            // user: %257
  %253 = integer_literal $Builtin.Word, 7         // user: %257
  %254 = integer_literal $Builtin.Int1, -1        // user: %257
  %255 = metatype $@thin String.Type              // user: %257
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %256 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %257
  %257 = apply %256(%252, %253, %254, %255) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %258
  %258 = enum $Optional<String>, #Optional.some!enumelt, %257 : $String // user: %260
  %259 = alloc_stack $Optional<String>            // users: %266, %270, %269, %260
  store %258 to [init] %259 : $*Optional<String>  // id: %260
  %261 = begin_borrow %250 : $Optional<String>    // users: %268, %263
  %262 = alloc_stack $Optional<String>            // users: %266, %267, %263
  %263 = store_borrow %261 to %262 : $*Optional<String>
  %264 = metatype $@thin Optional<String>.Type    // user: %266
  // function_ref static Optional<A>.== infix(_:_:)
  %265 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %266
  %266 = apply %265<String>(%259, %262, %264) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %271
  dealloc_stack %262 : $*Optional<String>         // id: %267
  end_borrow %261 : $Optional<String>             // id: %268
  destroy_addr %259 : $*Optional<String>          // id: %269
  dealloc_stack %259 : $*Optional<String>         // id: %270
  %271 = struct_extract %266 : $Bool, #Bool._value // user: %272
  cond_br %271, bb5, bb6                          // id: %272

bb5:                                              // Preds: bb4
  destroy_value %250 : $Optional<String>          // id: %273
  %274 = metatype $@thick Closure.Type            // user: %278
  %275 = begin_borrow %80 : $@callee_guaranteed () -> () // users: %279, %276
  %276 = copy_value %275 : $@callee_guaranteed () -> () // user: %278
  // function_ref Closure.__allocating_init(_:)
  %277 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %278
  %278 = apply %277(%276, %274) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %281
  end_borrow %275 : $@callee_guaranteed () -> ()  // id: %279
  %280 = alloc_stack $Closure                     // users: %286, %284, %281
  store %278 to [init] %280 : $*Closure           // id: %281
  %282 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %285, %284
  // function_ref Array.append(_:)
  %283 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %284
  %284 = apply %283<Closure>(%280, %282) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %282 : $*Array<Closure>              // id: %285
  dealloc_stack %280 : $*Closure                  // id: %286
  end_borrow %209 : $Optional<String>             // id: %287
  br bb25                                         // id: %288

bb6:                                              // Preds: bb4
  destroy_value %250 : $Optional<String>          // id: %289
  %290 = copy_value %209 : $Optional<String>      // users: %313, %329, %301, %291
  debug_value %290 : $Optional<String>, let, name "$match" // id: %291
  %292 = string_literal utf8 "push2"              // user: %297
  %293 = integer_literal $Builtin.Word, 5         // user: %297
  %294 = integer_literal $Builtin.Int1, -1        // user: %297
  %295 = metatype $@thin String.Type              // user: %297
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %296 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %297
  %297 = apply %296(%292, %293, %294, %295) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %298
  %298 = enum $Optional<String>, #Optional.some!enumelt, %297 : $String // user: %300
  %299 = alloc_stack $Optional<String>            // users: %306, %310, %309, %300
  store %298 to [init] %299 : $*Optional<String>  // id: %300
  %301 = begin_borrow %290 : $Optional<String>    // users: %308, %303
  %302 = alloc_stack $Optional<String>            // users: %306, %307, %303
  %303 = store_borrow %301 to %302 : $*Optional<String>
  %304 = metatype $@thin Optional<String>.Type    // user: %306
  // function_ref static Optional<A>.== infix(_:_:)
  %305 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %306
  %306 = apply %305<String>(%299, %302, %304) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %311
  dealloc_stack %302 : $*Optional<String>         // id: %307
  end_borrow %301 : $Optional<String>             // id: %308
  destroy_addr %299 : $*Optional<String>          // id: %309
  dealloc_stack %299 : $*Optional<String>         // id: %310
  %311 = struct_extract %306 : $Bool, #Bool._value // user: %312
  cond_br %311, bb7, bb8                          // id: %312

bb7:                                              // Preds: bb6
  destroy_value %290 : $Optional<String>          // id: %313
  %314 = metatype $@thick Closure.Type            // user: %318
  %315 = begin_borrow %94 : $@callee_guaranteed () -> () // users: %319, %316
  %316 = copy_value %315 : $@callee_guaranteed () -> () // user: %318
  // function_ref Closure.__allocating_init(_:)
  %317 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %318
  %318 = apply %317(%316, %314) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %321
  end_borrow %315 : $@callee_guaranteed () -> ()  // id: %319
  %320 = alloc_stack $Closure                     // users: %326, %324, %321
  store %318 to [init] %320 : $*Closure           // id: %321
  %322 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %325, %324
  // function_ref Array.append(_:)
  %323 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %324
  %324 = apply %323<Closure>(%320, %322) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %322 : $*Array<Closure>              // id: %325
  dealloc_stack %320 : $*Closure                  // id: %326
  end_borrow %209 : $Optional<String>             // id: %327
  br bb25                                         // id: %328

bb8:                                              // Preds: bb6
  destroy_value %290 : $Optional<String>          // id: %329
  %330 = copy_value %209 : $Optional<String>      // users: %353, %369, %341, %331
  debug_value %330 : $Optional<String>, let, name "$match" // id: %331
  %332 = string_literal utf8 "push2_1"            // user: %337
  %333 = integer_literal $Builtin.Word, 7         // user: %337
  %334 = integer_literal $Builtin.Int1, -1        // user: %337
  %335 = metatype $@thin String.Type              // user: %337
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %336 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %337
  %337 = apply %336(%332, %333, %334, %335) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %338
  %338 = enum $Optional<String>, #Optional.some!enumelt, %337 : $String // user: %340
  %339 = alloc_stack $Optional<String>            // users: %346, %350, %349, %340
  store %338 to [init] %339 : $*Optional<String>  // id: %340
  %341 = begin_borrow %330 : $Optional<String>    // users: %348, %343
  %342 = alloc_stack $Optional<String>            // users: %346, %347, %343
  %343 = store_borrow %341 to %342 : $*Optional<String>
  %344 = metatype $@thin Optional<String>.Type    // user: %346
  // function_ref static Optional<A>.== infix(_:_:)
  %345 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %346
  %346 = apply %345<String>(%339, %342, %344) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %351
  dealloc_stack %342 : $*Optional<String>         // id: %347
  end_borrow %341 : $Optional<String>             // id: %348
  destroy_addr %339 : $*Optional<String>          // id: %349
  dealloc_stack %339 : $*Optional<String>         // id: %350
  %351 = struct_extract %346 : $Bool, #Bool._value // user: %352
  cond_br %351, bb9, bb10                         // id: %352

bb9:                                              // Preds: bb8
  destroy_value %330 : $Optional<String>          // id: %353
  %354 = metatype $@thick Closure.Type            // user: %358
  %355 = begin_borrow %110 : $@callee_guaranteed () -> () // users: %359, %356
  %356 = copy_value %355 : $@callee_guaranteed () -> () // user: %358
  // function_ref Closure.__allocating_init(_:)
  %357 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %358
  %358 = apply %357(%356, %354) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %361
  end_borrow %355 : $@callee_guaranteed () -> ()  // id: %359
  %360 = alloc_stack $Closure                     // users: %366, %364, %361
  store %358 to [init] %360 : $*Closure           // id: %361
  %362 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %365, %364
  // function_ref Array.append(_:)
  %363 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %364
  %364 = apply %363<Closure>(%360, %362) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %362 : $*Array<Closure>              // id: %365
  dealloc_stack %360 : $*Closure                  // id: %366
  end_borrow %209 : $Optional<String>             // id: %367
  br bb25                                         // id: %368

bb10:                                             // Preds: bb8
  destroy_value %330 : $Optional<String>          // id: %369
  %370 = copy_value %209 : $Optional<String>      // users: %393, %425, %381, %371
  debug_value %370 : $Optional<String>, let, name "$match" // id: %371
  %372 = string_literal utf8 "pop"                // user: %377
  %373 = integer_literal $Builtin.Word, 3         // user: %377
  %374 = integer_literal $Builtin.Int1, -1        // user: %377
  %375 = metatype $@thin String.Type              // user: %377
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %376 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %377
  %377 = apply %376(%372, %373, %374, %375) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %378
  %378 = enum $Optional<String>, #Optional.some!enumelt, %377 : $String // user: %380
  %379 = alloc_stack $Optional<String>            // users: %386, %390, %389, %380
  store %378 to [init] %379 : $*Optional<String>  // id: %380
  %381 = begin_borrow %370 : $Optional<String>    // users: %388, %383
  %382 = alloc_stack $Optional<String>            // users: %386, %387, %383
  %383 = store_borrow %381 to %382 : $*Optional<String>
  %384 = metatype $@thin Optional<String>.Type    // user: %386
  // function_ref static Optional<A>.== infix(_:_:)
  %385 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %386
  %386 = apply %385<String>(%379, %382, %384) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %391
  dealloc_stack %382 : $*Optional<String>         // id: %387
  end_borrow %381 : $Optional<String>             // id: %388
  destroy_addr %379 : $*Optional<String>          // id: %389
  dealloc_stack %379 : $*Optional<String>         // id: %390
  %391 = struct_extract %386 : $Bool, #Bool._value // user: %392
  cond_br %391, bb11, bb14                        // id: %392

bb11:                                             // Preds: bb10
  destroy_value %370 : $Optional<String>          // id: %393
  %394 = begin_access [read] [static] %137 : $*Array<Closure> // users: %396, %395
  %395 = load [copy] %394 : $*Array<Closure>      // users: %407, %397
  end_access %394 : $*Array<Closure>              // id: %396
  %397 = begin_borrow %395 : $Array<Closure>      // users: %406, %399
  %398 = alloc_stack $Array<Closure>              // users: %412, %400, %399
  %399 = store_borrow %397 to %398 : $*Array<Closure>
  %400 = load_borrow %398 : $*Array<Closure>      // users: %411, %402
  %401 = alloc_stack $Array<Closure>              // users: %405, %404, %402
  %402 = store_borrow %400 to %401 : $*Array<Closure>
  // function_ref Collection.isEmpty.getter
  %403 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %404
  %404 = apply %403<[Closure]>(%401) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %408
  dealloc_stack %401 : $*Array<Closure>           // id: %405
  end_borrow %397 : $Array<Closure>               // id: %406
  destroy_value %395 : $Array<Closure>            // id: %407
  %408 = struct_extract %404 : $Bool, #Bool._value // user: %410
  %409 = integer_literal $Builtin.Int1, -1        // user: %410
  %410 = builtin "xor_Int1"(%408 : $Builtin.Int1, %409 : $Builtin.Int1) : $Builtin.Int1 // user: %413
  end_borrow %400 : $Array<Closure>               // id: %411
  dealloc_stack %398 : $*Array<Closure>           // id: %412
  cond_br %410, bb12, bb13                        // id: %413

bb12:                                             // Preds: bb11
  %414 = alloc_stack $Closure                     // users: %421, %419, %417
  %415 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %418, %417
  // function_ref RangeReplaceableCollection<>.removeLast()
  %416 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %417
  %417 = apply %416<[Closure]>(%414, %415) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %415 : $*Array<Closure>              // id: %418
  %419 = load [take] %414 : $*Closure             // user: %420
  destroy_value %419 : $Closure                   // id: %420
  dealloc_stack %414 : $*Closure                  // id: %421
  end_borrow %209 : $Optional<String>             // id: %422
  br bb25                                         // id: %423

bb13:                                             // Preds: bb11
  br bb15                                         // id: %424

bb14:                                             // Preds: bb10
  destroy_value %370 : $Optional<String>          // id: %425
  br bb15                                         // id: %426

bb15:                                             // Preds: bb13 bb14
  %427 = copy_value %209 : $Optional<String>      // users: %450, %466, %438, %428
  debug_value %427 : $Optional<String>, let, name "$match" // id: %428
  %429 = string_literal utf8 "inc"                // user: %434
  %430 = integer_literal $Builtin.Word, 3         // user: %434
  %431 = integer_literal $Builtin.Int1, -1        // user: %434
  %432 = metatype $@thin String.Type              // user: %434
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %433 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %434
  %434 = apply %433(%429, %430, %431, %432) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %435
  %435 = enum $Optional<String>, #Optional.some!enumelt, %434 : $String // user: %437
  %436 = alloc_stack $Optional<String>            // users: %443, %447, %446, %437
  store %435 to [init] %436 : $*Optional<String>  // id: %437
  %438 = begin_borrow %427 : $Optional<String>    // users: %445, %440
  %439 = alloc_stack $Optional<String>            // users: %443, %444, %440
  %440 = store_borrow %438 to %439 : $*Optional<String>
  %441 = metatype $@thin Optional<String>.Type    // user: %443
  // function_ref static Optional<A>.== infix(_:_:)
  %442 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %443
  %443 = apply %442<String>(%436, %439, %441) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %448
  dealloc_stack %439 : $*Optional<String>         // id: %444
  end_borrow %438 : $Optional<String>             // id: %445
  destroy_addr %436 : $*Optional<String>          // id: %446
  dealloc_stack %436 : $*Optional<String>         // id: %447
  %448 = struct_extract %443 : $Bool, #Bool._value // user: %449
  cond_br %448, bb16, bb17                        // id: %449

bb16:                                             // Preds: bb15
  destroy_value %427 : $Optional<String>          // id: %450
  %451 = integer_literal $Builtin.Int64, 1        // user: %456
  %452 = begin_access [modify] [dynamic] %60 : $*Int // users: %461, %453, %463
  %453 = struct_element_addr %452 : $*Int, #Int._value // user: %454
  %454 = load [trivial] %453 : $*Builtin.Int64    // user: %456
  %455 = integer_literal $Builtin.Int1, -1        // user: %456
  %456 = builtin "sadd_with_overflow_Int64"(%454 : $Builtin.Int64, %451 : $Builtin.Int64, %455 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %457
  (%457, %458) = destructure_tuple %456 : $(Builtin.Int64, Builtin.Int1) // users: %460, %459
  cond_fail %458 : $Builtin.Int1, "arithmetic overflow" // id: %459
  %460 = struct $Int (%457 : $Builtin.Int64)      // user: %461
  store %460 to [trivial] %452 : $*Int            // id: %461
  %462 = tuple ()
  end_access %452 : $*Int                         // id: %463
  end_borrow %209 : $Optional<String>             // id: %464
  br bb25                                         // id: %465

bb17:                                             // Preds: bb15
  destroy_value %427 : $Optional<String>          // id: %466
  %467 = copy_value %209 : $Optional<String>      // users: %490, %534, %478, %468
  debug_value %467 : $Optional<String>, let, name "$match" // id: %468
  %469 = string_literal utf8 "exec"               // user: %474
  %470 = integer_literal $Builtin.Word, 4         // user: %474
  %471 = integer_literal $Builtin.Int1, -1        // user: %474
  %472 = metatype $@thin String.Type              // user: %474
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %473 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %474
  %474 = apply %473(%469, %470, %471, %472) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %475
  %475 = enum $Optional<String>, #Optional.some!enumelt, %474 : $String // user: %477
  %476 = alloc_stack $Optional<String>            // users: %483, %487, %486, %477
  store %475 to [init] %476 : $*Optional<String>  // id: %477
  %478 = begin_borrow %467 : $Optional<String>    // users: %485, %480
  %479 = alloc_stack $Optional<String>            // users: %483, %484, %480
  %480 = store_borrow %478 to %479 : $*Optional<String>
  %481 = metatype $@thin Optional<String>.Type    // user: %483
  // function_ref static Optional<A>.== infix(_:_:)
  %482 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %483
  %483 = apply %482<String>(%476, %479, %481) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %488
  dealloc_stack %479 : $*Optional<String>         // id: %484
  end_borrow %478 : $Optional<String>             // id: %485
  destroy_addr %476 : $*Optional<String>          // id: %486
  dealloc_stack %476 : $*Optional<String>         // id: %487
  %488 = struct_extract %483 : $Bool, #Bool._value // user: %489
  cond_br %488, bb18, bb22                        // id: %489

bb18:                                             // Preds: bb17
  destroy_value %467 : $Optional<String>          // id: %490
  %491 = begin_access [read] [static] %137 : $*Array<Closure> // users: %493, %492
  %492 = load [copy] %491 : $*Array<Closure>      // users: %506, %494
  end_access %491 : $*Array<Closure>              // id: %493
  %494 = begin_borrow %492 : $Array<Closure>      // users: %505, %496
  %495 = alloc_stack $Array<Closure>              // users: %524, %531, %497, %496
  %496 = store_borrow %494 to %495 : $*Array<Closure>
  %497 = load_borrow %495 : $*Array<Closure>      // users: %523, %530, %500
  %498 = alloc_stack $Optional<Closure>           // users: %522, %529, %504, %502
  %499 = alloc_stack $Array<Closure>              // users: %503, %502, %500
  %500 = store_borrow %497 to %499 : $*Array<Closure>
  // function_ref BidirectionalCollection.last.getter
  %501 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %502
  %502 = apply %501<[Closure]>(%498, %499) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %499 : $*Array<Closure>           // id: %503
  %504 = load [take] %498 : $*Optional<Closure>   // user: %507
  end_borrow %494 : $Array<Closure>               // id: %505
  destroy_value %492 : $Array<Closure>            // id: %506
  switch_enum %504 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %507

// %508                                           // users: %515, %509
bb19(%508 : @owned $Closure):                     // Preds: bb18
  %509 = begin_borrow %508 : $Closure             // users: %514, %510
  %510 = ref_element_addr %509 : $Closure, #Closure.closure // user: %511
  %511 = begin_access [read] [dynamic] %510 : $*@callee_guaranteed () -> () // users: %513, %512
  %512 = load [copy] %511 : $*@callee_guaranteed () -> () // users: %521, %516
  end_access %511 : $*@callee_guaranteed () -> () // id: %513
  end_borrow %509 : $Closure                      // id: %514
  destroy_value %508 : $Closure                   // id: %515
  %516 = begin_borrow %512 : $@callee_guaranteed () -> () // users: %518, %517
  %517 = apply %516() : $@callee_guaranteed () -> ()
  end_borrow %516 : $@callee_guaranteed () -> ()  // id: %518
  %519 = tuple ()                                 // user: %520
  %520 = enum $Optional<()>, #Optional.some!enumelt, %519 : $() // user: %525
  destroy_value %512 : $@callee_guaranteed () -> () // id: %521
  dealloc_stack %498 : $*Optional<Closure>        // id: %522
  end_borrow %497 : $Array<Closure>               // id: %523
  dealloc_stack %495 : $*Array<Closure>           // id: %524
  br bb20(%520 : $Optional<()>)                   // id: %525

bb20(%526 : $Optional<()>):                       // Preds: bb21 bb19
  end_borrow %209 : $Optional<String>             // id: %527
  br bb25                                         // id: %528

bb21:                                             // Preds: bb18
  dealloc_stack %498 : $*Optional<Closure>        // id: %529
  end_borrow %497 : $Array<Closure>               // id: %530
  dealloc_stack %495 : $*Array<Closure>           // id: %531
  %532 = enum $Optional<()>, #Optional.none!enumelt // user: %533
  br bb20(%532 : $Optional<()>)                   // id: %533

bb22:                                             // Preds: bb17
  destroy_value %467 : $Optional<String>          // id: %534
  %535 = copy_value %209 : $Optional<String>      // users: %558, %566, %546, %536
  debug_value %535 : $Optional<String>, let, name "$match" // id: %536
  %537 = string_literal utf8 "exit"               // user: %542
  %538 = integer_literal $Builtin.Word, 4         // user: %542
  %539 = integer_literal $Builtin.Int1, -1        // user: %542
  %540 = metatype $@thin String.Type              // user: %542
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %541 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %542
  %542 = apply %541(%537, %538, %539, %540) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %543
  %543 = enum $Optional<String>, #Optional.some!enumelt, %542 : $String // user: %545
  %544 = alloc_stack $Optional<String>            // users: %551, %555, %554, %545
  store %543 to [init] %544 : $*Optional<String>  // id: %545
  %546 = begin_borrow %535 : $Optional<String>    // users: %553, %548
  %547 = alloc_stack $Optional<String>            // users: %551, %552, %548
  %548 = store_borrow %546 to %547 : $*Optional<String>
  %549 = metatype $@thin Optional<String>.Type    // user: %551
  // function_ref static Optional<A>.== infix(_:_:)
  %550 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %551
  %551 = apply %550<String>(%544, %547, %549) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %556
  dealloc_stack %547 : $*Optional<String>         // id: %552
  end_borrow %546 : $Optional<String>             // id: %553
  destroy_addr %544 : $*Optional<String>          // id: %554
  dealloc_stack %544 : $*Optional<String>         // id: %555
  %556 = struct_extract %551 : $Bool, #Bool._value // user: %557
  cond_br %556, bb23, bb24                        // id: %557

bb23:                                             // Preds: bb22
  destroy_value %535 : $Optional<String>          // id: %558
  %559 = integer_literal $Builtin.Int1, 0         // user: %560
  %560 = struct $Bool (%559 : $Builtin.Int1)      // user: %562
  %561 = begin_access [modify] [static] %171 : $*Bool // users: %562, %563
  store %560 to [trivial] %561 : $*Bool           // id: %562
  end_access %561 : $*Bool                        // id: %563
  end_borrow %209 : $Optional<String>             // id: %564
  br bb25                                         // id: %565

bb24:                                             // Preds: bb22
  destroy_value %535 : $Optional<String>          // id: %566
  %567 = integer_literal $Builtin.Word, 1         // user: %569
  // function_ref _allocateUninitializedArray<A>(_:)
  %568 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %569
  %569 = apply %568<Any>(%567) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %570
  (%570, %571) = destructure_tuple %569 : $(Array<Any>, Builtin.RawPointer) // users: %589, %586, %572
  %572 = pointer_to_address %571 : $Builtin.RawPointer to [strict] $*Any // user: %579
  %573 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %578
  %574 = integer_literal $Builtin.Word, 44        // user: %578
  %575 = integer_literal $Builtin.Int1, 0         // user: %578
  %576 = metatype $@thin String.Type              // user: %578
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %577 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %578
  %578 = apply %577(%573, %574, %575, %576) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %580
  %579 = init_existential_addr %572 : $*Any, $String // user: %580
  store %578 to [init] %579 : $*String            // id: %580
  // function_ref default argument 1 of print(_:separator:terminator:)
  %581 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %582
  %582 = apply %581() : $@convention(thin) () -> @owned String // users: %588, %586
  // function_ref default argument 2 of print(_:separator:terminator:)
  %583 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %584
  %584 = apply %583() : $@convention(thin) () -> @owned String // users: %587, %586
  // function_ref print(_:separator:terminator:)
  %585 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %586
  %586 = apply %585(%570, %582, %584) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %584 : $String                    // id: %587
  destroy_value %582 : $String                    // id: %588
  destroy_value %570 : $Array<Any>                // id: %589
  end_borrow %209 : $Optional<String>             // id: %590
  br bb25                                         // id: %591

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  destroy_value %207 : $Optional<String>          // id: %592
  br bb1                                          // id: %593

bb26:                                             // Preds: bb1
  %594 = integer_literal $Builtin.Word, 1         // user: %596
  // function_ref _allocateUninitializedArray<A>(_:)
  %595 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %596
  %596 = apply %595<Any>(%594) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %597
  (%597, %598) = destructure_tuple %596 : $(Array<Any>, Builtin.RawPointer) // users: %616, %613, %599
  %599 = pointer_to_address %598 : $Builtin.RawPointer to [strict] $*Any // user: %606
  %600 = string_literal utf8 "===== will end"     // user: %605
  %601 = integer_literal $Builtin.Word, 14        // user: %605
  %602 = integer_literal $Builtin.Int1, -1        // user: %605
  %603 = metatype $@thin String.Type              // user: %605
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %604 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %605
  %605 = apply %604(%600, %601, %602, %603) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %607
  %606 = init_existential_addr %599 : $*Any, $String // user: %607
  store %605 to [init] %606 : $*String            // id: %607
  // function_ref default argument 1 of print(_:separator:terminator:)
  %608 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %609
  %609 = apply %608() : $@convention(thin) () -> @owned String // users: %615, %613
  // function_ref default argument 2 of print(_:separator:terminator:)
  %610 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %611
  %611 = apply %610() : $@convention(thin) () -> @owned String // users: %614, %613
  // function_ref print(_:separator:terminator:)
  %612 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %613
  %613 = apply %612(%597, %609, %611) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %611 : $String                    // id: %614
  destroy_value %609 : $String                    // id: %615
  destroy_value %597 : $Array<Any>                // id: %616
  dealloc_stack %171 : $*Bool                     // id: %617
  destroy_addr %137 : $*Array<Closure>            // id: %618
  dealloc_stack %137 : $*Array<Closure>           // id: %619
  destroy_value %110 : $@callee_guaranteed () -> () // id: %620
  destroy_value %94 : $@callee_guaranteed () -> () // id: %621
  destroy_value %80 : $@callee_guaranteed () -> () // id: %622
  destroy_value %70 : $@callee_guaranteed () -> () // id: %623
  destroy_value %59 : ${ var Int }                // id: %624
  destroy_value %11 : $Number                     // id: %625
  destroy_value %5 : $Empty                       // id: %626
  destroy_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %627
  %628 = tuple ()                                 // user: %629
  return %628 : $()                               // id: %629
} // end sil function '$s4file3fooyyF'

  *** SIL function after  #430, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// foo()
sil hidden [ossa] @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %627, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %626, %102, %87, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %11
  %8 = integer_literal $Builtin.Int64, 0          // user: %9
  %9 = struct $Int (%8 : $Builtin.Int64)          // user: %11
  // function_ref Number.__allocating_init(number:)
  %10 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %11
  %11 = apply %10(%9, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %625, %98, %83, %73, %64, %12
  debug_value %11 : $Number, let, name "number"   // id: %12
  %13 = integer_literal $Builtin.Word, 1          // user: %15
  // function_ref _allocateUninitializedArray<A>(_:)
  %14 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %15
  %15 = apply %14<Any>(%13) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %16
  (%16, %17) = destructure_tuple %15 : $(Array<Any>, Builtin.RawPointer) // users: %35, %32, %18
  %18 = pointer_to_address %17 : $Builtin.RawPointer to [strict] $*Any // user: %25
  %19 = string_literal utf8 "===== Did init"      // user: %24
  %20 = integer_literal $Builtin.Word, 14         // user: %24
  %21 = integer_literal $Builtin.Int1, -1         // user: %24
  %22 = metatype $@thin String.Type               // user: %24
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %23 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %24
  %24 = apply %23(%19, %20, %21, %22) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %25 = init_existential_addr %18 : $*Any, $String // user: %26
  store %24 to [init] %25 : $*String              // id: %26
  // function_ref default argument 1 of print(_:separator:terminator:)
  %27 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %28
  %28 = apply %27() : $@convention(thin) () -> @owned String // users: %34, %32
  // function_ref default argument 2 of print(_:separator:terminator:)
  %29 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %30
  %30 = apply %29() : $@convention(thin) () -> @owned String // users: %33, %32
  // function_ref print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %32
  %32 = apply %31(%16, %28, %30) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %30 : $String                     // id: %33
  destroy_value %28 : $String                     // id: %34
  destroy_value %16 : $Array<Any>                 // id: %35
  %36 = integer_literal $Builtin.Word, 1          // user: %38
  // function_ref _allocateUninitializedArray<A>(_:)
  %37 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %38
  %38 = apply %37<Any>(%36) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %39
  (%39, %40) = destructure_tuple %38 : $(Array<Any>, Builtin.RawPointer) // users: %58, %55, %41
  %41 = pointer_to_address %40 : $Builtin.RawPointer to [strict] $*Any // user: %48
  %42 = string_literal utf8 "===== Did hook"      // user: %47
  %43 = integer_literal $Builtin.Word, 14         // user: %47
  %44 = integer_literal $Builtin.Int1, -1         // user: %47
  %45 = metatype $@thin String.Type               // user: %47
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %46 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %47
  %47 = apply %46(%42, %43, %44, %45) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %49
  %48 = init_existential_addr %41 : $*Any, $String // user: %49
  store %47 to [init] %48 : $*String              // id: %49
  // function_ref default argument 1 of print(_:separator:terminator:)
  %50 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %51
  %51 = apply %50() : $@convention(thin) () -> @owned String // users: %57, %55
  // function_ref default argument 2 of print(_:separator:terminator:)
  %52 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %53
  %53 = apply %52() : $@convention(thin) () -> @owned String // users: %56, %55
  // function_ref print(_:separator:terminator:)
  %54 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %55
  %55 = apply %54(%39, %51, %53) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %53 : $String                     // id: %56
  destroy_value %51 : $String                     // id: %57
  destroy_value %39 : $Array<Any>                 // id: %58
  %59 = alloc_box ${ var Int }, var, name "value" // users: %624, %109, %79, %60
  %60 = project_box %59 : ${ var Int }, 0         // users: %452, %63
  %61 = integer_literal $Builtin.Int64, 0         // user: %62
  %62 = struct $Int (%61 : $Builtin.Int64)        // user: %63
  store %62 to [trivial] %60 : $*Int              // id: %63
  %64 = begin_borrow %11 : $Number                // users: %67, %65
  %65 = copy_value %64 : $Number                  // users: %72, %69, %66
  debug_value %65 : $Number, let, name "number"   // id: %66
  end_borrow %64 : $Number                        // id: %67
  // function_ref closure #2 in foo()
  %68 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %70
  %69 = copy_value %65 : $Number                  // user: %70
  %70 = partial_apply [callee_guaranteed] %68(%69) : $@convention(thin) (@guaranteed Number) -> () // users: %623, %235, %71
  debug_value %70 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %71
  destroy_value %65 : $Number                     // id: %72
  %73 = begin_borrow %11 : $Number                // users: %76, %74
  %74 = copy_value %73 : $Number                  // users: %82, %78, %75
  debug_value %74 : $Number, let, name "number"   // id: %75
  end_borrow %73 : $Number                        // id: %76
  // function_ref closure #3 in foo()
  %77 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %80
  %78 = copy_value %74 : $Number                  // user: %80
  %79 = copy_value %59 : ${ var Int }             // user: %80
  %80 = partial_apply [callee_guaranteed] %77(%78, %79) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %622, %275, %81
  debug_value %80 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %81
  destroy_value %74 : $Number                     // id: %82
  %83 = begin_borrow %11 : $Number                // users: %86, %84
  %84 = copy_value %83 : $Number                  // users: %97, %92, %85
  debug_value %84 : $Number, let, name "number"   // id: %85
  end_borrow %83 : $Number                        // id: %86
  %87 = begin_borrow %5 : $Empty                  // users: %90, %88
  %88 = copy_value %87 : $Empty                   // users: %96, %93, %89
  debug_value %88 : $Empty, let, name "empty"     // id: %89
  end_borrow %87 : $Empty                         // id: %90
  // function_ref closure #4 in foo()
  %91 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %94
  %92 = copy_value %84 : $Number                  // user: %94
  %93 = copy_value %88 : $Empty                   // user: %94
  %94 = partial_apply [callee_guaranteed] %91(%92, %93) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %621, %315, %95
  debug_value %94 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %95
  destroy_value %88 : $Empty                      // id: %96
  destroy_value %84 : $Number                     // id: %97
  %98 = begin_borrow %11 : $Number                // users: %101, %99
  %99 = copy_value %98 : $Number                  // users: %113, %107, %100
  debug_value %99 : $Number, let, name "number"   // id: %100
  end_borrow %98 : $Number                        // id: %101
  %102 = begin_borrow %5 : $Empty                 // users: %105, %103
  %103 = copy_value %102 : $Empty                 // users: %112, %108, %104
  debug_value %103 : $Empty, let, name "empty"    // id: %104
  end_borrow %102 : $Empty                        // id: %105
  // function_ref closure #5 in foo()
  %106 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %110
  %107 = copy_value %99 : $Number                 // user: %110
  %108 = copy_value %103 : $Empty                 // user: %110
  %109 = copy_value %59 : ${ var Int }            // user: %110
  %110 = partial_apply [callee_guaranteed] %106(%107, %108, %109) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %620, %355, %111
  debug_value %110 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %111
  destroy_value %103 : $Empty                     // id: %112
  destroy_value %99 : $Number                     // id: %113
  %114 = integer_literal $Builtin.Word, 1         // user: %116
  // function_ref _allocateUninitializedArray<A>(_:)
  %115 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %116
  %116 = apply %115<Any>(%114) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %117
  (%117, %118) = destructure_tuple %116 : $(Array<Any>, Builtin.RawPointer) // users: %136, %133, %119
  %119 = pointer_to_address %118 : $Builtin.RawPointer to [strict] $*Any // user: %126
  %120 = string_literal utf8 "===== Did init closures" // user: %125
  %121 = integer_literal $Builtin.Word, 23        // user: %125
  %122 = integer_literal $Builtin.Int1, -1        // user: %125
  %123 = metatype $@thin String.Type              // user: %125
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %124 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %125
  %125 = apply %124(%120, %121, %122, %123) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %127
  %126 = init_existential_addr %119 : $*Any, $String // user: %127
  store %125 to [init] %126 : $*String            // id: %127
  // function_ref default argument 1 of print(_:separator:terminator:)
  %128 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %129
  %129 = apply %128() : $@convention(thin) () -> @owned String // users: %135, %133
  // function_ref default argument 2 of print(_:separator:terminator:)
  %130 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %131
  %131 = apply %130() : $@convention(thin) () -> @owned String // users: %134, %133
  // function_ref print(_:separator:terminator:)
  %132 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %133
  %133 = apply %132(%117, %129, %131) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %131 : $String                    // id: %134
  destroy_value %129 : $String                    // id: %135
  destroy_value %117 : $Array<Any>                // id: %136
  %137 = alloc_stack $Array<Closure>, var, name "storage" // users: %619, %618, %141, %144, %242, %282, %322, %362, %394, %415, %491
  %138 = metatype $@thin Array<Closure>.Type      // user: %140
  // function_ref Array.init()
  %139 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %140
  %140 = apply %139<Closure>(%138) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %141
  store %140 to [init] %137 : $*Array<Closure>    // id: %141
  %142 = integer_literal $Builtin.Int64, 100      // user: %143
  %143 = struct $Int (%142 : $Builtin.Int64)      // user: %146
  %144 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %147, %146
  // function_ref Array.reserveCapacity(_:)
  %145 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %146
  %146 = apply %145<Closure>(%143, %144) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %144 : $*Array<Closure>              // id: %147
  %148 = integer_literal $Builtin.Word, 1         // user: %150
  // function_ref _allocateUninitializedArray<A>(_:)
  %149 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %150
  %150 = apply %149<Any>(%148) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %151
  (%151, %152) = destructure_tuple %150 : $(Array<Any>, Builtin.RawPointer) // users: %170, %167, %153
  %153 = pointer_to_address %152 : $Builtin.RawPointer to [strict] $*Any // user: %160
  %154 = string_literal utf8 "===== Did init array" // user: %159
  %155 = integer_literal $Builtin.Word, 20        // user: %159
  %156 = integer_literal $Builtin.Int1, -1        // user: %159
  %157 = metatype $@thin String.Type              // user: %159
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %158 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %159
  %159 = apply %158(%154, %155, %156, %157) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %161
  %160 = init_existential_addr %153 : $*Any, $String // user: %161
  store %159 to [init] %160 : $*String            // id: %161
  // function_ref default argument 1 of print(_:separator:terminator:)
  %162 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %163
  %163 = apply %162() : $@convention(thin) () -> @owned String // users: %169, %167
  // function_ref default argument 2 of print(_:separator:terminator:)
  %164 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %165
  %165 = apply %164() : $@convention(thin) () -> @owned String // users: %168, %167
  // function_ref print(_:separator:terminator:)
  %166 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %167
  %167 = apply %166(%151, %163, %165) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %165 : $String                    // id: %168
  destroy_value %163 : $String                    // id: %169
  destroy_value %151 : $Array<Any>                // id: %170
  %171 = alloc_stack $Bool, var, name "run"       // users: %617, %174, %176, %561
  %172 = integer_literal $Builtin.Int1, -1        // user: %173
  %173 = struct $Bool (%172 : $Builtin.Int1)      // user: %174
  store %173 to [trivial] %171 : $*Bool           // id: %174
  br bb1                                          // id: %175

bb1:                                              // Preds: bb25 bb0
  %176 = begin_access [read] [static] %171 : $*Bool // users: %177, %179
  %177 = struct_element_addr %176 : $*Bool, #Bool._value // user: %178
  %178 = load [trivial] %177 : $*Builtin.Int1     // user: %180
  end_access %176 : $*Bool                        // id: %179
  cond_br %178, bb2, bb26                         // id: %180

bb2:                                              // Preds: bb1
  %181 = integer_literal $Builtin.Word, 1         // user: %183
  // function_ref _allocateUninitializedArray<A>(_:)
  %182 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %183
  %183 = apply %182<Any>(%181) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %184
  (%184, %185) = destructure_tuple %183 : $(Array<Any>, Builtin.RawPointer) // users: %203, %200, %186
  %186 = pointer_to_address %185 : $Builtin.RawPointer to [strict] $*Any // user: %193
  %187 = string_literal utf8 "===== Ask"          // user: %192
  %188 = integer_literal $Builtin.Word, 9         // user: %192
  %189 = integer_literal $Builtin.Int1, -1        // user: %192
  %190 = metatype $@thin String.Type              // user: %192
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %191 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %192
  %192 = apply %191(%187, %188, %189, %190) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %194
  %193 = init_existential_addr %186 : $*Any, $String // user: %194
  store %192 to [init] %193 : $*String            // id: %194
  // function_ref default argument 1 of print(_:separator:terminator:)
  %195 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %196
  %196 = apply %195() : $@convention(thin) () -> @owned String // users: %202, %200
  // function_ref default argument 2 of print(_:separator:terminator:)
  %197 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %198
  %198 = apply %197() : $@convention(thin) () -> @owned String // users: %201, %200
  // function_ref print(_:separator:terminator:)
  %199 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %200
  %200 = apply %199(%184, %196, %198) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %198 : $String                    // id: %201
  destroy_value %196 : $String                    // id: %202
  destroy_value %184 : $Array<Any>                // id: %203
  // function_ref default argument 0 of readLine(strippingNewline:)
  %204 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %205
  %205 = apply %204() : $@convention(thin) () -> Bool // user: %207
  // function_ref readLine(strippingNewline:)
  %206 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %207
  %207 = apply %206(%205) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %592, %209, %208
  debug_value %207 : $Optional<String>, let, name "line" // id: %208
  %209 = begin_borrow %207 : $Optional<String>    // users: %590, %564, %535, %527, %467, %464, %427, %422, %370, %367, %330, %327, %290, %287, %250, %247, %210
  %210 = copy_value %209 : $Optional<String>      // users: %233, %249, %221, %211
  debug_value %210 : $Optional<String>, let, name "$match" // id: %211
  %212 = string_literal utf8 "push1"              // user: %217
  %213 = integer_literal $Builtin.Word, 5         // user: %217
  %214 = integer_literal $Builtin.Int1, -1        // user: %217
  %215 = metatype $@thin String.Type              // user: %217
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %216 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %217
  %217 = apply %216(%212, %213, %214, %215) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %218
  %218 = enum $Optional<String>, #Optional.some!enumelt, %217 : $String // user: %220
  %219 = alloc_stack $Optional<String>            // users: %226, %230, %229, %220
  store %218 to [init] %219 : $*Optional<String>  // id: %220
  %221 = begin_borrow %210 : $Optional<String>    // users: %228, %223
  %222 = alloc_stack $Optional<String>            // users: %226, %227, %223
  %223 = store_borrow %221 to %222 : $*Optional<String>
  %224 = metatype $@thin Optional<String>.Type    // user: %226
  // function_ref static Optional<A>.== infix(_:_:)
  %225 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %226
  %226 = apply %225<String>(%219, %222, %224) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %231
  dealloc_stack %222 : $*Optional<String>         // id: %227
  end_borrow %221 : $Optional<String>             // id: %228
  destroy_addr %219 : $*Optional<String>          // id: %229
  dealloc_stack %219 : $*Optional<String>         // id: %230
  %231 = struct_extract %226 : $Bool, #Bool._value // user: %232
  cond_br %231, bb3, bb4                          // id: %232

bb3:                                              // Preds: bb2
  destroy_value %210 : $Optional<String>          // id: %233
  %234 = metatype $@thick Closure.Type            // user: %238
  %235 = begin_borrow %70 : $@callee_guaranteed () -> () // users: %239, %236
  %236 = copy_value %235 : $@callee_guaranteed () -> () // user: %238
  // function_ref Closure.__allocating_init(_:)
  %237 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %238
  %238 = apply %237(%236, %234) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %241
  end_borrow %235 : $@callee_guaranteed () -> ()  // id: %239
  %240 = alloc_stack $Closure                     // users: %246, %244, %241
  store %238 to [init] %240 : $*Closure           // id: %241
  %242 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %245, %244
  // function_ref Array.append(_:)
  %243 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %244
  %244 = apply %243<Closure>(%240, %242) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %242 : $*Array<Closure>              // id: %245
  dealloc_stack %240 : $*Closure                  // id: %246
  end_borrow %209 : $Optional<String>             // id: %247
  br bb25                                         // id: %248

bb4:                                              // Preds: bb2
  destroy_value %210 : $Optional<String>          // id: %249
  %250 = copy_value %209 : $Optional<String>      // users: %273, %289, %261, %251
  debug_value %250 : $Optional<String>, let, name "$match" // id: %251
  %252 = string_literal utf8 "push1_1"            // user: %257
  %253 = integer_literal $Builtin.Word, 7         // user: %257
  %254 = integer_literal $Builtin.Int1, -1        // user: %257
  %255 = metatype $@thin String.Type              // user: %257
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %256 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %257
  %257 = apply %256(%252, %253, %254, %255) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %258
  %258 = enum $Optional<String>, #Optional.some!enumelt, %257 : $String // user: %260
  %259 = alloc_stack $Optional<String>            // users: %266, %270, %269, %260
  store %258 to [init] %259 : $*Optional<String>  // id: %260
  %261 = begin_borrow %250 : $Optional<String>    // users: %268, %263
  %262 = alloc_stack $Optional<String>            // users: %266, %267, %263
  %263 = store_borrow %261 to %262 : $*Optional<String>
  %264 = metatype $@thin Optional<String>.Type    // user: %266
  // function_ref static Optional<A>.== infix(_:_:)
  %265 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %266
  %266 = apply %265<String>(%259, %262, %264) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %271
  dealloc_stack %262 : $*Optional<String>         // id: %267
  end_borrow %261 : $Optional<String>             // id: %268
  destroy_addr %259 : $*Optional<String>          // id: %269
  dealloc_stack %259 : $*Optional<String>         // id: %270
  %271 = struct_extract %266 : $Bool, #Bool._value // user: %272
  cond_br %271, bb5, bb6                          // id: %272

bb5:                                              // Preds: bb4
  destroy_value %250 : $Optional<String>          // id: %273
  %274 = metatype $@thick Closure.Type            // user: %278
  %275 = begin_borrow %80 : $@callee_guaranteed () -> () // users: %279, %276
  %276 = copy_value %275 : $@callee_guaranteed () -> () // user: %278
  // function_ref Closure.__allocating_init(_:)
  %277 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %278
  %278 = apply %277(%276, %274) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %281
  end_borrow %275 : $@callee_guaranteed () -> ()  // id: %279
  %280 = alloc_stack $Closure                     // users: %286, %284, %281
  store %278 to [init] %280 : $*Closure           // id: %281
  %282 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %285, %284
  // function_ref Array.append(_:)
  %283 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %284
  %284 = apply %283<Closure>(%280, %282) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %282 : $*Array<Closure>              // id: %285
  dealloc_stack %280 : $*Closure                  // id: %286
  end_borrow %209 : $Optional<String>             // id: %287
  br bb25                                         // id: %288

bb6:                                              // Preds: bb4
  destroy_value %250 : $Optional<String>          // id: %289
  %290 = copy_value %209 : $Optional<String>      // users: %313, %329, %301, %291
  debug_value %290 : $Optional<String>, let, name "$match" // id: %291
  %292 = string_literal utf8 "push2"              // user: %297
  %293 = integer_literal $Builtin.Word, 5         // user: %297
  %294 = integer_literal $Builtin.Int1, -1        // user: %297
  %295 = metatype $@thin String.Type              // user: %297
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %296 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %297
  %297 = apply %296(%292, %293, %294, %295) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %298
  %298 = enum $Optional<String>, #Optional.some!enumelt, %297 : $String // user: %300
  %299 = alloc_stack $Optional<String>            // users: %306, %310, %309, %300
  store %298 to [init] %299 : $*Optional<String>  // id: %300
  %301 = begin_borrow %290 : $Optional<String>    // users: %308, %303
  %302 = alloc_stack $Optional<String>            // users: %306, %307, %303
  %303 = store_borrow %301 to %302 : $*Optional<String>
  %304 = metatype $@thin Optional<String>.Type    // user: %306
  // function_ref static Optional<A>.== infix(_:_:)
  %305 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %306
  %306 = apply %305<String>(%299, %302, %304) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %311
  dealloc_stack %302 : $*Optional<String>         // id: %307
  end_borrow %301 : $Optional<String>             // id: %308
  destroy_addr %299 : $*Optional<String>          // id: %309
  dealloc_stack %299 : $*Optional<String>         // id: %310
  %311 = struct_extract %306 : $Bool, #Bool._value // user: %312
  cond_br %311, bb7, bb8                          // id: %312

bb7:                                              // Preds: bb6
  destroy_value %290 : $Optional<String>          // id: %313
  %314 = metatype $@thick Closure.Type            // user: %318
  %315 = begin_borrow %94 : $@callee_guaranteed () -> () // users: %319, %316
  %316 = copy_value %315 : $@callee_guaranteed () -> () // user: %318
  // function_ref Closure.__allocating_init(_:)
  %317 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %318
  %318 = apply %317(%316, %314) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %321
  end_borrow %315 : $@callee_guaranteed () -> ()  // id: %319
  %320 = alloc_stack $Closure                     // users: %326, %324, %321
  store %318 to [init] %320 : $*Closure           // id: %321
  %322 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %325, %324
  // function_ref Array.append(_:)
  %323 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %324
  %324 = apply %323<Closure>(%320, %322) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %322 : $*Array<Closure>              // id: %325
  dealloc_stack %320 : $*Closure                  // id: %326
  end_borrow %209 : $Optional<String>             // id: %327
  br bb25                                         // id: %328

bb8:                                              // Preds: bb6
  destroy_value %290 : $Optional<String>          // id: %329
  %330 = copy_value %209 : $Optional<String>      // users: %353, %369, %341, %331
  debug_value %330 : $Optional<String>, let, name "$match" // id: %331
  %332 = string_literal utf8 "push2_1"            // user: %337
  %333 = integer_literal $Builtin.Word, 7         // user: %337
  %334 = integer_literal $Builtin.Int1, -1        // user: %337
  %335 = metatype $@thin String.Type              // user: %337
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %336 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %337
  %337 = apply %336(%332, %333, %334, %335) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %338
  %338 = enum $Optional<String>, #Optional.some!enumelt, %337 : $String // user: %340
  %339 = alloc_stack $Optional<String>            // users: %346, %350, %349, %340
  store %338 to [init] %339 : $*Optional<String>  // id: %340
  %341 = begin_borrow %330 : $Optional<String>    // users: %348, %343
  %342 = alloc_stack $Optional<String>            // users: %346, %347, %343
  %343 = store_borrow %341 to %342 : $*Optional<String>
  %344 = metatype $@thin Optional<String>.Type    // user: %346
  // function_ref static Optional<A>.== infix(_:_:)
  %345 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %346
  %346 = apply %345<String>(%339, %342, %344) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %351
  dealloc_stack %342 : $*Optional<String>         // id: %347
  end_borrow %341 : $Optional<String>             // id: %348
  destroy_addr %339 : $*Optional<String>          // id: %349
  dealloc_stack %339 : $*Optional<String>         // id: %350
  %351 = struct_extract %346 : $Bool, #Bool._value // user: %352
  cond_br %351, bb9, bb10                         // id: %352

bb9:                                              // Preds: bb8
  destroy_value %330 : $Optional<String>          // id: %353
  %354 = metatype $@thick Closure.Type            // user: %358
  %355 = begin_borrow %110 : $@callee_guaranteed () -> () // users: %359, %356
  %356 = copy_value %355 : $@callee_guaranteed () -> () // user: %358
  // function_ref Closure.__allocating_init(_:)
  %357 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %358
  %358 = apply %357(%356, %354) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %361
  end_borrow %355 : $@callee_guaranteed () -> ()  // id: %359
  %360 = alloc_stack $Closure                     // users: %366, %364, %361
  store %358 to [init] %360 : $*Closure           // id: %361
  %362 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %365, %364
  // function_ref Array.append(_:)
  %363 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %364
  %364 = apply %363<Closure>(%360, %362) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %362 : $*Array<Closure>              // id: %365
  dealloc_stack %360 : $*Closure                  // id: %366
  end_borrow %209 : $Optional<String>             // id: %367
  br bb25                                         // id: %368

bb10:                                             // Preds: bb8
  destroy_value %330 : $Optional<String>          // id: %369
  %370 = copy_value %209 : $Optional<String>      // users: %393, %425, %381, %371
  debug_value %370 : $Optional<String>, let, name "$match" // id: %371
  %372 = string_literal utf8 "pop"                // user: %377
  %373 = integer_literal $Builtin.Word, 3         // user: %377
  %374 = integer_literal $Builtin.Int1, -1        // user: %377
  %375 = metatype $@thin String.Type              // user: %377
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %376 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %377
  %377 = apply %376(%372, %373, %374, %375) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %378
  %378 = enum $Optional<String>, #Optional.some!enumelt, %377 : $String // user: %380
  %379 = alloc_stack $Optional<String>            // users: %386, %390, %389, %380
  store %378 to [init] %379 : $*Optional<String>  // id: %380
  %381 = begin_borrow %370 : $Optional<String>    // users: %388, %383
  %382 = alloc_stack $Optional<String>            // users: %386, %387, %383
  %383 = store_borrow %381 to %382 : $*Optional<String>
  %384 = metatype $@thin Optional<String>.Type    // user: %386
  // function_ref static Optional<A>.== infix(_:_:)
  %385 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %386
  %386 = apply %385<String>(%379, %382, %384) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %391
  dealloc_stack %382 : $*Optional<String>         // id: %387
  end_borrow %381 : $Optional<String>             // id: %388
  destroy_addr %379 : $*Optional<String>          // id: %389
  dealloc_stack %379 : $*Optional<String>         // id: %390
  %391 = struct_extract %386 : $Bool, #Bool._value // user: %392
  cond_br %391, bb11, bb14                        // id: %392

bb11:                                             // Preds: bb10
  destroy_value %370 : $Optional<String>          // id: %393
  %394 = begin_access [read] [static] %137 : $*Array<Closure> // users: %396, %395
  %395 = load [copy] %394 : $*Array<Closure>      // users: %407, %397
  end_access %394 : $*Array<Closure>              // id: %396
  %397 = begin_borrow %395 : $Array<Closure>      // users: %406, %399
  %398 = alloc_stack $Array<Closure>              // users: %412, %400, %399
  %399 = store_borrow %397 to %398 : $*Array<Closure>
  %400 = load_borrow %398 : $*Array<Closure>      // users: %411, %402
  %401 = alloc_stack $Array<Closure>              // users: %405, %404, %402
  %402 = store_borrow %400 to %401 : $*Array<Closure>
  // function_ref Collection.isEmpty.getter
  %403 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %404
  %404 = apply %403<[Closure]>(%401) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %408
  dealloc_stack %401 : $*Array<Closure>           // id: %405
  end_borrow %397 : $Array<Closure>               // id: %406
  destroy_value %395 : $Array<Closure>            // id: %407
  %408 = struct_extract %404 : $Bool, #Bool._value // user: %410
  %409 = integer_literal $Builtin.Int1, -1        // user: %410
  %410 = builtin "xor_Int1"(%408 : $Builtin.Int1, %409 : $Builtin.Int1) : $Builtin.Int1 // user: %413
  end_borrow %400 : $Array<Closure>               // id: %411
  dealloc_stack %398 : $*Array<Closure>           // id: %412
  cond_br %410, bb12, bb13                        // id: %413

bb12:                                             // Preds: bb11
  %414 = alloc_stack $Closure                     // users: %421, %419, %417
  %415 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %418, %417
  // function_ref RangeReplaceableCollection<>.removeLast()
  %416 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %417
  %417 = apply %416<[Closure]>(%414, %415) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %415 : $*Array<Closure>              // id: %418
  %419 = load [take] %414 : $*Closure             // user: %420
  destroy_value %419 : $Closure                   // id: %420
  dealloc_stack %414 : $*Closure                  // id: %421
  end_borrow %209 : $Optional<String>             // id: %422
  br bb25                                         // id: %423

bb13:                                             // Preds: bb11
  br bb15                                         // id: %424

bb14:                                             // Preds: bb10
  destroy_value %370 : $Optional<String>          // id: %425
  br bb15                                         // id: %426

bb15:                                             // Preds: bb13 bb14
  %427 = copy_value %209 : $Optional<String>      // users: %450, %466, %438, %428
  debug_value %427 : $Optional<String>, let, name "$match" // id: %428
  %429 = string_literal utf8 "inc"                // user: %434
  %430 = integer_literal $Builtin.Word, 3         // user: %434
  %431 = integer_literal $Builtin.Int1, -1        // user: %434
  %432 = metatype $@thin String.Type              // user: %434
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %433 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %434
  %434 = apply %433(%429, %430, %431, %432) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %435
  %435 = enum $Optional<String>, #Optional.some!enumelt, %434 : $String // user: %437
  %436 = alloc_stack $Optional<String>            // users: %443, %447, %446, %437
  store %435 to [init] %436 : $*Optional<String>  // id: %437
  %438 = begin_borrow %427 : $Optional<String>    // users: %445, %440
  %439 = alloc_stack $Optional<String>            // users: %443, %444, %440
  %440 = store_borrow %438 to %439 : $*Optional<String>
  %441 = metatype $@thin Optional<String>.Type    // user: %443
  // function_ref static Optional<A>.== infix(_:_:)
  %442 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %443
  %443 = apply %442<String>(%436, %439, %441) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %448
  dealloc_stack %439 : $*Optional<String>         // id: %444
  end_borrow %438 : $Optional<String>             // id: %445
  destroy_addr %436 : $*Optional<String>          // id: %446
  dealloc_stack %436 : $*Optional<String>         // id: %447
  %448 = struct_extract %443 : $Bool, #Bool._value // user: %449
  cond_br %448, bb16, bb17                        // id: %449

bb16:                                             // Preds: bb15
  destroy_value %427 : $Optional<String>          // id: %450
  %451 = integer_literal $Builtin.Int64, 1        // user: %456
  %452 = begin_access [modify] [dynamic] %60 : $*Int // users: %461, %453, %463
  %453 = struct_element_addr %452 : $*Int, #Int._value // user: %454
  %454 = load [trivial] %453 : $*Builtin.Int64    // user: %456
  %455 = integer_literal $Builtin.Int1, -1        // user: %456
  %456 = builtin "sadd_with_overflow_Int64"(%454 : $Builtin.Int64, %451 : $Builtin.Int64, %455 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %457
  (%457, %458) = destructure_tuple %456 : $(Builtin.Int64, Builtin.Int1) // users: %460, %459
  cond_fail %458 : $Builtin.Int1, "arithmetic overflow" // id: %459
  %460 = struct $Int (%457 : $Builtin.Int64)      // user: %461
  store %460 to [trivial] %452 : $*Int            // id: %461
  %462 = tuple ()
  end_access %452 : $*Int                         // id: %463
  end_borrow %209 : $Optional<String>             // id: %464
  br bb25                                         // id: %465

bb17:                                             // Preds: bb15
  destroy_value %427 : $Optional<String>          // id: %466
  %467 = copy_value %209 : $Optional<String>      // users: %490, %534, %478, %468
  debug_value %467 : $Optional<String>, let, name "$match" // id: %468
  %469 = string_literal utf8 "exec"               // user: %474
  %470 = integer_literal $Builtin.Word, 4         // user: %474
  %471 = integer_literal $Builtin.Int1, -1        // user: %474
  %472 = metatype $@thin String.Type              // user: %474
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %473 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %474
  %474 = apply %473(%469, %470, %471, %472) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %475
  %475 = enum $Optional<String>, #Optional.some!enumelt, %474 : $String // user: %477
  %476 = alloc_stack $Optional<String>            // users: %483, %487, %486, %477
  store %475 to [init] %476 : $*Optional<String>  // id: %477
  %478 = begin_borrow %467 : $Optional<String>    // users: %485, %480
  %479 = alloc_stack $Optional<String>            // users: %483, %484, %480
  %480 = store_borrow %478 to %479 : $*Optional<String>
  %481 = metatype $@thin Optional<String>.Type    // user: %483
  // function_ref static Optional<A>.== infix(_:_:)
  %482 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %483
  %483 = apply %482<String>(%476, %479, %481) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %488
  dealloc_stack %479 : $*Optional<String>         // id: %484
  end_borrow %478 : $Optional<String>             // id: %485
  destroy_addr %476 : $*Optional<String>          // id: %486
  dealloc_stack %476 : $*Optional<String>         // id: %487
  %488 = struct_extract %483 : $Bool, #Bool._value // user: %489
  cond_br %488, bb18, bb22                        // id: %489

bb18:                                             // Preds: bb17
  destroy_value %467 : $Optional<String>          // id: %490
  %491 = begin_access [read] [static] %137 : $*Array<Closure> // users: %493, %492
  %492 = load [copy] %491 : $*Array<Closure>      // users: %506, %494
  end_access %491 : $*Array<Closure>              // id: %493
  %494 = begin_borrow %492 : $Array<Closure>      // users: %505, %496
  %495 = alloc_stack $Array<Closure>              // users: %524, %531, %497, %496
  %496 = store_borrow %494 to %495 : $*Array<Closure>
  %497 = load_borrow %495 : $*Array<Closure>      // users: %523, %530, %500
  %498 = alloc_stack $Optional<Closure>           // users: %522, %529, %504, %502
  %499 = alloc_stack $Array<Closure>              // users: %503, %502, %500
  %500 = store_borrow %497 to %499 : $*Array<Closure>
  // function_ref BidirectionalCollection.last.getter
  %501 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %502
  %502 = apply %501<[Closure]>(%498, %499) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %499 : $*Array<Closure>           // id: %503
  %504 = load [take] %498 : $*Optional<Closure>   // user: %507
  end_borrow %494 : $Array<Closure>               // id: %505
  destroy_value %492 : $Array<Closure>            // id: %506
  switch_enum %504 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %507

// %508                                           // users: %515, %509
bb19(%508 : @owned $Closure):                     // Preds: bb18
  %509 = begin_borrow %508 : $Closure             // users: %514, %510
  %510 = ref_element_addr %509 : $Closure, #Closure.closure // user: %511
  %511 = begin_access [read] [dynamic] %510 : $*@callee_guaranteed () -> () // users: %513, %512
  %512 = load [copy] %511 : $*@callee_guaranteed () -> () // users: %521, %516
  end_access %511 : $*@callee_guaranteed () -> () // id: %513
  end_borrow %509 : $Closure                      // id: %514
  destroy_value %508 : $Closure                   // id: %515
  %516 = begin_borrow %512 : $@callee_guaranteed () -> () // users: %518, %517
  %517 = apply %516() : $@callee_guaranteed () -> ()
  end_borrow %516 : $@callee_guaranteed () -> ()  // id: %518
  %519 = tuple ()                                 // user: %520
  %520 = enum $Optional<()>, #Optional.some!enumelt, %519 : $() // user: %525
  destroy_value %512 : $@callee_guaranteed () -> () // id: %521
  dealloc_stack %498 : $*Optional<Closure>        // id: %522
  end_borrow %497 : $Array<Closure>               // id: %523
  dealloc_stack %495 : $*Array<Closure>           // id: %524
  br bb20(%520 : $Optional<()>)                   // id: %525

bb20(%526 : $Optional<()>):                       // Preds: bb21 bb19
  end_borrow %209 : $Optional<String>             // id: %527
  br bb25                                         // id: %528

bb21:                                             // Preds: bb18
  dealloc_stack %498 : $*Optional<Closure>        // id: %529
  end_borrow %497 : $Array<Closure>               // id: %530
  dealloc_stack %495 : $*Array<Closure>           // id: %531
  %532 = enum $Optional<()>, #Optional.none!enumelt // user: %533
  br bb20(%532 : $Optional<()>)                   // id: %533

bb22:                                             // Preds: bb17
  destroy_value %467 : $Optional<String>          // id: %534
  %535 = copy_value %209 : $Optional<String>      // users: %558, %566, %546, %536
  debug_value %535 : $Optional<String>, let, name "$match" // id: %536
  %537 = string_literal utf8 "exit"               // user: %542
  %538 = integer_literal $Builtin.Word, 4         // user: %542
  %539 = integer_literal $Builtin.Int1, -1        // user: %542
  %540 = metatype $@thin String.Type              // user: %542
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %541 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %542
  %542 = apply %541(%537, %538, %539, %540) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %543
  %543 = enum $Optional<String>, #Optional.some!enumelt, %542 : $String // user: %545
  %544 = alloc_stack $Optional<String>            // users: %551, %555, %554, %545
  store %543 to [init] %544 : $*Optional<String>  // id: %545
  %546 = begin_borrow %535 : $Optional<String>    // users: %553, %548
  %547 = alloc_stack $Optional<String>            // users: %551, %552, %548
  %548 = store_borrow %546 to %547 : $*Optional<String>
  %549 = metatype $@thin Optional<String>.Type    // user: %551
  // function_ref static Optional<A>.== infix(_:_:)
  %550 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %551
  %551 = apply %550<String>(%544, %547, %549) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %556
  dealloc_stack %547 : $*Optional<String>         // id: %552
  end_borrow %546 : $Optional<String>             // id: %553
  destroy_addr %544 : $*Optional<String>          // id: %554
  dealloc_stack %544 : $*Optional<String>         // id: %555
  %556 = struct_extract %551 : $Bool, #Bool._value // user: %557
  cond_br %556, bb23, bb24                        // id: %557

bb23:                                             // Preds: bb22
  destroy_value %535 : $Optional<String>          // id: %558
  %559 = integer_literal $Builtin.Int1, 0         // user: %560
  %560 = struct $Bool (%559 : $Builtin.Int1)      // user: %562
  %561 = begin_access [modify] [static] %171 : $*Bool // users: %562, %563
  store %560 to [trivial] %561 : $*Bool           // id: %562
  end_access %561 : $*Bool                        // id: %563
  end_borrow %209 : $Optional<String>             // id: %564
  br bb25                                         // id: %565

bb24:                                             // Preds: bb22
  destroy_value %535 : $Optional<String>          // id: %566
  %567 = integer_literal $Builtin.Word, 1         // user: %569
  // function_ref _allocateUninitializedArray<A>(_:)
  %568 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %569
  %569 = apply %568<Any>(%567) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %570
  (%570, %571) = destructure_tuple %569 : $(Array<Any>, Builtin.RawPointer) // users: %589, %586, %572
  %572 = pointer_to_address %571 : $Builtin.RawPointer to [strict] $*Any // user: %579
  %573 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %578
  %574 = integer_literal $Builtin.Word, 44        // user: %578
  %575 = integer_literal $Builtin.Int1, 0         // user: %578
  %576 = metatype $@thin String.Type              // user: %578
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %577 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %578
  %578 = apply %577(%573, %574, %575, %576) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %580
  %579 = init_existential_addr %572 : $*Any, $String // user: %580
  store %578 to [init] %579 : $*String            // id: %580
  // function_ref default argument 1 of print(_:separator:terminator:)
  %581 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %582
  %582 = apply %581() : $@convention(thin) () -> @owned String // users: %588, %586
  // function_ref default argument 2 of print(_:separator:terminator:)
  %583 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %584
  %584 = apply %583() : $@convention(thin) () -> @owned String // users: %587, %586
  // function_ref print(_:separator:terminator:)
  %585 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %586
  %586 = apply %585(%570, %582, %584) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %584 : $String                    // id: %587
  destroy_value %582 : $String                    // id: %588
  destroy_value %570 : $Array<Any>                // id: %589
  end_borrow %209 : $Optional<String>             // id: %590
  br bb25                                         // id: %591

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  destroy_value %207 : $Optional<String>          // id: %592
  br bb1                                          // id: %593

bb26:                                             // Preds: bb1
  %594 = integer_literal $Builtin.Word, 1         // user: %596
  // function_ref _allocateUninitializedArray<A>(_:)
  %595 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %596
  %596 = apply %595<Any>(%594) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %597
  (%597, %598) = destructure_tuple %596 : $(Array<Any>, Builtin.RawPointer) // users: %616, %613, %599
  %599 = pointer_to_address %598 : $Builtin.RawPointer to [strict] $*Any // user: %606
  %600 = string_literal utf8 "===== will end"     // user: %605
  %601 = integer_literal $Builtin.Word, 14        // user: %605
  %602 = integer_literal $Builtin.Int1, -1        // user: %605
  %603 = metatype $@thin String.Type              // user: %605
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %604 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %605
  %605 = apply %604(%600, %601, %602, %603) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %607
  %606 = init_existential_addr %599 : $*Any, $String // user: %607
  store %605 to [init] %606 : $*String            // id: %607
  // function_ref default argument 1 of print(_:separator:terminator:)
  %608 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %609
  %609 = apply %608() : $@convention(thin) () -> @owned String // users: %615, %613
  // function_ref default argument 2 of print(_:separator:terminator:)
  %610 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %611
  %611 = apply %610() : $@convention(thin) () -> @owned String // users: %614, %613
  // function_ref print(_:separator:terminator:)
  %612 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %613
  %613 = apply %612(%597, %609, %611) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %611 : $String                    // id: %614
  destroy_value %609 : $String                    // id: %615
  destroy_value %597 : $Array<Any>                // id: %616
  dealloc_stack %171 : $*Bool                     // id: %617
  destroy_addr %137 : $*Array<Closure>            // id: %618
  dealloc_stack %137 : $*Array<Closure>           // id: %619
  destroy_value %110 : $@callee_guaranteed () -> () // id: %620
  destroy_value %94 : $@callee_guaranteed () -> () // id: %621
  destroy_value %80 : $@callee_guaranteed () -> () // id: %622
  destroy_value %70 : $@callee_guaranteed () -> () // id: %623
  destroy_value %59 : ${ var Int }                // id: %624
  destroy_value %11 : $Number                     // id: %625
  destroy_value %5 : $Empty                       // id: %626
  destroy_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %627
  %628 = tuple ()                                 // user: %629
  return %628 : $()                               // id: %629
} // end sil function '$s4file3fooyyF'

  *** SIL function after  #440, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () {
// %0 "name"                                      // users: %3, %1
bb0(%0 : @guaranteed $String):
  debug_value %0 : $String, let, name "name", argno 1 // id: %1
  // function_ref closure #1 in closure #1 in foo()
  %2 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %4
  %3 = copy_value %0 : $String                    // user: %4
  %4 = partial_apply [callee_guaranteed] %2(%3) : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %5
  return %4 : $@callee_guaranteed (Int, Int, Int) -> () // id: %5
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_'

  *** SIL function after  #447, stage Guaranteed Passes, pass 15: DiagnosticConstantPropagation (diagnostic-constant-propagation)
// closure #1 in closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %53, %4
// %1 "weak"                                      // users: %71, %5
// %2 "unowned"                                   // users: %89, %6
// %3 "name"                                      // users: %35, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : @guaranteed $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %11
  (%11, %12) = destructure_tuple %10 : $(Array<Any>, Builtin.RawPointer) // users: %122, %119, %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %112
  %14 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %108, %107, %22, %29, %36, %47, %54, %65, %72, %83, %90, %101, %106
  %15 = integer_literal $Builtin.Int64, 39        // user: %16
  %16 = struct $Int (%15 : $Builtin.Int64)        // user: %21
  %17 = integer_literal $Builtin.Int64, 4         // user: %18
  %18 = struct $Int (%17 : $Builtin.Int64)        // user: %21
  %19 = metatype $@thin DefaultStringInterpolation.Type // user: %21
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %20 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %21
  %21 = apply %20(%16, %18, %19) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %22
  store %21 to [init] %14 : $*DefaultStringInterpolation // id: %22
  %23 = string_literal utf8 "Name: "              // user: %28
  %24 = integer_literal $Builtin.Word, 6          // user: %28
  %25 = integer_literal $Builtin.Int1, -1         // user: %28
  %26 = metatype $@thin String.Type               // user: %28
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %27 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %28 = apply %27(%23, %24, %25, %26) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %33, %31
  %29 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %32, %31
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %30 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %31
  %31 = apply %30(%28, %29) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %29 : $*DefaultStringInterpolation   // id: %32
  destroy_value %28 : $String                     // id: %33
  %34 = alloc_stack $String                       // users: %40, %38, %35
  %35 = store_borrow %3 to %34 : $*String
  %36 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %39, %38
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %37 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %38
  %38 = apply %37<String>(%34, %36) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %36 : $*DefaultStringInterpolation   // id: %39
  dealloc_stack %34 : $*String                    // id: %40
  %41 = string_literal utf8 "; Strong: ("         // user: %46
  %42 = integer_literal $Builtin.Word, 11         // user: %46
  %43 = integer_literal $Builtin.Int1, -1         // user: %46
  %44 = metatype $@thin String.Type               // user: %46
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %45 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %46
  %46 = apply %45(%41, %42, %43, %44) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %51, %49
  %47 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %50, %49
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %48 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %49
  %49 = apply %48(%46, %47) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %47 : $*DefaultStringInterpolation   // id: %50
  destroy_value %46 : $String                     // id: %51
  %52 = alloc_stack $Int                          // users: %58, %56, %53
  store %0 to [trivial] %52 : $*Int               // id: %53
  %54 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 "); Weak: ("          // user: %64
  %60 = integer_literal $Builtin.Word, 10         // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  destroy_value %64 : $String                     // id: %69
  %70 = alloc_stack $Int                          // users: %76, %74, %71
  store %1 to [trivial] %70 : $*Int               // id: %71
  %72 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %75, %74
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %73 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %74
  %74 = apply %73<Int>(%70, %72) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %72 : $*DefaultStringInterpolation   // id: %75
  dealloc_stack %70 : $*Int                       // id: %76
  %77 = string_literal utf8 "); Unowned("         // user: %82
  %78 = integer_literal $Builtin.Word, 11         // user: %82
  %79 = integer_literal $Builtin.Int1, -1         // user: %82
  %80 = metatype $@thin String.Type               // user: %82
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %81 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %82
  %82 = apply %81(%77, %78, %79, %80) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %87, %85
  %83 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %86, %85
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %84 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %85
  %85 = apply %84(%82, %83) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %83 : $*DefaultStringInterpolation   // id: %86
  destroy_value %82 : $String                     // id: %87
  %88 = alloc_stack $Int                          // users: %94, %92, %89
  store %2 to [trivial] %88 : $*Int               // id: %89
  %90 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %93, %92
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %91 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %92
  %92 = apply %91<Int>(%88, %90) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %90 : $*DefaultStringInterpolation   // id: %93
  dealloc_stack %88 : $*Int                       // id: %94
  %95 = string_literal utf8 ")"                   // user: %100
  %96 = integer_literal $Builtin.Word, 1          // user: %100
  %97 = integer_literal $Builtin.Int1, -1         // user: %100
  %98 = metatype $@thin String.Type               // user: %100
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %99 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %100
  %100 = apply %99(%95, %96, %97, %98) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %105, %103
  %101 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %104, %103
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %102 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %103
  %103 = apply %102(%100, %101) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %101 : $*DefaultStringInterpolation  // id: %104
  destroy_value %100 : $String                    // id: %105
  %106 = load [copy] %14 : $*DefaultStringInterpolation // user: %111
  destroy_addr %14 : $*DefaultStringInterpolation // id: %107
  dealloc_stack %14 : $*DefaultStringInterpolation // id: %108
  %109 = metatype $@thin String.Type              // user: %111
  // function_ref String.init(stringInterpolation:)
  %110 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %111
  %111 = apply %110(%106, %109) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %113
  %112 = init_existential_addr %13 : $*Any, $String // user: %113
  store %111 to [init] %112 : $*String            // id: %113
  // function_ref default argument 1 of print(_:separator:terminator:)
  %114 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %115
  %115 = apply %114() : $@convention(thin) () -> @owned String // users: %121, %119
  // function_ref default argument 2 of print(_:separator:terminator:)
  %116 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %117
  %117 = apply %116() : $@convention(thin) () -> @owned String // users: %120, %119
  // function_ref print(_:separator:terminator:)
  %118 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %119
  %119 = apply %118(%11, %115, %117) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %117 : $String                    // id: %120
  destroy_value %115 : $String                    // id: %121
  destroy_value %11 : $Array<Any>                 // id: %122
  %123 = tuple ()                                 // user: %124
  return %123 : $()                               // id: %124
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

  *** SIL function after  #450, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// closure #1 in closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %53, %4
// %1 "weak"                                      // users: %71, %5
// %2 "unowned"                                   // users: %89, %6
// %3 "name"                                      // users: %35, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : @guaranteed $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %11
  (%11, %12) = destructure_tuple %10 : $(Array<Any>, Builtin.RawPointer) // users: %122, %119, %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %112
  %14 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %108, %107, %22, %29, %36, %47, %54, %65, %72, %83, %90, %101, %106
  %15 = integer_literal $Builtin.Int64, 39        // user: %16
  %16 = struct $Int (%15 : $Builtin.Int64)        // user: %21
  %17 = integer_literal $Builtin.Int64, 4         // user: %18
  %18 = struct $Int (%17 : $Builtin.Int64)        // user: %21
  %19 = metatype $@thin DefaultStringInterpolation.Type // user: %21
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %20 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %21
  %21 = apply %20(%16, %18, %19) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %22
  store %21 to [init] %14 : $*DefaultStringInterpolation // id: %22
  %23 = string_literal utf8 "Name: "              // user: %28
  %24 = integer_literal $Builtin.Word, 6          // user: %28
  %25 = integer_literal $Builtin.Int1, -1         // user: %28
  %26 = metatype $@thin String.Type               // user: %28
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %27 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %28 = apply %27(%23, %24, %25, %26) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %33, %31
  %29 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %32, %31
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %30 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %31
  %31 = apply %30(%28, %29) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %29 : $*DefaultStringInterpolation   // id: %32
  destroy_value %28 : $String                     // id: %33
  %34 = alloc_stack $String                       // users: %40, %38, %35
  %35 = store_borrow %3 to %34 : $*String
  %36 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %39, %38
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %37 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %38
  %38 = apply %37<String>(%34, %36) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %36 : $*DefaultStringInterpolation   // id: %39
  dealloc_stack %34 : $*String                    // id: %40
  %41 = string_literal utf8 "; Strong: ("         // user: %46
  %42 = integer_literal $Builtin.Word, 11         // user: %46
  %43 = integer_literal $Builtin.Int1, -1         // user: %46
  %44 = metatype $@thin String.Type               // user: %46
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %45 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %46
  %46 = apply %45(%41, %42, %43, %44) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %51, %49
  %47 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %50, %49
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %48 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %49
  %49 = apply %48(%46, %47) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %47 : $*DefaultStringInterpolation   // id: %50
  destroy_value %46 : $String                     // id: %51
  %52 = alloc_stack $Int                          // users: %58, %56, %53
  store %0 to [trivial] %52 : $*Int               // id: %53
  %54 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 "); Weak: ("          // user: %64
  %60 = integer_literal $Builtin.Word, 10         // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  destroy_value %64 : $String                     // id: %69
  %70 = alloc_stack $Int                          // users: %76, %74, %71
  store %1 to [trivial] %70 : $*Int               // id: %71
  %72 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %75, %74
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %73 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %74
  %74 = apply %73<Int>(%70, %72) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %72 : $*DefaultStringInterpolation   // id: %75
  dealloc_stack %70 : $*Int                       // id: %76
  %77 = string_literal utf8 "); Unowned("         // user: %82
  %78 = integer_literal $Builtin.Word, 11         // user: %82
  %79 = integer_literal $Builtin.Int1, -1         // user: %82
  %80 = metatype $@thin String.Type               // user: %82
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %81 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %82
  %82 = apply %81(%77, %78, %79, %80) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %87, %85
  %83 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %86, %85
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %84 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %85
  %85 = apply %84(%82, %83) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %83 : $*DefaultStringInterpolation   // id: %86
  destroy_value %82 : $String                     // id: %87
  %88 = alloc_stack $Int                          // users: %94, %92, %89
  store %2 to [trivial] %88 : $*Int               // id: %89
  %90 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %93, %92
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %91 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %92
  %92 = apply %91<Int>(%88, %90) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %90 : $*DefaultStringInterpolation   // id: %93
  dealloc_stack %88 : $*Int                       // id: %94
  %95 = string_literal utf8 ")"                   // user: %100
  %96 = integer_literal $Builtin.Word, 1          // user: %100
  %97 = integer_literal $Builtin.Int1, -1         // user: %100
  %98 = metatype $@thin String.Type               // user: %100
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %99 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %100
  %100 = apply %99(%95, %96, %97, %98) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %105, %103
  %101 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %104, %103
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %102 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %103
  %103 = apply %102(%100, %101) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %101 : $*DefaultStringInterpolation  // id: %104
  destroy_value %100 : $String                    // id: %105
  %106 = load [copy] %14 : $*DefaultStringInterpolation // user: %111
  destroy_addr %14 : $*DefaultStringInterpolation // id: %107
  dealloc_stack %14 : $*DefaultStringInterpolation // id: %108
  %109 = metatype $@thin String.Type              // user: %111
  // function_ref String.init(stringInterpolation:)
  %110 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %111
  %111 = apply %110(%106, %109) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %113
  %112 = init_existential_addr %13 : $*Any, $String // user: %113
  store %111 to [init] %112 : $*String            // id: %113
  // function_ref default argument 1 of print(_:separator:terminator:)
  %114 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %115
  %115 = apply %114() : $@convention(thin) () -> @owned String // users: %121, %119
  // function_ref default argument 2 of print(_:separator:terminator:)
  %116 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %117
  %117 = apply %116() : $@convention(thin) () -> @owned String // users: %120, %119
  // function_ref print(_:separator:terminator:)
  %118 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %119
  %119 = apply %118(%11, %115, %117) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %117 : $String                    // id: %120
  destroy_value %115 : $String                    // id: %121
  destroy_value %11 : $Array<Any>                 // id: %122
  %123 = tuple ()                                 // user: %124
  return %123 : $()                               // id: %124
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

  *** SIL function after  #460, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Int.init(_builtinIntegerLiteral:)
sil public_external [transparent] [serialized] [canonical] [ossa] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int {
// %0                                             // user: %2
bb0(%0 : $Builtin.IntLiteral, %1 : $@thin Int.Type):
  %2 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%0 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %3
  (%3, %4) = destructure_tuple %2 : $(Builtin.Int64, Builtin.Int1) // user: %5
  %5 = struct $Int (%3 : $Builtin.Int64)          // user: %6
  return %5 : $Int                                // id: %6
} // end sil function '$sSi22_builtinIntegerLiteralSiBI_tcfC'

  *** SIL function after  #467, stage Guaranteed Passes, pass 15: DiagnosticConstantPropagation (diagnostic-constant-propagation)
// closure #2 in foo()
sil private [ossa] @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () {
// %0 "number"                                    // users: %3, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %1
  %2 = integer_literal $Builtin.Int64, 1          // user: %8
  %3 = ref_element_addr %0 : $Number, #Number.number // user: %4
  %4 = begin_access [modify] [dynamic] %3 : $*Int // users: %13, %5, %15
  %5 = struct_element_addr %4 : $*Int, #Int._value // user: %6
  %6 = load [trivial] %5 : $*Builtin.Int64        // user: %8
  %7 = integer_literal $Builtin.Int1, -1          // user: %8
  %8 = builtin "sadd_with_overflow_Int64"(%6 : $Builtin.Int64, %2 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %9
  (%9, %10) = destructure_tuple %8 : $(Builtin.Int64, Builtin.Int1) // users: %12, %11
  cond_fail %10 : $Builtin.Int1, "arithmetic overflow" // id: %11
  %12 = struct $Int (%9 : $Builtin.Int64)         // user: %13
  store %12 to [trivial] %4 : $*Int               // id: %13
  %14 = tuple ()
  end_access %4 : $*Int                           // id: %15
  %16 = tuple ()                                  // user: %17
  return %16 : $()                                // id: %17
} // end sil function '$s4file3fooyyFyycfU0_'

  *** SIL function after  #470, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// closure #2 in foo()
sil private [ossa] @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () {
// %0 "number"                                    // users: %3, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %1
  %2 = integer_literal $Builtin.Int64, 1          // user: %8
  %3 = ref_element_addr %0 : $Number, #Number.number // user: %4
  %4 = begin_access [modify] [dynamic] %3 : $*Int // users: %13, %5, %15
  %5 = struct_element_addr %4 : $*Int, #Int._value // user: %6
  %6 = load [trivial] %5 : $*Builtin.Int64        // user: %8
  %7 = integer_literal $Builtin.Int1, -1          // user: %8
  %8 = builtin "sadd_with_overflow_Int64"(%6 : $Builtin.Int64, %2 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %9
  (%9, %10) = destructure_tuple %8 : $(Builtin.Int64, Builtin.Int1) // users: %12, %11
  cond_fail %10 : $Builtin.Int1, "arithmetic overflow" // id: %11
  %12 = struct $Int (%9 : $Builtin.Int64)         // user: %13
  store %12 to [trivial] %4 : $*Int               // id: %13
  %14 = tuple ()
  end_access %4 : $*Int                           // id: %15
  %16 = tuple ()                                  // user: %17
  return %16 : $()                                // id: %17
} // end sil function '$s4file3fooyyFyycfU0_'

  *** SIL function after  #480, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// static Int.+= infix(_:_:)
sil public_external [transparent] [serialized] [canonical] [ossa] @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () {
// %0                                             // users: %14, %3
// %1                                             // user: %5
bb0(%0 : $*Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_element_addr %0 : $*Int, #Int._value // user: %4
  %4 = load [trivial] %3 : $*Builtin.Int64        // user: %7
  %5 = struct_extract %1 : $Int, #Int._value      // user: %7
  %6 = integer_literal $Builtin.Int1, -1          // user: %7
  %7 = builtin "sadd_with_overflow_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %8
  (%8, %9) = destructure_tuple %7 : $(Builtin.Int64, Builtin.Int1) // users: %13, %12
  br bb1                                          // id: %10

bb1:                                              // Preds: bb0
  br bb2                                          // id: %11

bb2:                                              // Preds: bb1
  cond_fail %9 : $Builtin.Int1, "arithmetic overflow" // id: %12
  %13 = struct $Int (%8 : $Builtin.Int64)         // user: %14
  store %13 to [trivial] %0 : $*Int               // id: %14
  %15 = tuple ()                                  // user: %16
  return %15 : $()                                // id: %16
} // end sil function '$sSi2peoiyySiz_SitFZ'

  *** SIL function after  #487, stage Guaranteed Passes, pass 15: DiagnosticConstantPropagation (diagnostic-constant-propagation)
// closure #3 in foo()
sil private [ossa] @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %6, %2
// %1 "value"                                     // user: %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %45, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = integer_literal $Builtin.Int64, 1          // user: %11
  %6 = ref_element_addr %0 : $Number, #Number.number // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*Int // users: %16, %8, %18
  %8 = struct_element_addr %7 : $*Int, #Int._value // user: %9
  %9 = load [trivial] %8 : $*Builtin.Int64        // user: %11
  %10 = integer_literal $Builtin.Int1, -1         // user: %11
  %11 = builtin "sadd_with_overflow_Int64"(%9 : $Builtin.Int64, %5 : $Builtin.Int64, %10 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %12
  (%12, %13) = destructure_tuple %11 : $(Builtin.Int64, Builtin.Int1) // users: %15, %14
  cond_fail %13 : $Builtin.Int1, "arithmetic overflow" // id: %14
  %15 = struct $Int (%12 : $Builtin.Int64)        // user: %16
  store %15 to [trivial] %7 : $*Int               // id: %16
  %17 = tuple ()
  end_access %7 : $*Int                           // id: %18
  %19 = integer_literal $Builtin.Word, 1          // user: %21
  // function_ref _allocateUninitializedArray<A>(_:)
  %20 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %21
  %21 = apply %20<Any>(%19) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %22
  (%22, %23) = destructure_tuple %21 : $(Array<Any>, Builtin.RawPointer) // users: %82, %79, %24
  %24 = pointer_to_address %23 : $Builtin.RawPointer to [strict] $*Any // user: %72
  %25 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %68, %67, %33, %40, %50, %61, %66
  %26 = integer_literal $Builtin.Int64, 3         // user: %27
  %27 = struct $Int (%26 : $Builtin.Int64)        // user: %32
  %28 = integer_literal $Builtin.Int64, 1         // user: %29
  %29 = struct $Int (%28 : $Builtin.Int64)        // user: %32
  %30 = metatype $@thin DefaultStringInterpolation.Type // user: %32
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %31 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %32
  %32 = apply %31(%27, %29, %30) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %33
  store %32 to [init] %25 : $*DefaultStringInterpolation // id: %33
  %34 = string_literal utf8 "v: "                 // user: %39
  %35 = integer_literal $Builtin.Word, 3          // user: %39
  %36 = integer_literal $Builtin.Int1, -1         // user: %39
  %37 = metatype $@thin String.Type               // user: %39
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %38 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %39
  %39 = apply %38(%34, %35, %36, %37) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %44, %42
  %40 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %43, %42
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %41 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %42
  %42 = apply %41(%39, %40) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %40 : $*DefaultStringInterpolation   // id: %43
  destroy_value %39 : $String                     // id: %44
  %45 = begin_access [read] [dynamic] %3 : $*Int  // users: %47, %46
  %46 = load [trivial] %45 : $*Int                // user: %49
  end_access %45 : $*Int                          // id: %47
  %48 = alloc_stack $Int                          // users: %54, %52, %49
  store %46 to [trivial] %48 : $*Int              // id: %49
  %50 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %53, %52
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %51 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %52
  %52 = apply %51<Int>(%48, %50) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %50 : $*DefaultStringInterpolation   // id: %53
  dealloc_stack %48 : $*Int                       // id: %54
  %55 = string_literal utf8 ""                    // user: %60
  %56 = integer_literal $Builtin.Word, 0          // user: %60
  %57 = integer_literal $Builtin.Int1, -1         // user: %60
  %58 = metatype $@thin String.Type               // user: %60
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %59 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %60
  %60 = apply %59(%55, %56, %57, %58) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %65, %63
  %61 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %64, %63
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %62 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %63
  %63 = apply %62(%60, %61) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %61 : $*DefaultStringInterpolation   // id: %64
  destroy_value %60 : $String                     // id: %65
  %66 = load [copy] %25 : $*DefaultStringInterpolation // user: %71
  destroy_addr %25 : $*DefaultStringInterpolation // id: %67
  dealloc_stack %25 : $*DefaultStringInterpolation // id: %68
  %69 = metatype $@thin String.Type               // user: %71
  // function_ref String.init(stringInterpolation:)
  %70 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %71
  %71 = apply %70(%66, %69) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %73
  %72 = init_existential_addr %24 : $*Any, $String // user: %73
  store %71 to [init] %72 : $*String              // id: %73
  // function_ref default argument 1 of print(_:separator:terminator:)
  %74 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %75
  %75 = apply %74() : $@convention(thin) () -> @owned String // users: %81, %79
  // function_ref default argument 2 of print(_:separator:terminator:)
  %76 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %77
  %77 = apply %76() : $@convention(thin) () -> @owned String // users: %80, %79
  // function_ref print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %79
  %79 = apply %78(%22, %75, %77) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %77 : $String                     // id: %80
  destroy_value %75 : $String                     // id: %81
  destroy_value %22 : $Array<Any>                 // id: %82
  %83 = tuple ()                                  // user: %84
  return %83 : $()                                // id: %84
} // end sil function '$s4file3fooyyFyycfU1_'

  *** SIL function after  #490, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// closure #3 in foo()
sil private [ossa] @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %6, %2
// %1 "value"                                     // user: %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %45, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = integer_literal $Builtin.Int64, 1          // user: %11
  %6 = ref_element_addr %0 : $Number, #Number.number // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*Int // users: %16, %8, %18
  %8 = struct_element_addr %7 : $*Int, #Int._value // user: %9
  %9 = load [trivial] %8 : $*Builtin.Int64        // user: %11
  %10 = integer_literal $Builtin.Int1, -1         // user: %11
  %11 = builtin "sadd_with_overflow_Int64"(%9 : $Builtin.Int64, %5 : $Builtin.Int64, %10 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %12
  (%12, %13) = destructure_tuple %11 : $(Builtin.Int64, Builtin.Int1) // users: %15, %14
  cond_fail %13 : $Builtin.Int1, "arithmetic overflow" // id: %14
  %15 = struct $Int (%12 : $Builtin.Int64)        // user: %16
  store %15 to [trivial] %7 : $*Int               // id: %16
  %17 = tuple ()
  end_access %7 : $*Int                           // id: %18
  %19 = integer_literal $Builtin.Word, 1          // user: %21
  // function_ref _allocateUninitializedArray<A>(_:)
  %20 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %21
  %21 = apply %20<Any>(%19) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %22
  (%22, %23) = destructure_tuple %21 : $(Array<Any>, Builtin.RawPointer) // users: %82, %79, %24
  %24 = pointer_to_address %23 : $Builtin.RawPointer to [strict] $*Any // user: %72
  %25 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %68, %67, %33, %40, %50, %61, %66
  %26 = integer_literal $Builtin.Int64, 3         // user: %27
  %27 = struct $Int (%26 : $Builtin.Int64)        // user: %32
  %28 = integer_literal $Builtin.Int64, 1         // user: %29
  %29 = struct $Int (%28 : $Builtin.Int64)        // user: %32
  %30 = metatype $@thin DefaultStringInterpolation.Type // user: %32
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %31 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %32
  %32 = apply %31(%27, %29, %30) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %33
  store %32 to [init] %25 : $*DefaultStringInterpolation // id: %33
  %34 = string_literal utf8 "v: "                 // user: %39
  %35 = integer_literal $Builtin.Word, 3          // user: %39
  %36 = integer_literal $Builtin.Int1, -1         // user: %39
  %37 = metatype $@thin String.Type               // user: %39
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %38 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %39
  %39 = apply %38(%34, %35, %36, %37) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %44, %42
  %40 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %43, %42
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %41 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %42
  %42 = apply %41(%39, %40) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %40 : $*DefaultStringInterpolation   // id: %43
  destroy_value %39 : $String                     // id: %44
  %45 = begin_access [read] [dynamic] %3 : $*Int  // users: %47, %46
  %46 = load [trivial] %45 : $*Int                // user: %49
  end_access %45 : $*Int                          // id: %47
  %48 = alloc_stack $Int                          // users: %54, %52, %49
  store %46 to [trivial] %48 : $*Int              // id: %49
  %50 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %53, %52
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %51 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %52
  %52 = apply %51<Int>(%48, %50) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %50 : $*DefaultStringInterpolation   // id: %53
  dealloc_stack %48 : $*Int                       // id: %54
  %55 = string_literal utf8 ""                    // user: %60
  %56 = integer_literal $Builtin.Word, 0          // user: %60
  %57 = integer_literal $Builtin.Int1, -1         // user: %60
  %58 = metatype $@thin String.Type               // user: %60
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %59 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %60
  %60 = apply %59(%55, %56, %57, %58) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %65, %63
  %61 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %64, %63
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %62 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %63
  %63 = apply %62(%60, %61) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %61 : $*DefaultStringInterpolation   // id: %64
  destroy_value %60 : $String                     // id: %65
  %66 = load [copy] %25 : $*DefaultStringInterpolation // user: %71
  destroy_addr %25 : $*DefaultStringInterpolation // id: %67
  dealloc_stack %25 : $*DefaultStringInterpolation // id: %68
  %69 = metatype $@thin String.Type               // user: %71
  // function_ref String.init(stringInterpolation:)
  %70 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %71
  %71 = apply %70(%66, %69) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %73
  %72 = init_existential_addr %24 : $*Any, $String // user: %73
  store %71 to [init] %72 : $*String              // id: %73
  // function_ref default argument 1 of print(_:separator:terminator:)
  %74 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %75
  %75 = apply %74() : $@convention(thin) () -> @owned String // users: %81, %79
  // function_ref default argument 2 of print(_:separator:terminator:)
  %76 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %77
  %77 = apply %76() : $@convention(thin) () -> @owned String // users: %80, %79
  // function_ref print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %79
  %79 = apply %78(%22, %75, %77) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %77 : $String                     // id: %80
  destroy_value %75 : $String                     // id: %81
  destroy_value %22 : $Array<Any>                 // id: %82
  %83 = tuple ()                                  // user: %84
  return %83 : $()                                // id: %84
} // end sil function '$s4file3fooyyFyycfU1_'

  *** SIL function after  #497, stage Guaranteed Passes, pass 15: DiagnosticConstantPropagation (diagnostic-constant-propagation)
// closure #4 in foo()
sil private [ossa] @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () {
// %0 "number"                                    // users: %5, %2
// %1 "empty"                                     // users: %19, %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %3
  %4 = integer_literal $Builtin.Int64, 1          // user: %10
  %5 = ref_element_addr %0 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %15, %7, %17
  %7 = struct_element_addr %6 : $*Int, #Int._value // user: %8
  %8 = load [trivial] %7 : $*Builtin.Int64        // user: %10
  %9 = integer_literal $Builtin.Int1, -1          // user: %10
  %10 = builtin "sadd_with_overflow_Int64"(%8 : $Builtin.Int64, %4 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %11
  (%11, %12) = destructure_tuple %10 : $(Builtin.Int64, Builtin.Int1) // users: %14, %13
  cond_fail %12 : $Builtin.Int1, "arithmetic overflow" // id: %13
  %14 = struct $Int (%11 : $Builtin.Int64)        // user: %15
  store %14 to [trivial] %6 : $*Int               // id: %15
  %16 = tuple ()
  end_access %6 : $*Int                           // id: %17
  // function_ref Empty.foo()
  %18 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %19
  %19 = apply %18(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %20 = tuple ()                                  // user: %21
  return %20 : $()                                // id: %21
} // end sil function '$s4file3fooyyFyycfU2_'

  *** SIL function after  #500, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// closure #4 in foo()
sil private [ossa] @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () {
// %0 "number"                                    // users: %5, %2
// %1 "empty"                                     // users: %19, %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %3
  %4 = integer_literal $Builtin.Int64, 1          // user: %10
  %5 = ref_element_addr %0 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %15, %7, %17
  %7 = struct_element_addr %6 : $*Int, #Int._value // user: %8
  %8 = load [trivial] %7 : $*Builtin.Int64        // user: %10
  %9 = integer_literal $Builtin.Int1, -1          // user: %10
  %10 = builtin "sadd_with_overflow_Int64"(%8 : $Builtin.Int64, %4 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %11
  (%11, %12) = destructure_tuple %10 : $(Builtin.Int64, Builtin.Int1) // users: %14, %13
  cond_fail %12 : $Builtin.Int1, "arithmetic overflow" // id: %13
  %14 = struct $Int (%11 : $Builtin.Int64)        // user: %15
  store %14 to [trivial] %6 : $*Int               // id: %15
  %16 = tuple ()
  end_access %6 : $*Int                           // id: %17
  // function_ref Empty.foo()
  %18 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %19
  %19 = apply %18(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %20 = tuple ()                                  // user: %21
  return %20 : $()                                // id: %21
} // end sil function '$s4file3fooyyFyycfU2_'

  *** SIL function after  #507, stage Guaranteed Passes, pass 15: DiagnosticConstantPropagation (diagnostic-constant-propagation)
// closure #5 in foo()
sil private [ossa] @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %8, %3
// %1 "empty"                                     // users: %22, %4
// %2 "value"                                     // user: %5
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty, %2 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %49, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = integer_literal $Builtin.Int64, 1          // user: %13
  %8 = ref_element_addr %0 : $Number, #Number.number // user: %9
  %9 = begin_access [modify] [dynamic] %8 : $*Int // users: %18, %10, %20
  %10 = struct_element_addr %9 : $*Int, #Int._value // user: %11
  %11 = load [trivial] %10 : $*Builtin.Int64      // user: %13
  %12 = integer_literal $Builtin.Int1, -1         // user: %13
  %13 = builtin "sadd_with_overflow_Int64"(%11 : $Builtin.Int64, %7 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %14
  (%14, %15) = destructure_tuple %13 : $(Builtin.Int64, Builtin.Int1) // users: %17, %16
  cond_fail %15 : $Builtin.Int1, "arithmetic overflow" // id: %16
  %17 = struct $Int (%14 : $Builtin.Int64)        // user: %18
  store %17 to [trivial] %9 : $*Int               // id: %18
  %19 = tuple ()
  end_access %9 : $*Int                           // id: %20
  // function_ref Empty.foo()
  %21 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %22
  %22 = apply %21(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %23 = integer_literal $Builtin.Word, 1          // user: %25
  // function_ref _allocateUninitializedArray<A>(_:)
  %24 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %25
  %25 = apply %24<Any>(%23) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %26
  (%26, %27) = destructure_tuple %25 : $(Array<Any>, Builtin.RawPointer) // users: %86, %83, %28
  %28 = pointer_to_address %27 : $Builtin.RawPointer to [strict] $*Any // user: %76
  %29 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %72, %71, %37, %44, %54, %65, %70
  %30 = integer_literal $Builtin.Int64, 3         // user: %31
  %31 = struct $Int (%30 : $Builtin.Int64)        // user: %36
  %32 = integer_literal $Builtin.Int64, 1         // user: %33
  %33 = struct $Int (%32 : $Builtin.Int64)        // user: %36
  %34 = metatype $@thin DefaultStringInterpolation.Type // user: %36
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %35 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %36
  %36 = apply %35(%31, %33, %34) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %37
  store %36 to [init] %29 : $*DefaultStringInterpolation // id: %37
  %38 = string_literal utf8 "v: "                 // user: %43
  %39 = integer_literal $Builtin.Word, 3          // user: %43
  %40 = integer_literal $Builtin.Int1, -1         // user: %43
  %41 = metatype $@thin String.Type               // user: %43
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %42 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %43
  %43 = apply %42(%38, %39, %40, %41) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %48, %46
  %44 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %47, %46
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %45 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %46
  %46 = apply %45(%43, %44) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %44 : $*DefaultStringInterpolation   // id: %47
  destroy_value %43 : $String                     // id: %48
  %49 = begin_access [read] [dynamic] %5 : $*Int  // users: %51, %50
  %50 = load [trivial] %49 : $*Int                // user: %53
  end_access %49 : $*Int                          // id: %51
  %52 = alloc_stack $Int                          // users: %58, %56, %53
  store %50 to [trivial] %52 : $*Int              // id: %53
  %54 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 ""                    // user: %64
  %60 = integer_literal $Builtin.Word, 0          // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  destroy_value %64 : $String                     // id: %69
  %70 = load [copy] %29 : $*DefaultStringInterpolation // user: %75
  destroy_addr %29 : $*DefaultStringInterpolation // id: %71
  dealloc_stack %29 : $*DefaultStringInterpolation // id: %72
  %73 = metatype $@thin String.Type               // user: %75
  // function_ref String.init(stringInterpolation:)
  %74 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %75
  %75 = apply %74(%70, %73) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %77
  %76 = init_existential_addr %28 : $*Any, $String // user: %77
  store %75 to [init] %76 : $*String              // id: %77
  // function_ref default argument 1 of print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %79
  %79 = apply %78() : $@convention(thin) () -> @owned String // users: %85, %83
  // function_ref default argument 2 of print(_:separator:terminator:)
  %80 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %81
  %81 = apply %80() : $@convention(thin) () -> @owned String // users: %84, %83
  // function_ref print(_:separator:terminator:)
  %82 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %83
  %83 = apply %82(%26, %79, %81) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %81 : $String                     // id: %84
  destroy_value %79 : $String                     // id: %85
  destroy_value %26 : $Array<Any>                 // id: %86
  %87 = tuple ()                                  // user: %88
  return %87 : $()                                // id: %88
} // end sil function '$s4file3fooyyFyycfU3_'

  *** SIL function after  #510, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// closure #5 in foo()
sil private [ossa] @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %8, %3
// %1 "empty"                                     // users: %22, %4
// %2 "value"                                     // user: %5
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty, %2 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %49, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = integer_literal $Builtin.Int64, 1          // user: %13
  %8 = ref_element_addr %0 : $Number, #Number.number // user: %9
  %9 = begin_access [modify] [dynamic] %8 : $*Int // users: %18, %10, %20
  %10 = struct_element_addr %9 : $*Int, #Int._value // user: %11
  %11 = load [trivial] %10 : $*Builtin.Int64      // user: %13
  %12 = integer_literal $Builtin.Int1, -1         // user: %13
  %13 = builtin "sadd_with_overflow_Int64"(%11 : $Builtin.Int64, %7 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %14
  (%14, %15) = destructure_tuple %13 : $(Builtin.Int64, Builtin.Int1) // users: %17, %16
  cond_fail %15 : $Builtin.Int1, "arithmetic overflow" // id: %16
  %17 = struct $Int (%14 : $Builtin.Int64)        // user: %18
  store %17 to [trivial] %9 : $*Int               // id: %18
  %19 = tuple ()
  end_access %9 : $*Int                           // id: %20
  // function_ref Empty.foo()
  %21 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %22
  %22 = apply %21(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %23 = integer_literal $Builtin.Word, 1          // user: %25
  // function_ref _allocateUninitializedArray<A>(_:)
  %24 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %25
  %25 = apply %24<Any>(%23) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %26
  (%26, %27) = destructure_tuple %25 : $(Array<Any>, Builtin.RawPointer) // users: %86, %83, %28
  %28 = pointer_to_address %27 : $Builtin.RawPointer to [strict] $*Any // user: %76
  %29 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %72, %71, %37, %44, %54, %65, %70
  %30 = integer_literal $Builtin.Int64, 3         // user: %31
  %31 = struct $Int (%30 : $Builtin.Int64)        // user: %36
  %32 = integer_literal $Builtin.Int64, 1         // user: %33
  %33 = struct $Int (%32 : $Builtin.Int64)        // user: %36
  %34 = metatype $@thin DefaultStringInterpolation.Type // user: %36
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %35 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %36
  %36 = apply %35(%31, %33, %34) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %37
  store %36 to [init] %29 : $*DefaultStringInterpolation // id: %37
  %38 = string_literal utf8 "v: "                 // user: %43
  %39 = integer_literal $Builtin.Word, 3          // user: %43
  %40 = integer_literal $Builtin.Int1, -1         // user: %43
  %41 = metatype $@thin String.Type               // user: %43
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %42 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %43
  %43 = apply %42(%38, %39, %40, %41) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %48, %46
  %44 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %47, %46
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %45 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %46
  %46 = apply %45(%43, %44) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %44 : $*DefaultStringInterpolation   // id: %47
  destroy_value %43 : $String                     // id: %48
  %49 = begin_access [read] [dynamic] %5 : $*Int  // users: %51, %50
  %50 = load [trivial] %49 : $*Int                // user: %53
  end_access %49 : $*Int                          // id: %51
  %52 = alloc_stack $Int                          // users: %58, %56, %53
  store %50 to [trivial] %52 : $*Int              // id: %53
  %54 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 ""                    // user: %64
  %60 = integer_literal $Builtin.Word, 0          // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  destroy_value %64 : $String                     // id: %69
  %70 = load [copy] %29 : $*DefaultStringInterpolation // user: %75
  destroy_addr %29 : $*DefaultStringInterpolation // id: %71
  dealloc_stack %29 : $*DefaultStringInterpolation // id: %72
  %73 = metatype $@thin String.Type               // user: %75
  // function_ref String.init(stringInterpolation:)
  %74 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %75
  %75 = apply %74(%70, %73) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %77
  %76 = init_existential_addr %28 : $*Any, $String // user: %77
  store %75 to [init] %76 : $*String              // id: %77
  // function_ref default argument 1 of print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %79
  %79 = apply %78() : $@convention(thin) () -> @owned String // users: %85, %83
  // function_ref default argument 2 of print(_:separator:terminator:)
  %80 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %81
  %81 = apply %80() : $@convention(thin) () -> @owned String // users: %84, %83
  // function_ref print(_:separator:terminator:)
  %82 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %83
  %83 = apply %82(%26, %79, %81) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %81 : $String                     // id: %84
  destroy_value %79 : $String                     // id: %85
  destroy_value %26 : $Array<Any>                 // id: %86
  %87 = tuple ()                                  // user: %88
  return %87 : $()                                // id: %88
} // end sil function '$s4file3fooyyFyycfU3_'

  *** SIL function after  #520, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// Bool.init(_builtinBooleanLiteral:)
sil public_external [transparent] [serialized] [canonical] [ossa] @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Builtin.Int1, %1 : $@thin Bool.Type):
  %2 = struct $Bool (%0 : $Builtin.Int1)          // user: %3
  return %2 : $Bool                               // id: %3
} // end sil function '$sSb22_builtinBooleanLiteralSbBi1__tcfC'

  *** SIL function after  #530, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// ~= infix<A>(_:_:)
sil public_external [transparent] [serialized] [canonical] [ossa] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <T where T : Equatable> (@in_guaranteed T, @in_guaranteed T) -> Bool {
// %0                                             // user: %4
// %1                                             // user: %4
bb0(%0 : $*T, %1 : $*T):
  %2 = metatype $@thick T.Type                    // user: %4
  %3 = witness_method $T, #Equatable."==" : <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %4
  %4 = apply %3<T>(%0, %1, %2) : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %5
  return %4 : $Bool                               // id: %5
} // end sil function '$ss2teoiySbx_xtSQRzlF'

  *** SIL function after  #540, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// static Bool.! prefix(_:)
sil public_external [transparent] [serialized] [canonical] [ossa] @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Bool, %1 : $@thin Bool.Type):
  %2 = struct_extract %0 : $Bool, #Bool._value    // user: %4
  %3 = integer_literal $Builtin.Int1, -1          // user: %4
  %4 = builtin "xor_Int1"(%2 : $Builtin.Int1, %3 : $Builtin.Int1) : $Builtin.Int1 // user: %5
  %5 = struct $Bool (%4 : $Builtin.Int1)          // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sSb1nopyS2bFZ'

  *** SIL function after  #550, stage Guaranteed Passes, pass 18: DiagnoseUnreachable (diagnose-unreachable)
// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
sil shared_external [transparent] [serialized] [thunk] [canonical] [ossa] @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thick Optional<τ_0_0>.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Optional<τ_0_0>, %1 : $*Optional<τ_0_0>, %2 : $@thick Optional<τ_0_0>.Type):
  %3 = metatype $@thin Optional<τ_0_0>.Type      // user: %5
  // function_ref static Optional<A>.== infix(_:_:)
  %4 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %5
  %5 = apply %4<τ_0_0>(%0, %1, %3) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW'

*** SIL module before Mandatory Combines ***
sil_stage canonical

import Builtin
import Swift
import SwiftShims

// main
sil [ossa] @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

// Empty.foo()
sil hidden [ossa] @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4file5EmptyC3fooyyF'

// Empty.deinit
sil hidden [ossa] @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Empty to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file5EmptyCfd'

// Empty.__deallocating_deinit
sil hidden [ossa] @$s4file5EmptyCfD : $@convention(method) (@owned Empty) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  // function_ref Empty.deinit
  %2 = function_ref @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Empty                   // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Empty                          // id: %5
  end_lifetime %0 : $Empty                        // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Empty // user: %8
  dealloc_ref %7 : $Empty                         // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file5EmptyCfD'

// Empty.__allocating_init()
sil hidden [exact_self_class] [ossa] @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty {
// %0 "$metatype"
bb0(%0 : $@thick Empty.Type):
  %1 = alloc_ref $Empty                           // user: %3
  // function_ref Empty.init()
  %2 = function_ref @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Empty) -> @owned Empty // user: %4
  return %3 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfC'

// Empty.init()
sil hidden [ossa] @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty {
// %0 "self"                                      // users: %2, %3, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = copy_value %0 : $Empty                     // user: %4
  destroy_value %0 : $Empty                       // id: %3
  return %2 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfc'

// Number.number.getter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivg : $@convention(method) (@guaranteed Number) -> Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*Int   // users: %5, %4
  %4 = load [trivial] %3 : $*Int                  // user: %6
  end_access %3 : $*Int                           // id: %5
  return %4 : $Int                                // id: %6
} // end sil function '$s4file6NumberC6numberSivg'

// Number.number.setter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivs : $@convention(method) (Int, @guaranteed Number) -> () {
// %0 "value"                                     // users: %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : @guaranteed $Number):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to [trivial] %5 : $*Int                // id: %6
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9
} // end sil function '$s4file6NumberC6numberSivs'

// Number.number.modify
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivM : $@yield_once @convention(method) (@guaranteed Number) -> @yields @inout Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*Int // users: %5, %8, %4
  yield %3 : $*Int, resume bb1, unwind bb2        // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file6NumberC6numberSivM'

// Number.__allocating_init(number:)
sil hidden [exact_self_class] [ossa] @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number {
// %0 "number"                                    // user: %4
// %1 "$metatype"
bb0(%0 : $Int, %1 : $@thick Number.Type):
  %2 = alloc_ref $Number                          // user: %4
  // function_ref Number.init(number:)
  %3 = function_ref @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (Int, @owned Number) -> @owned Number // user: %5
  return %4 : $Number                             // id: %5
} // end sil function '$s4file6NumberC6numberACSi_tcfC'

// Number.init(number:)
sil hidden [ossa] @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %7, %2
// %1 "self"                                      // users: %4, %10, %11, %3
bb0(%0 : $Int, %1 : @owned $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %1 : $Number                  // users: %9, %5
  %5 = ref_element_addr %4 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %7, %8
  store %0 to [trivial] %6 : $*Int                // id: %7
  end_access %6 : $*Int                           // id: %8
  end_borrow %4 : $Number                         // id: %9
  %10 = copy_value %1 : $Number                   // user: %12
  destroy_value %1 : $Number                      // id: %11
  return %10 : $Number                            // id: %12
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

// Number.deinit
sil hidden [ossa] @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Number to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file6NumberCfd'

// Number.__deallocating_deinit
sil hidden [ossa] @$s4file6NumberCfD : $@convention(method) (@owned Number) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  // function_ref Number.deinit
  %2 = function_ref @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Number                  // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Number                         // id: %5
  end_lifetime %0 : $Number                       // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Number // user: %8
  dealloc_ref %7 : $Number                        // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file6NumberCfD'

// Closure.closure.getter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvg : $@convention(method) (@guaranteed Closure) -> @owned @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  %4 = load [copy] %3 : $*@callee_guaranteed () -> () // user: %6
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  return %4 : $@callee_guaranteed () -> ()        // id: %6
} // end sil function '$s4file7ClosureC7closureyycvg'

// Closure.closure.setter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvs : $@convention(method) (@owned @callee_guaranteed () -> (), @guaranteed Closure) -> () {
// %0 "value"                                     // users: %11, %4, %2
// %1 "self"                                      // users: %6, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @guaranteed $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "value", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %10, %5
  %5 = copy_value %4 : $@callee_guaranteed () -> () // user: %8
  %6 = ref_element_addr %1 : $Closure, #Closure.closure // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*@callee_guaranteed () -> () // users: %8, %9
  store %5 to [assign] %7 : $*@callee_guaranteed () -> () // id: %8
  end_access %7 : $*@callee_guaranteed () -> ()   // id: %9
  end_borrow %4 : $@callee_guaranteed () -> ()    // id: %10
  destroy_value %0 : $@callee_guaranteed () -> () // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file7ClosureC7closureyycvs'

// Closure.closure.modify
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvM : $@yield_once @convention(method) (@guaranteed Closure) -> @yields @inout @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %8, %4
  yield %3 : $*@callee_guaranteed () -> (), resume bb1, unwind bb2 // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file7ClosureC7closureyycvM'

// Closure.__allocating_init(_:)
sil hidden [exact_self_class] [ossa] @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure {
// %0 "block"                                     // user: %4
// %1 "$metatype"
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : $@thick Closure.Type):
  %2 = alloc_ref $Closure                         // user: %4
  // function_ref Closure.init(_:)
  %3 = function_ref @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %5
  return %4 : $Closure                            // id: %5
} // end sil function '$s4file7ClosureCyACyyccfC'

// Closure.init(_:)
sil hidden [ossa] @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %15, %5, %2
// %1 "self"                                      // users: %4, %13, %14, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @owned $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %1 : $Closure                 // users: %12, %7
  %5 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %11, %6
  %6 = copy_value %5 : $@callee_guaranteed () -> () // user: %9
  %7 = ref_element_addr %4 : $Closure, #Closure.closure // user: %8
  %8 = begin_access [modify] [dynamic] %7 : $*@callee_guaranteed () -> () // users: %9, %10
  store %6 to [init] %8 : $*@callee_guaranteed () -> () // id: %9
  end_access %8 : $*@callee_guaranteed () -> ()   // id: %10
  end_borrow %5 : $@callee_guaranteed () -> ()    // id: %11
  end_borrow %4 : $Closure                        // id: %12
  %13 = copy_value %1 : $Closure                  // user: %16
  destroy_value %1 : $Closure                     // id: %14
  destroy_value %0 : $@callee_guaranteed () -> () // id: %15
  return %13 : $Closure                           // id: %16
} // end sil function '$s4file7ClosureCyACyyccfc'

// Closure.deinit
sil hidden [ossa] @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %6, %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [deinit] [static] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  destroy_addr %3 : $*@callee_guaranteed () -> () // id: %4
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = unchecked_ref_cast %0 : $Closure to $Builtin.NativeObject // user: %7
  %7 = unchecked_ownership_conversion %6 : $Builtin.NativeObject, @guaranteed to @owned // user: %8
  return %7 : $Builtin.NativeObject               // id: %8
} // end sil function '$s4file7ClosureCfd'

// Closure.__deallocating_deinit
sil hidden [ossa] @$s4file7ClosureCfD : $@convention(method) (@owned Closure) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  // function_ref Closure.deinit
  %2 = function_ref @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Closure                 // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Closure                        // id: %5
  end_lifetime %0 : $Closure                      // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Closure // user: %8
  dealloc_ref %7 : $Closure                       // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file7ClosureCfD'

// foo()
sil hidden [ossa] @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %627, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %626, %102, %87, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %11
  %8 = integer_literal $Builtin.Int64, 0          // user: %9
  %9 = struct $Int (%8 : $Builtin.Int64)          // user: %11
  // function_ref Number.__allocating_init(number:)
  %10 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %11
  %11 = apply %10(%9, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %625, %98, %83, %73, %64, %12
  debug_value %11 : $Number, let, name "number"   // id: %12
  %13 = integer_literal $Builtin.Word, 1          // user: %15
  // function_ref _allocateUninitializedArray<A>(_:)
  %14 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %15
  %15 = apply %14<Any>(%13) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %16
  (%16, %17) = destructure_tuple %15 : $(Array<Any>, Builtin.RawPointer) // users: %35, %32, %18
  %18 = pointer_to_address %17 : $Builtin.RawPointer to [strict] $*Any // user: %25
  %19 = string_literal utf8 "===== Did init"      // user: %24
  %20 = integer_literal $Builtin.Word, 14         // user: %24
  %21 = integer_literal $Builtin.Int1, -1         // user: %24
  %22 = metatype $@thin String.Type               // user: %24
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %23 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %24
  %24 = apply %23(%19, %20, %21, %22) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %25 = init_existential_addr %18 : $*Any, $String // user: %26
  store %24 to [init] %25 : $*String              // id: %26
  // function_ref default argument 1 of print(_:separator:terminator:)
  %27 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %28
  %28 = apply %27() : $@convention(thin) () -> @owned String // users: %34, %32
  // function_ref default argument 2 of print(_:separator:terminator:)
  %29 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %30
  %30 = apply %29() : $@convention(thin) () -> @owned String // users: %33, %32
  // function_ref print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %32
  %32 = apply %31(%16, %28, %30) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %30 : $String                     // id: %33
  destroy_value %28 : $String                     // id: %34
  destroy_value %16 : $Array<Any>                 // id: %35
  %36 = integer_literal $Builtin.Word, 1          // user: %38
  // function_ref _allocateUninitializedArray<A>(_:)
  %37 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %38
  %38 = apply %37<Any>(%36) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %39
  (%39, %40) = destructure_tuple %38 : $(Array<Any>, Builtin.RawPointer) // users: %58, %55, %41
  %41 = pointer_to_address %40 : $Builtin.RawPointer to [strict] $*Any // user: %48
  %42 = string_literal utf8 "===== Did hook"      // user: %47
  %43 = integer_literal $Builtin.Word, 14         // user: %47
  %44 = integer_literal $Builtin.Int1, -1         // user: %47
  %45 = metatype $@thin String.Type               // user: %47
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %46 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %47
  %47 = apply %46(%42, %43, %44, %45) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %49
  %48 = init_existential_addr %41 : $*Any, $String // user: %49
  store %47 to [init] %48 : $*String              // id: %49
  // function_ref default argument 1 of print(_:separator:terminator:)
  %50 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %51
  %51 = apply %50() : $@convention(thin) () -> @owned String // users: %57, %55
  // function_ref default argument 2 of print(_:separator:terminator:)
  %52 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %53
  %53 = apply %52() : $@convention(thin) () -> @owned String // users: %56, %55
  // function_ref print(_:separator:terminator:)
  %54 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %55
  %55 = apply %54(%39, %51, %53) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %53 : $String                     // id: %56
  destroy_value %51 : $String                     // id: %57
  destroy_value %39 : $Array<Any>                 // id: %58
  %59 = alloc_box ${ var Int }, var, name "value" // users: %624, %109, %79, %60
  %60 = project_box %59 : ${ var Int }, 0         // users: %452, %63
  %61 = integer_literal $Builtin.Int64, 0         // user: %62
  %62 = struct $Int (%61 : $Builtin.Int64)        // user: %63
  store %62 to [trivial] %60 : $*Int              // id: %63
  %64 = begin_borrow %11 : $Number                // users: %67, %65
  %65 = copy_value %64 : $Number                  // users: %72, %69, %66
  debug_value %65 : $Number, let, name "number"   // id: %66
  end_borrow %64 : $Number                        // id: %67
  // function_ref closure #2 in foo()
  %68 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %70
  %69 = copy_value %65 : $Number                  // user: %70
  %70 = partial_apply [callee_guaranteed] %68(%69) : $@convention(thin) (@guaranteed Number) -> () // users: %623, %235, %71
  debug_value %70 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %71
  destroy_value %65 : $Number                     // id: %72
  %73 = begin_borrow %11 : $Number                // users: %76, %74
  %74 = copy_value %73 : $Number                  // users: %82, %78, %75
  debug_value %74 : $Number, let, name "number"   // id: %75
  end_borrow %73 : $Number                        // id: %76
  // function_ref closure #3 in foo()
  %77 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %80
  %78 = copy_value %74 : $Number                  // user: %80
  %79 = copy_value %59 : ${ var Int }             // user: %80
  %80 = partial_apply [callee_guaranteed] %77(%78, %79) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %622, %275, %81
  debug_value %80 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %81
  destroy_value %74 : $Number                     // id: %82
  %83 = begin_borrow %11 : $Number                // users: %86, %84
  %84 = copy_value %83 : $Number                  // users: %97, %92, %85
  debug_value %84 : $Number, let, name "number"   // id: %85
  end_borrow %83 : $Number                        // id: %86
  %87 = begin_borrow %5 : $Empty                  // users: %90, %88
  %88 = copy_value %87 : $Empty                   // users: %96, %93, %89
  debug_value %88 : $Empty, let, name "empty"     // id: %89
  end_borrow %87 : $Empty                         // id: %90
  // function_ref closure #4 in foo()
  %91 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %94
  %92 = copy_value %84 : $Number                  // user: %94
  %93 = copy_value %88 : $Empty                   // user: %94
  %94 = partial_apply [callee_guaranteed] %91(%92, %93) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %621, %315, %95
  debug_value %94 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %95
  destroy_value %88 : $Empty                      // id: %96
  destroy_value %84 : $Number                     // id: %97
  %98 = begin_borrow %11 : $Number                // users: %101, %99
  %99 = copy_value %98 : $Number                  // users: %113, %107, %100
  debug_value %99 : $Number, let, name "number"   // id: %100
  end_borrow %98 : $Number                        // id: %101
  %102 = begin_borrow %5 : $Empty                 // users: %105, %103
  %103 = copy_value %102 : $Empty                 // users: %112, %108, %104
  debug_value %103 : $Empty, let, name "empty"    // id: %104
  end_borrow %102 : $Empty                        // id: %105
  // function_ref closure #5 in foo()
  %106 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %110
  %107 = copy_value %99 : $Number                 // user: %110
  %108 = copy_value %103 : $Empty                 // user: %110
  %109 = copy_value %59 : ${ var Int }            // user: %110
  %110 = partial_apply [callee_guaranteed] %106(%107, %108, %109) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %620, %355, %111
  debug_value %110 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %111
  destroy_value %103 : $Empty                     // id: %112
  destroy_value %99 : $Number                     // id: %113
  %114 = integer_literal $Builtin.Word, 1         // user: %116
  // function_ref _allocateUninitializedArray<A>(_:)
  %115 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %116
  %116 = apply %115<Any>(%114) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %117
  (%117, %118) = destructure_tuple %116 : $(Array<Any>, Builtin.RawPointer) // users: %136, %133, %119
  %119 = pointer_to_address %118 : $Builtin.RawPointer to [strict] $*Any // user: %126
  %120 = string_literal utf8 "===== Did init closures" // user: %125
  %121 = integer_literal $Builtin.Word, 23        // user: %125
  %122 = integer_literal $Builtin.Int1, -1        // user: %125
  %123 = metatype $@thin String.Type              // user: %125
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %124 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %125
  %125 = apply %124(%120, %121, %122, %123) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %127
  %126 = init_existential_addr %119 : $*Any, $String // user: %127
  store %125 to [init] %126 : $*String            // id: %127
  // function_ref default argument 1 of print(_:separator:terminator:)
  %128 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %129
  %129 = apply %128() : $@convention(thin) () -> @owned String // users: %135, %133
  // function_ref default argument 2 of print(_:separator:terminator:)
  %130 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %131
  %131 = apply %130() : $@convention(thin) () -> @owned String // users: %134, %133
  // function_ref print(_:separator:terminator:)
  %132 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %133
  %133 = apply %132(%117, %129, %131) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %131 : $String                    // id: %134
  destroy_value %129 : $String                    // id: %135
  destroy_value %117 : $Array<Any>                // id: %136
  %137 = alloc_stack $Array<Closure>, var, name "storage" // users: %619, %618, %141, %144, %242, %282, %322, %362, %394, %415, %491
  %138 = metatype $@thin Array<Closure>.Type      // user: %140
  // function_ref Array.init()
  %139 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %140
  %140 = apply %139<Closure>(%138) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %141
  store %140 to [init] %137 : $*Array<Closure>    // id: %141
  %142 = integer_literal $Builtin.Int64, 100      // user: %143
  %143 = struct $Int (%142 : $Builtin.Int64)      // user: %146
  %144 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %147, %146
  // function_ref Array.reserveCapacity(_:)
  %145 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %146
  %146 = apply %145<Closure>(%143, %144) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %144 : $*Array<Closure>              // id: %147
  %148 = integer_literal $Builtin.Word, 1         // user: %150
  // function_ref _allocateUninitializedArray<A>(_:)
  %149 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %150
  %150 = apply %149<Any>(%148) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %151
  (%151, %152) = destructure_tuple %150 : $(Array<Any>, Builtin.RawPointer) // users: %170, %167, %153
  %153 = pointer_to_address %152 : $Builtin.RawPointer to [strict] $*Any // user: %160
  %154 = string_literal utf8 "===== Did init array" // user: %159
  %155 = integer_literal $Builtin.Word, 20        // user: %159
  %156 = integer_literal $Builtin.Int1, -1        // user: %159
  %157 = metatype $@thin String.Type              // user: %159
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %158 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %159
  %159 = apply %158(%154, %155, %156, %157) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %161
  %160 = init_existential_addr %153 : $*Any, $String // user: %161
  store %159 to [init] %160 : $*String            // id: %161
  // function_ref default argument 1 of print(_:separator:terminator:)
  %162 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %163
  %163 = apply %162() : $@convention(thin) () -> @owned String // users: %169, %167
  // function_ref default argument 2 of print(_:separator:terminator:)
  %164 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %165
  %165 = apply %164() : $@convention(thin) () -> @owned String // users: %168, %167
  // function_ref print(_:separator:terminator:)
  %166 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %167
  %167 = apply %166(%151, %163, %165) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %165 : $String                    // id: %168
  destroy_value %163 : $String                    // id: %169
  destroy_value %151 : $Array<Any>                // id: %170
  %171 = alloc_stack $Bool, var, name "run"       // users: %617, %174, %176, %561
  %172 = integer_literal $Builtin.Int1, -1        // user: %173
  %173 = struct $Bool (%172 : $Builtin.Int1)      // user: %174
  store %173 to [trivial] %171 : $*Bool           // id: %174
  br bb1                                          // id: %175

bb1:                                              // Preds: bb25 bb0
  %176 = begin_access [read] [static] %171 : $*Bool // users: %177, %179
  %177 = struct_element_addr %176 : $*Bool, #Bool._value // user: %178
  %178 = load [trivial] %177 : $*Builtin.Int1     // user: %180
  end_access %176 : $*Bool                        // id: %179
  cond_br %178, bb2, bb26                         // id: %180

bb2:                                              // Preds: bb1
  %181 = integer_literal $Builtin.Word, 1         // user: %183
  // function_ref _allocateUninitializedArray<A>(_:)
  %182 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %183
  %183 = apply %182<Any>(%181) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %184
  (%184, %185) = destructure_tuple %183 : $(Array<Any>, Builtin.RawPointer) // users: %203, %200, %186
  %186 = pointer_to_address %185 : $Builtin.RawPointer to [strict] $*Any // user: %193
  %187 = string_literal utf8 "===== Ask"          // user: %192
  %188 = integer_literal $Builtin.Word, 9         // user: %192
  %189 = integer_literal $Builtin.Int1, -1        // user: %192
  %190 = metatype $@thin String.Type              // user: %192
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %191 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %192
  %192 = apply %191(%187, %188, %189, %190) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %194
  %193 = init_existential_addr %186 : $*Any, $String // user: %194
  store %192 to [init] %193 : $*String            // id: %194
  // function_ref default argument 1 of print(_:separator:terminator:)
  %195 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %196
  %196 = apply %195() : $@convention(thin) () -> @owned String // users: %202, %200
  // function_ref default argument 2 of print(_:separator:terminator:)
  %197 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %198
  %198 = apply %197() : $@convention(thin) () -> @owned String // users: %201, %200
  // function_ref print(_:separator:terminator:)
  %199 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %200
  %200 = apply %199(%184, %196, %198) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %198 : $String                    // id: %201
  destroy_value %196 : $String                    // id: %202
  destroy_value %184 : $Array<Any>                // id: %203
  // function_ref default argument 0 of readLine(strippingNewline:)
  %204 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %205
  %205 = apply %204() : $@convention(thin) () -> Bool // user: %207
  // function_ref readLine(strippingNewline:)
  %206 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %207
  %207 = apply %206(%205) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %592, %209, %208
  debug_value %207 : $Optional<String>, let, name "line" // id: %208
  %209 = begin_borrow %207 : $Optional<String>    // users: %590, %564, %535, %527, %467, %464, %427, %422, %370, %367, %330, %327, %290, %287, %250, %247, %210
  %210 = copy_value %209 : $Optional<String>      // users: %233, %249, %221, %211
  debug_value %210 : $Optional<String>, let, name "$match" // id: %211
  %212 = string_literal utf8 "push1"              // user: %217
  %213 = integer_literal $Builtin.Word, 5         // user: %217
  %214 = integer_literal $Builtin.Int1, -1        // user: %217
  %215 = metatype $@thin String.Type              // user: %217
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %216 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %217
  %217 = apply %216(%212, %213, %214, %215) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %218
  %218 = enum $Optional<String>, #Optional.some!enumelt, %217 : $String // user: %220
  %219 = alloc_stack $Optional<String>            // users: %226, %230, %229, %220
  store %218 to [init] %219 : $*Optional<String>  // id: %220
  %221 = begin_borrow %210 : $Optional<String>    // users: %228, %223
  %222 = alloc_stack $Optional<String>            // users: %226, %227, %223
  %223 = store_borrow %221 to %222 : $*Optional<String>
  %224 = metatype $@thin Optional<String>.Type    // user: %226
  // function_ref static Optional<A>.== infix(_:_:)
  %225 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %226
  %226 = apply %225<String>(%219, %222, %224) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %231
  dealloc_stack %222 : $*Optional<String>         // id: %227
  end_borrow %221 : $Optional<String>             // id: %228
  destroy_addr %219 : $*Optional<String>          // id: %229
  dealloc_stack %219 : $*Optional<String>         // id: %230
  %231 = struct_extract %226 : $Bool, #Bool._value // user: %232
  cond_br %231, bb3, bb4                          // id: %232

bb3:                                              // Preds: bb2
  destroy_value %210 : $Optional<String>          // id: %233
  %234 = metatype $@thick Closure.Type            // user: %238
  %235 = begin_borrow %70 : $@callee_guaranteed () -> () // users: %239, %236
  %236 = copy_value %235 : $@callee_guaranteed () -> () // user: %238
  // function_ref Closure.__allocating_init(_:)
  %237 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %238
  %238 = apply %237(%236, %234) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %241
  end_borrow %235 : $@callee_guaranteed () -> ()  // id: %239
  %240 = alloc_stack $Closure                     // users: %246, %244, %241
  store %238 to [init] %240 : $*Closure           // id: %241
  %242 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %245, %244
  // function_ref Array.append(_:)
  %243 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %244
  %244 = apply %243<Closure>(%240, %242) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %242 : $*Array<Closure>              // id: %245
  dealloc_stack %240 : $*Closure                  // id: %246
  end_borrow %209 : $Optional<String>             // id: %247
  br bb25                                         // id: %248

bb4:                                              // Preds: bb2
  destroy_value %210 : $Optional<String>          // id: %249
  %250 = copy_value %209 : $Optional<String>      // users: %273, %289, %261, %251
  debug_value %250 : $Optional<String>, let, name "$match" // id: %251
  %252 = string_literal utf8 "push1_1"            // user: %257
  %253 = integer_literal $Builtin.Word, 7         // user: %257
  %254 = integer_literal $Builtin.Int1, -1        // user: %257
  %255 = metatype $@thin String.Type              // user: %257
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %256 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %257
  %257 = apply %256(%252, %253, %254, %255) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %258
  %258 = enum $Optional<String>, #Optional.some!enumelt, %257 : $String // user: %260
  %259 = alloc_stack $Optional<String>            // users: %266, %270, %269, %260
  store %258 to [init] %259 : $*Optional<String>  // id: %260
  %261 = begin_borrow %250 : $Optional<String>    // users: %268, %263
  %262 = alloc_stack $Optional<String>            // users: %266, %267, %263
  %263 = store_borrow %261 to %262 : $*Optional<String>
  %264 = metatype $@thin Optional<String>.Type    // user: %266
  // function_ref static Optional<A>.== infix(_:_:)
  %265 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %266
  %266 = apply %265<String>(%259, %262, %264) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %271
  dealloc_stack %262 : $*Optional<String>         // id: %267
  end_borrow %261 : $Optional<String>             // id: %268
  destroy_addr %259 : $*Optional<String>          // id: %269
  dealloc_stack %259 : $*Optional<String>         // id: %270
  %271 = struct_extract %266 : $Bool, #Bool._value // user: %272
  cond_br %271, bb5, bb6                          // id: %272

bb5:                                              // Preds: bb4
  destroy_value %250 : $Optional<String>          // id: %273
  %274 = metatype $@thick Closure.Type            // user: %278
  %275 = begin_borrow %80 : $@callee_guaranteed () -> () // users: %279, %276
  %276 = copy_value %275 : $@callee_guaranteed () -> () // user: %278
  // function_ref Closure.__allocating_init(_:)
  %277 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %278
  %278 = apply %277(%276, %274) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %281
  end_borrow %275 : $@callee_guaranteed () -> ()  // id: %279
  %280 = alloc_stack $Closure                     // users: %286, %284, %281
  store %278 to [init] %280 : $*Closure           // id: %281
  %282 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %285, %284
  // function_ref Array.append(_:)
  %283 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %284
  %284 = apply %283<Closure>(%280, %282) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %282 : $*Array<Closure>              // id: %285
  dealloc_stack %280 : $*Closure                  // id: %286
  end_borrow %209 : $Optional<String>             // id: %287
  br bb25                                         // id: %288

bb6:                                              // Preds: bb4
  destroy_value %250 : $Optional<String>          // id: %289
  %290 = copy_value %209 : $Optional<String>      // users: %313, %329, %301, %291
  debug_value %290 : $Optional<String>, let, name "$match" // id: %291
  %292 = string_literal utf8 "push2"              // user: %297
  %293 = integer_literal $Builtin.Word, 5         // user: %297
  %294 = integer_literal $Builtin.Int1, -1        // user: %297
  %295 = metatype $@thin String.Type              // user: %297
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %296 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %297
  %297 = apply %296(%292, %293, %294, %295) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %298
  %298 = enum $Optional<String>, #Optional.some!enumelt, %297 : $String // user: %300
  %299 = alloc_stack $Optional<String>            // users: %306, %310, %309, %300
  store %298 to [init] %299 : $*Optional<String>  // id: %300
  %301 = begin_borrow %290 : $Optional<String>    // users: %308, %303
  %302 = alloc_stack $Optional<String>            // users: %306, %307, %303
  %303 = store_borrow %301 to %302 : $*Optional<String>
  %304 = metatype $@thin Optional<String>.Type    // user: %306
  // function_ref static Optional<A>.== infix(_:_:)
  %305 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %306
  %306 = apply %305<String>(%299, %302, %304) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %311
  dealloc_stack %302 : $*Optional<String>         // id: %307
  end_borrow %301 : $Optional<String>             // id: %308
  destroy_addr %299 : $*Optional<String>          // id: %309
  dealloc_stack %299 : $*Optional<String>         // id: %310
  %311 = struct_extract %306 : $Bool, #Bool._value // user: %312
  cond_br %311, bb7, bb8                          // id: %312

bb7:                                              // Preds: bb6
  destroy_value %290 : $Optional<String>          // id: %313
  %314 = metatype $@thick Closure.Type            // user: %318
  %315 = begin_borrow %94 : $@callee_guaranteed () -> () // users: %319, %316
  %316 = copy_value %315 : $@callee_guaranteed () -> () // user: %318
  // function_ref Closure.__allocating_init(_:)
  %317 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %318
  %318 = apply %317(%316, %314) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %321
  end_borrow %315 : $@callee_guaranteed () -> ()  // id: %319
  %320 = alloc_stack $Closure                     // users: %326, %324, %321
  store %318 to [init] %320 : $*Closure           // id: %321
  %322 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %325, %324
  // function_ref Array.append(_:)
  %323 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %324
  %324 = apply %323<Closure>(%320, %322) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %322 : $*Array<Closure>              // id: %325
  dealloc_stack %320 : $*Closure                  // id: %326
  end_borrow %209 : $Optional<String>             // id: %327
  br bb25                                         // id: %328

bb8:                                              // Preds: bb6
  destroy_value %290 : $Optional<String>          // id: %329
  %330 = copy_value %209 : $Optional<String>      // users: %353, %369, %341, %331
  debug_value %330 : $Optional<String>, let, name "$match" // id: %331
  %332 = string_literal utf8 "push2_1"            // user: %337
  %333 = integer_literal $Builtin.Word, 7         // user: %337
  %334 = integer_literal $Builtin.Int1, -1        // user: %337
  %335 = metatype $@thin String.Type              // user: %337
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %336 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %337
  %337 = apply %336(%332, %333, %334, %335) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %338
  %338 = enum $Optional<String>, #Optional.some!enumelt, %337 : $String // user: %340
  %339 = alloc_stack $Optional<String>            // users: %346, %350, %349, %340
  store %338 to [init] %339 : $*Optional<String>  // id: %340
  %341 = begin_borrow %330 : $Optional<String>    // users: %348, %343
  %342 = alloc_stack $Optional<String>            // users: %346, %347, %343
  %343 = store_borrow %341 to %342 : $*Optional<String>
  %344 = metatype $@thin Optional<String>.Type    // user: %346
  // function_ref static Optional<A>.== infix(_:_:)
  %345 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %346
  %346 = apply %345<String>(%339, %342, %344) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %351
  dealloc_stack %342 : $*Optional<String>         // id: %347
  end_borrow %341 : $Optional<String>             // id: %348
  destroy_addr %339 : $*Optional<String>          // id: %349
  dealloc_stack %339 : $*Optional<String>         // id: %350
  %351 = struct_extract %346 : $Bool, #Bool._value // user: %352
  cond_br %351, bb9, bb10                         // id: %352

bb9:                                              // Preds: bb8
  destroy_value %330 : $Optional<String>          // id: %353
  %354 = metatype $@thick Closure.Type            // user: %358
  %355 = begin_borrow %110 : $@callee_guaranteed () -> () // users: %359, %356
  %356 = copy_value %355 : $@callee_guaranteed () -> () // user: %358
  // function_ref Closure.__allocating_init(_:)
  %357 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %358
  %358 = apply %357(%356, %354) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %361
  end_borrow %355 : $@callee_guaranteed () -> ()  // id: %359
  %360 = alloc_stack $Closure                     // users: %366, %364, %361
  store %358 to [init] %360 : $*Closure           // id: %361
  %362 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %365, %364
  // function_ref Array.append(_:)
  %363 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %364
  %364 = apply %363<Closure>(%360, %362) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %362 : $*Array<Closure>              // id: %365
  dealloc_stack %360 : $*Closure                  // id: %366
  end_borrow %209 : $Optional<String>             // id: %367
  br bb25                                         // id: %368

bb10:                                             // Preds: bb8
  destroy_value %330 : $Optional<String>          // id: %369
  %370 = copy_value %209 : $Optional<String>      // users: %393, %425, %381, %371
  debug_value %370 : $Optional<String>, let, name "$match" // id: %371
  %372 = string_literal utf8 "pop"                // user: %377
  %373 = integer_literal $Builtin.Word, 3         // user: %377
  %374 = integer_literal $Builtin.Int1, -1        // user: %377
  %375 = metatype $@thin String.Type              // user: %377
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %376 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %377
  %377 = apply %376(%372, %373, %374, %375) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %378
  %378 = enum $Optional<String>, #Optional.some!enumelt, %377 : $String // user: %380
  %379 = alloc_stack $Optional<String>            // users: %386, %390, %389, %380
  store %378 to [init] %379 : $*Optional<String>  // id: %380
  %381 = begin_borrow %370 : $Optional<String>    // users: %388, %383
  %382 = alloc_stack $Optional<String>            // users: %386, %387, %383
  %383 = store_borrow %381 to %382 : $*Optional<String>
  %384 = metatype $@thin Optional<String>.Type    // user: %386
  // function_ref static Optional<A>.== infix(_:_:)
  %385 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %386
  %386 = apply %385<String>(%379, %382, %384) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %391
  dealloc_stack %382 : $*Optional<String>         // id: %387
  end_borrow %381 : $Optional<String>             // id: %388
  destroy_addr %379 : $*Optional<String>          // id: %389
  dealloc_stack %379 : $*Optional<String>         // id: %390
  %391 = struct_extract %386 : $Bool, #Bool._value // user: %392
  cond_br %391, bb11, bb14                        // id: %392

bb11:                                             // Preds: bb10
  destroy_value %370 : $Optional<String>          // id: %393
  %394 = begin_access [read] [static] %137 : $*Array<Closure> // users: %396, %395
  %395 = load [copy] %394 : $*Array<Closure>      // users: %407, %397
  end_access %394 : $*Array<Closure>              // id: %396
  %397 = begin_borrow %395 : $Array<Closure>      // users: %406, %399
  %398 = alloc_stack $Array<Closure>              // users: %412, %400, %399
  %399 = store_borrow %397 to %398 : $*Array<Closure>
  %400 = load_borrow %398 : $*Array<Closure>      // users: %411, %402
  %401 = alloc_stack $Array<Closure>              // users: %405, %404, %402
  %402 = store_borrow %400 to %401 : $*Array<Closure>
  // function_ref Collection.isEmpty.getter
  %403 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %404
  %404 = apply %403<[Closure]>(%401) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %408
  dealloc_stack %401 : $*Array<Closure>           // id: %405
  end_borrow %397 : $Array<Closure>               // id: %406
  destroy_value %395 : $Array<Closure>            // id: %407
  %408 = struct_extract %404 : $Bool, #Bool._value // user: %410
  %409 = integer_literal $Builtin.Int1, -1        // user: %410
  %410 = builtin "xor_Int1"(%408 : $Builtin.Int1, %409 : $Builtin.Int1) : $Builtin.Int1 // user: %413
  end_borrow %400 : $Array<Closure>               // id: %411
  dealloc_stack %398 : $*Array<Closure>           // id: %412
  cond_br %410, bb12, bb13                        // id: %413

bb12:                                             // Preds: bb11
  %414 = alloc_stack $Closure                     // users: %421, %419, %417
  %415 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %418, %417
  // function_ref RangeReplaceableCollection<>.removeLast()
  %416 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %417
  %417 = apply %416<[Closure]>(%414, %415) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %415 : $*Array<Closure>              // id: %418
  %419 = load [take] %414 : $*Closure             // user: %420
  destroy_value %419 : $Closure                   // id: %420
  dealloc_stack %414 : $*Closure                  // id: %421
  end_borrow %209 : $Optional<String>             // id: %422
  br bb25                                         // id: %423

bb13:                                             // Preds: bb11
  br bb15                                         // id: %424

bb14:                                             // Preds: bb10
  destroy_value %370 : $Optional<String>          // id: %425
  br bb15                                         // id: %426

bb15:                                             // Preds: bb13 bb14
  %427 = copy_value %209 : $Optional<String>      // users: %450, %466, %438, %428
  debug_value %427 : $Optional<String>, let, name "$match" // id: %428
  %429 = string_literal utf8 "inc"                // user: %434
  %430 = integer_literal $Builtin.Word, 3         // user: %434
  %431 = integer_literal $Builtin.Int1, -1        // user: %434
  %432 = metatype $@thin String.Type              // user: %434
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %433 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %434
  %434 = apply %433(%429, %430, %431, %432) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %435
  %435 = enum $Optional<String>, #Optional.some!enumelt, %434 : $String // user: %437
  %436 = alloc_stack $Optional<String>            // users: %443, %447, %446, %437
  store %435 to [init] %436 : $*Optional<String>  // id: %437
  %438 = begin_borrow %427 : $Optional<String>    // users: %445, %440
  %439 = alloc_stack $Optional<String>            // users: %443, %444, %440
  %440 = store_borrow %438 to %439 : $*Optional<String>
  %441 = metatype $@thin Optional<String>.Type    // user: %443
  // function_ref static Optional<A>.== infix(_:_:)
  %442 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %443
  %443 = apply %442<String>(%436, %439, %441) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %448
  dealloc_stack %439 : $*Optional<String>         // id: %444
  end_borrow %438 : $Optional<String>             // id: %445
  destroy_addr %436 : $*Optional<String>          // id: %446
  dealloc_stack %436 : $*Optional<String>         // id: %447
  %448 = struct_extract %443 : $Bool, #Bool._value // user: %449
  cond_br %448, bb16, bb17                        // id: %449

bb16:                                             // Preds: bb15
  destroy_value %427 : $Optional<String>          // id: %450
  %451 = integer_literal $Builtin.Int64, 1        // user: %456
  %452 = begin_access [modify] [dynamic] %60 : $*Int // users: %461, %453, %463
  %453 = struct_element_addr %452 : $*Int, #Int._value // user: %454
  %454 = load [trivial] %453 : $*Builtin.Int64    // user: %456
  %455 = integer_literal $Builtin.Int1, -1        // user: %456
  %456 = builtin "sadd_with_overflow_Int64"(%454 : $Builtin.Int64, %451 : $Builtin.Int64, %455 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %457
  (%457, %458) = destructure_tuple %456 : $(Builtin.Int64, Builtin.Int1) // users: %460, %459
  cond_fail %458 : $Builtin.Int1, "arithmetic overflow" // id: %459
  %460 = struct $Int (%457 : $Builtin.Int64)      // user: %461
  store %460 to [trivial] %452 : $*Int            // id: %461
  %462 = tuple ()
  end_access %452 : $*Int                         // id: %463
  end_borrow %209 : $Optional<String>             // id: %464
  br bb25                                         // id: %465

bb17:                                             // Preds: bb15
  destroy_value %427 : $Optional<String>          // id: %466
  %467 = copy_value %209 : $Optional<String>      // users: %490, %534, %478, %468
  debug_value %467 : $Optional<String>, let, name "$match" // id: %468
  %469 = string_literal utf8 "exec"               // user: %474
  %470 = integer_literal $Builtin.Word, 4         // user: %474
  %471 = integer_literal $Builtin.Int1, -1        // user: %474
  %472 = metatype $@thin String.Type              // user: %474
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %473 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %474
  %474 = apply %473(%469, %470, %471, %472) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %475
  %475 = enum $Optional<String>, #Optional.some!enumelt, %474 : $String // user: %477
  %476 = alloc_stack $Optional<String>            // users: %483, %487, %486, %477
  store %475 to [init] %476 : $*Optional<String>  // id: %477
  %478 = begin_borrow %467 : $Optional<String>    // users: %485, %480
  %479 = alloc_stack $Optional<String>            // users: %483, %484, %480
  %480 = store_borrow %478 to %479 : $*Optional<String>
  %481 = metatype $@thin Optional<String>.Type    // user: %483
  // function_ref static Optional<A>.== infix(_:_:)
  %482 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %483
  %483 = apply %482<String>(%476, %479, %481) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %488
  dealloc_stack %479 : $*Optional<String>         // id: %484
  end_borrow %478 : $Optional<String>             // id: %485
  destroy_addr %476 : $*Optional<String>          // id: %486
  dealloc_stack %476 : $*Optional<String>         // id: %487
  %488 = struct_extract %483 : $Bool, #Bool._value // user: %489
  cond_br %488, bb18, bb22                        // id: %489

bb18:                                             // Preds: bb17
  destroy_value %467 : $Optional<String>          // id: %490
  %491 = begin_access [read] [static] %137 : $*Array<Closure> // users: %493, %492
  %492 = load [copy] %491 : $*Array<Closure>      // users: %506, %494
  end_access %491 : $*Array<Closure>              // id: %493
  %494 = begin_borrow %492 : $Array<Closure>      // users: %505, %496
  %495 = alloc_stack $Array<Closure>              // users: %524, %531, %497, %496
  %496 = store_borrow %494 to %495 : $*Array<Closure>
  %497 = load_borrow %495 : $*Array<Closure>      // users: %523, %530, %500
  %498 = alloc_stack $Optional<Closure>           // users: %522, %529, %504, %502
  %499 = alloc_stack $Array<Closure>              // users: %503, %502, %500
  %500 = store_borrow %497 to %499 : $*Array<Closure>
  // function_ref BidirectionalCollection.last.getter
  %501 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %502
  %502 = apply %501<[Closure]>(%498, %499) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %499 : $*Array<Closure>           // id: %503
  %504 = load [take] %498 : $*Optional<Closure>   // user: %507
  end_borrow %494 : $Array<Closure>               // id: %505
  destroy_value %492 : $Array<Closure>            // id: %506
  switch_enum %504 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %507

// %508                                           // users: %515, %509
bb19(%508 : @owned $Closure):                     // Preds: bb18
  %509 = begin_borrow %508 : $Closure             // users: %514, %510
  %510 = ref_element_addr %509 : $Closure, #Closure.closure // user: %511
  %511 = begin_access [read] [dynamic] %510 : $*@callee_guaranteed () -> () // users: %513, %512
  %512 = load [copy] %511 : $*@callee_guaranteed () -> () // users: %521, %516
  end_access %511 : $*@callee_guaranteed () -> () // id: %513
  end_borrow %509 : $Closure                      // id: %514
  destroy_value %508 : $Closure                   // id: %515
  %516 = begin_borrow %512 : $@callee_guaranteed () -> () // users: %518, %517
  %517 = apply %516() : $@callee_guaranteed () -> ()
  end_borrow %516 : $@callee_guaranteed () -> ()  // id: %518
  %519 = tuple ()                                 // user: %520
  %520 = enum $Optional<()>, #Optional.some!enumelt, %519 : $() // user: %525
  destroy_value %512 : $@callee_guaranteed () -> () // id: %521
  dealloc_stack %498 : $*Optional<Closure>        // id: %522
  end_borrow %497 : $Array<Closure>               // id: %523
  dealloc_stack %495 : $*Array<Closure>           // id: %524
  br bb20(%520 : $Optional<()>)                   // id: %525

bb20(%526 : $Optional<()>):                       // Preds: bb21 bb19
  end_borrow %209 : $Optional<String>             // id: %527
  br bb25                                         // id: %528

bb21:                                             // Preds: bb18
  dealloc_stack %498 : $*Optional<Closure>        // id: %529
  end_borrow %497 : $Array<Closure>               // id: %530
  dealloc_stack %495 : $*Array<Closure>           // id: %531
  %532 = enum $Optional<()>, #Optional.none!enumelt // user: %533
  br bb20(%532 : $Optional<()>)                   // id: %533

bb22:                                             // Preds: bb17
  destroy_value %467 : $Optional<String>          // id: %534
  %535 = copy_value %209 : $Optional<String>      // users: %558, %566, %546, %536
  debug_value %535 : $Optional<String>, let, name "$match" // id: %536
  %537 = string_literal utf8 "exit"               // user: %542
  %538 = integer_literal $Builtin.Word, 4         // user: %542
  %539 = integer_literal $Builtin.Int1, -1        // user: %542
  %540 = metatype $@thin String.Type              // user: %542
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %541 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %542
  %542 = apply %541(%537, %538, %539, %540) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %543
  %543 = enum $Optional<String>, #Optional.some!enumelt, %542 : $String // user: %545
  %544 = alloc_stack $Optional<String>            // users: %551, %555, %554, %545
  store %543 to [init] %544 : $*Optional<String>  // id: %545
  %546 = begin_borrow %535 : $Optional<String>    // users: %553, %548
  %547 = alloc_stack $Optional<String>            // users: %551, %552, %548
  %548 = store_borrow %546 to %547 : $*Optional<String>
  %549 = metatype $@thin Optional<String>.Type    // user: %551
  // function_ref static Optional<A>.== infix(_:_:)
  %550 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %551
  %551 = apply %550<String>(%544, %547, %549) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %556
  dealloc_stack %547 : $*Optional<String>         // id: %552
  end_borrow %546 : $Optional<String>             // id: %553
  destroy_addr %544 : $*Optional<String>          // id: %554
  dealloc_stack %544 : $*Optional<String>         // id: %555
  %556 = struct_extract %551 : $Bool, #Bool._value // user: %557
  cond_br %556, bb23, bb24                        // id: %557

bb23:                                             // Preds: bb22
  destroy_value %535 : $Optional<String>          // id: %558
  %559 = integer_literal $Builtin.Int1, 0         // user: %560
  %560 = struct $Bool (%559 : $Builtin.Int1)      // user: %562
  %561 = begin_access [modify] [static] %171 : $*Bool // users: %562, %563
  store %560 to [trivial] %561 : $*Bool           // id: %562
  end_access %561 : $*Bool                        // id: %563
  end_borrow %209 : $Optional<String>             // id: %564
  br bb25                                         // id: %565

bb24:                                             // Preds: bb22
  destroy_value %535 : $Optional<String>          // id: %566
  %567 = integer_literal $Builtin.Word, 1         // user: %569
  // function_ref _allocateUninitializedArray<A>(_:)
  %568 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %569
  %569 = apply %568<Any>(%567) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %570
  (%570, %571) = destructure_tuple %569 : $(Array<Any>, Builtin.RawPointer) // users: %589, %586, %572
  %572 = pointer_to_address %571 : $Builtin.RawPointer to [strict] $*Any // user: %579
  %573 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %578
  %574 = integer_literal $Builtin.Word, 44        // user: %578
  %575 = integer_literal $Builtin.Int1, 0         // user: %578
  %576 = metatype $@thin String.Type              // user: %578
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %577 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %578
  %578 = apply %577(%573, %574, %575, %576) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %580
  %579 = init_existential_addr %572 : $*Any, $String // user: %580
  store %578 to [init] %579 : $*String            // id: %580
  // function_ref default argument 1 of print(_:separator:terminator:)
  %581 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %582
  %582 = apply %581() : $@convention(thin) () -> @owned String // users: %588, %586
  // function_ref default argument 2 of print(_:separator:terminator:)
  %583 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %584
  %584 = apply %583() : $@convention(thin) () -> @owned String // users: %587, %586
  // function_ref print(_:separator:terminator:)
  %585 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %586
  %586 = apply %585(%570, %582, %584) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %584 : $String                    // id: %587
  destroy_value %582 : $String                    // id: %588
  destroy_value %570 : $Array<Any>                // id: %589
  end_borrow %209 : $Optional<String>             // id: %590
  br bb25                                         // id: %591

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  destroy_value %207 : $Optional<String>          // id: %592
  br bb1                                          // id: %593

bb26:                                             // Preds: bb1
  %594 = integer_literal $Builtin.Word, 1         // user: %596
  // function_ref _allocateUninitializedArray<A>(_:)
  %595 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %596
  %596 = apply %595<Any>(%594) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %597
  (%597, %598) = destructure_tuple %596 : $(Array<Any>, Builtin.RawPointer) // users: %616, %613, %599
  %599 = pointer_to_address %598 : $Builtin.RawPointer to [strict] $*Any // user: %606
  %600 = string_literal utf8 "===== will end"     // user: %605
  %601 = integer_literal $Builtin.Word, 14        // user: %605
  %602 = integer_literal $Builtin.Int1, -1        // user: %605
  %603 = metatype $@thin String.Type              // user: %605
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %604 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %605
  %605 = apply %604(%600, %601, %602, %603) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %607
  %606 = init_existential_addr %599 : $*Any, $String // user: %607
  store %605 to [init] %606 : $*String            // id: %607
  // function_ref default argument 1 of print(_:separator:terminator:)
  %608 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %609
  %609 = apply %608() : $@convention(thin) () -> @owned String // users: %615, %613
  // function_ref default argument 2 of print(_:separator:terminator:)
  %610 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %611
  %611 = apply %610() : $@convention(thin) () -> @owned String // users: %614, %613
  // function_ref print(_:separator:terminator:)
  %612 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %613
  %613 = apply %612(%597, %609, %611) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %611 : $String                    // id: %614
  destroy_value %609 : $String                    // id: %615
  destroy_value %597 : $Array<Any>                // id: %616
  dealloc_stack %171 : $*Bool                     // id: %617
  destroy_addr %137 : $*Array<Closure>            // id: %618
  dealloc_stack %137 : $*Array<Closure>           // id: %619
  destroy_value %110 : $@callee_guaranteed () -> () // id: %620
  destroy_value %94 : $@callee_guaranteed () -> () // id: %621
  destroy_value %80 : $@callee_guaranteed () -> () // id: %622
  destroy_value %70 : $@callee_guaranteed () -> () // id: %623
  destroy_value %59 : ${ var Int }                // id: %624
  destroy_value %11 : $Number                     // id: %625
  destroy_value %5 : $Empty                       // id: %626
  destroy_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %627
  %628 = tuple ()                                 // user: %629
  return %628 : $()                               // id: %629
} // end sil function '$s4file3fooyyF'

// closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () {
// %0 "name"                                      // users: %3, %1
bb0(%0 : @guaranteed $String):
  debug_value %0 : $String, let, name "name", argno 1 // id: %1
  // function_ref closure #1 in closure #1 in foo()
  %2 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %4
  %3 = copy_value %0 : $String                    // user: %4
  %4 = partial_apply [callee_guaranteed] %2(%3) : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %5
  return %4 : $@callee_guaranteed (Int, Int, Int) -> () // id: %5
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_'

// closure #1 in closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %53, %4
// %1 "weak"                                      // users: %71, %5
// %2 "unowned"                                   // users: %89, %6
// %3 "name"                                      // users: %35, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : @guaranteed $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %11
  (%11, %12) = destructure_tuple %10 : $(Array<Any>, Builtin.RawPointer) // users: %122, %119, %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %112
  %14 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %108, %107, %22, %29, %36, %47, %54, %65, %72, %83, %90, %101, %106
  %15 = integer_literal $Builtin.Int64, 39        // user: %16
  %16 = struct $Int (%15 : $Builtin.Int64)        // user: %21
  %17 = integer_literal $Builtin.Int64, 4         // user: %18
  %18 = struct $Int (%17 : $Builtin.Int64)        // user: %21
  %19 = metatype $@thin DefaultStringInterpolation.Type // user: %21
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %20 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %21
  %21 = apply %20(%16, %18, %19) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %22
  store %21 to [init] %14 : $*DefaultStringInterpolation // id: %22
  %23 = string_literal utf8 "Name: "              // user: %28
  %24 = integer_literal $Builtin.Word, 6          // user: %28
  %25 = integer_literal $Builtin.Int1, -1         // user: %28
  %26 = metatype $@thin String.Type               // user: %28
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %27 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %28 = apply %27(%23, %24, %25, %26) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %33, %31
  %29 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %32, %31
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %30 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %31
  %31 = apply %30(%28, %29) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %29 : $*DefaultStringInterpolation   // id: %32
  destroy_value %28 : $String                     // id: %33
  %34 = alloc_stack $String                       // users: %40, %38, %35
  %35 = store_borrow %3 to %34 : $*String
  %36 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %39, %38
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %37 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %38
  %38 = apply %37<String>(%34, %36) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %36 : $*DefaultStringInterpolation   // id: %39
  dealloc_stack %34 : $*String                    // id: %40
  %41 = string_literal utf8 "; Strong: ("         // user: %46
  %42 = integer_literal $Builtin.Word, 11         // user: %46
  %43 = integer_literal $Builtin.Int1, -1         // user: %46
  %44 = metatype $@thin String.Type               // user: %46
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %45 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %46
  %46 = apply %45(%41, %42, %43, %44) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %51, %49
  %47 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %50, %49
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %48 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %49
  %49 = apply %48(%46, %47) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %47 : $*DefaultStringInterpolation   // id: %50
  destroy_value %46 : $String                     // id: %51
  %52 = alloc_stack $Int                          // users: %58, %56, %53
  store %0 to [trivial] %52 : $*Int               // id: %53
  %54 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 "); Weak: ("          // user: %64
  %60 = integer_literal $Builtin.Word, 10         // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  destroy_value %64 : $String                     // id: %69
  %70 = alloc_stack $Int                          // users: %76, %74, %71
  store %1 to [trivial] %70 : $*Int               // id: %71
  %72 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %75, %74
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %73 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %74
  %74 = apply %73<Int>(%70, %72) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %72 : $*DefaultStringInterpolation   // id: %75
  dealloc_stack %70 : $*Int                       // id: %76
  %77 = string_literal utf8 "); Unowned("         // user: %82
  %78 = integer_literal $Builtin.Word, 11         // user: %82
  %79 = integer_literal $Builtin.Int1, -1         // user: %82
  %80 = metatype $@thin String.Type               // user: %82
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %81 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %82
  %82 = apply %81(%77, %78, %79, %80) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %87, %85
  %83 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %86, %85
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %84 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %85
  %85 = apply %84(%82, %83) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %83 : $*DefaultStringInterpolation   // id: %86
  destroy_value %82 : $String                     // id: %87
  %88 = alloc_stack $Int                          // users: %94, %92, %89
  store %2 to [trivial] %88 : $*Int               // id: %89
  %90 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %93, %92
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %91 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %92
  %92 = apply %91<Int>(%88, %90) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %90 : $*DefaultStringInterpolation   // id: %93
  dealloc_stack %88 : $*Int                       // id: %94
  %95 = string_literal utf8 ")"                   // user: %100
  %96 = integer_literal $Builtin.Word, 1          // user: %100
  %97 = integer_literal $Builtin.Int1, -1         // user: %100
  %98 = metatype $@thin String.Type               // user: %100
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %99 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %100
  %100 = apply %99(%95, %96, %97, %98) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %105, %103
  %101 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %104, %103
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %102 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %103
  %103 = apply %102(%100, %101) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %101 : $*DefaultStringInterpolation  // id: %104
  destroy_value %100 : $String                    // id: %105
  %106 = load [copy] %14 : $*DefaultStringInterpolation // user: %111
  destroy_addr %14 : $*DefaultStringInterpolation // id: %107
  dealloc_stack %14 : $*DefaultStringInterpolation // id: %108
  %109 = metatype $@thin String.Type              // user: %111
  // function_ref String.init(stringInterpolation:)
  %110 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %111
  %111 = apply %110(%106, %109) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %113
  %112 = init_existential_addr %13 : $*Any, $String // user: %113
  store %111 to [init] %112 : $*String            // id: %113
  // function_ref default argument 1 of print(_:separator:terminator:)
  %114 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %115
  %115 = apply %114() : $@convention(thin) () -> @owned String // users: %121, %119
  // function_ref default argument 2 of print(_:separator:terminator:)
  %116 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %117
  %117 = apply %116() : $@convention(thin) () -> @owned String // users: %120, %119
  // function_ref print(_:separator:terminator:)
  %118 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %119
  %119 = apply %118(%11, %115, %117) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %117 : $String                    // id: %120
  destroy_value %115 : $String                    // id: %121
  destroy_value %11 : $Array<Any>                 // id: %122
  %123 = tuple ()                                 // user: %124
  return %123 : $()                               // id: %124
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] [_semantics "array.uninitialized_intrinsic"] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer)

// Int.init(_builtinIntegerLiteral:)
sil public_external [transparent] [serialized] [ossa] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int {
// %0                                             // user: %2
bb0(%0 : $Builtin.IntLiteral, %1 : $@thin Int.Type):
  %2 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%0 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %3
  (%3, %4) = destructure_tuple %2 : $(Builtin.Int64, Builtin.Int1) // user: %5
  %5 = struct $Int (%3 : $Builtin.Int64)          // user: %6
  return %5 : $Int                                // id: %6
} // end sil function '$sSi22_builtinIntegerLiteralSiBI_tcfC'

// DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
sil [serialized] @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// DefaultStringInterpolation.appendLiteral(_:)
sil [serialized] @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// String.init(stringInterpolation:)
sil [serialized] [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String

// default argument 1 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 " "                    // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA0_'

// default argument 2 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 "\n"                   // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA1_'

// print(_:separator:terminator:)
sil @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()

// closure #2 in foo()
sil private [ossa] @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () {
// %0 "number"                                    // users: %3, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %1
  %2 = integer_literal $Builtin.Int64, 1          // user: %8
  %3 = ref_element_addr %0 : $Number, #Number.number // user: %4
  %4 = begin_access [modify] [dynamic] %3 : $*Int // users: %13, %5, %15
  %5 = struct_element_addr %4 : $*Int, #Int._value // user: %6
  %6 = load [trivial] %5 : $*Builtin.Int64        // user: %8
  %7 = integer_literal $Builtin.Int1, -1          // user: %8
  %8 = builtin "sadd_with_overflow_Int64"(%6 : $Builtin.Int64, %2 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %9
  (%9, %10) = destructure_tuple %8 : $(Builtin.Int64, Builtin.Int1) // users: %12, %11
  cond_fail %10 : $Builtin.Int1, "arithmetic overflow" // id: %11
  %12 = struct $Int (%9 : $Builtin.Int64)         // user: %13
  store %12 to [trivial] %4 : $*Int               // id: %13
  %14 = tuple ()
  end_access %4 : $*Int                           // id: %15
  %16 = tuple ()                                  // user: %17
  return %16 : $()                                // id: %17
} // end sil function '$s4file3fooyyFyycfU0_'

// static Int.+= infix(_:_:)
sil public_external [transparent] [serialized] [ossa] @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () {
// %0                                             // users: %14, %3
// %1                                             // user: %5
bb0(%0 : $*Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_element_addr %0 : $*Int, #Int._value // user: %4
  %4 = load [trivial] %3 : $*Builtin.Int64        // user: %7
  %5 = struct_extract %1 : $Int, #Int._value      // user: %7
  %6 = integer_literal $Builtin.Int1, -1          // user: %7
  %7 = builtin "sadd_with_overflow_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %8
  (%8, %9) = destructure_tuple %7 : $(Builtin.Int64, Builtin.Int1) // users: %13, %12
  br bb1                                          // id: %10

bb1:                                              // Preds: bb0
  br bb2                                          // id: %11

bb2:                                              // Preds: bb1
  cond_fail %9 : $Builtin.Int1, "arithmetic overflow" // id: %12
  %13 = struct $Int (%8 : $Builtin.Int64)         // user: %14
  store %13 to [trivial] %0 : $*Int               // id: %14
  %15 = tuple ()                                  // user: %16
  return %15 : $()                                // id: %16
} // end sil function '$sSi2peoiyySiz_SitFZ'

// closure #3 in foo()
sil private [ossa] @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %6, %2
// %1 "value"                                     // user: %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %45, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = integer_literal $Builtin.Int64, 1          // user: %11
  %6 = ref_element_addr %0 : $Number, #Number.number // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*Int // users: %16, %8, %18
  %8 = struct_element_addr %7 : $*Int, #Int._value // user: %9
  %9 = load [trivial] %8 : $*Builtin.Int64        // user: %11
  %10 = integer_literal $Builtin.Int1, -1         // user: %11
  %11 = builtin "sadd_with_overflow_Int64"(%9 : $Builtin.Int64, %5 : $Builtin.Int64, %10 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %12
  (%12, %13) = destructure_tuple %11 : $(Builtin.Int64, Builtin.Int1) // users: %15, %14
  cond_fail %13 : $Builtin.Int1, "arithmetic overflow" // id: %14
  %15 = struct $Int (%12 : $Builtin.Int64)        // user: %16
  store %15 to [trivial] %7 : $*Int               // id: %16
  %17 = tuple ()
  end_access %7 : $*Int                           // id: %18
  %19 = integer_literal $Builtin.Word, 1          // user: %21
  // function_ref _allocateUninitializedArray<A>(_:)
  %20 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %21
  %21 = apply %20<Any>(%19) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %22
  (%22, %23) = destructure_tuple %21 : $(Array<Any>, Builtin.RawPointer) // users: %82, %79, %24
  %24 = pointer_to_address %23 : $Builtin.RawPointer to [strict] $*Any // user: %72
  %25 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %68, %67, %33, %40, %50, %61, %66
  %26 = integer_literal $Builtin.Int64, 3         // user: %27
  %27 = struct $Int (%26 : $Builtin.Int64)        // user: %32
  %28 = integer_literal $Builtin.Int64, 1         // user: %29
  %29 = struct $Int (%28 : $Builtin.Int64)        // user: %32
  %30 = metatype $@thin DefaultStringInterpolation.Type // user: %32
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %31 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %32
  %32 = apply %31(%27, %29, %30) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %33
  store %32 to [init] %25 : $*DefaultStringInterpolation // id: %33
  %34 = string_literal utf8 "v: "                 // user: %39
  %35 = integer_literal $Builtin.Word, 3          // user: %39
  %36 = integer_literal $Builtin.Int1, -1         // user: %39
  %37 = metatype $@thin String.Type               // user: %39
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %38 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %39
  %39 = apply %38(%34, %35, %36, %37) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %44, %42
  %40 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %43, %42
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %41 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %42
  %42 = apply %41(%39, %40) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %40 : $*DefaultStringInterpolation   // id: %43
  destroy_value %39 : $String                     // id: %44
  %45 = begin_access [read] [dynamic] %3 : $*Int  // users: %47, %46
  %46 = load [trivial] %45 : $*Int                // user: %49
  end_access %45 : $*Int                          // id: %47
  %48 = alloc_stack $Int                          // users: %54, %52, %49
  store %46 to [trivial] %48 : $*Int              // id: %49
  %50 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %53, %52
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %51 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %52
  %52 = apply %51<Int>(%48, %50) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %50 : $*DefaultStringInterpolation   // id: %53
  dealloc_stack %48 : $*Int                       // id: %54
  %55 = string_literal utf8 ""                    // user: %60
  %56 = integer_literal $Builtin.Word, 0          // user: %60
  %57 = integer_literal $Builtin.Int1, -1         // user: %60
  %58 = metatype $@thin String.Type               // user: %60
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %59 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %60
  %60 = apply %59(%55, %56, %57, %58) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %65, %63
  %61 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %64, %63
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %62 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %63
  %63 = apply %62(%60, %61) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %61 : $*DefaultStringInterpolation   // id: %64
  destroy_value %60 : $String                     // id: %65
  %66 = load [copy] %25 : $*DefaultStringInterpolation // user: %71
  destroy_addr %25 : $*DefaultStringInterpolation // id: %67
  dealloc_stack %25 : $*DefaultStringInterpolation // id: %68
  %69 = metatype $@thin String.Type               // user: %71
  // function_ref String.init(stringInterpolation:)
  %70 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %71
  %71 = apply %70(%66, %69) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %73
  %72 = init_existential_addr %24 : $*Any, $String // user: %73
  store %71 to [init] %72 : $*String              // id: %73
  // function_ref default argument 1 of print(_:separator:terminator:)
  %74 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %75
  %75 = apply %74() : $@convention(thin) () -> @owned String // users: %81, %79
  // function_ref default argument 2 of print(_:separator:terminator:)
  %76 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %77
  %77 = apply %76() : $@convention(thin) () -> @owned String // users: %80, %79
  // function_ref print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %79
  %79 = apply %78(%22, %75, %77) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %77 : $String                     // id: %80
  destroy_value %75 : $String                     // id: %81
  destroy_value %22 : $Array<Any>                 // id: %82
  %83 = tuple ()                                  // user: %84
  return %83 : $()                                // id: %84
} // end sil function '$s4file3fooyyFyycfU1_'

// closure #4 in foo()
sil private [ossa] @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () {
// %0 "number"                                    // users: %5, %2
// %1 "empty"                                     // users: %19, %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %3
  %4 = integer_literal $Builtin.Int64, 1          // user: %10
  %5 = ref_element_addr %0 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %15, %7, %17
  %7 = struct_element_addr %6 : $*Int, #Int._value // user: %8
  %8 = load [trivial] %7 : $*Builtin.Int64        // user: %10
  %9 = integer_literal $Builtin.Int1, -1          // user: %10
  %10 = builtin "sadd_with_overflow_Int64"(%8 : $Builtin.Int64, %4 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %11
  (%11, %12) = destructure_tuple %10 : $(Builtin.Int64, Builtin.Int1) // users: %14, %13
  cond_fail %12 : $Builtin.Int1, "arithmetic overflow" // id: %13
  %14 = struct $Int (%11 : $Builtin.Int64)        // user: %15
  store %14 to [trivial] %6 : $*Int               // id: %15
  %16 = tuple ()
  end_access %6 : $*Int                           // id: %17
  // function_ref Empty.foo()
  %18 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %19
  %19 = apply %18(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %20 = tuple ()                                  // user: %21
  return %20 : $()                                // id: %21
} // end sil function '$s4file3fooyyFyycfU2_'

// closure #5 in foo()
sil private [ossa] @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %8, %3
// %1 "empty"                                     // users: %22, %4
// %2 "value"                                     // user: %5
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty, %2 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %49, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = integer_literal $Builtin.Int64, 1          // user: %13
  %8 = ref_element_addr %0 : $Number, #Number.number // user: %9
  %9 = begin_access [modify] [dynamic] %8 : $*Int // users: %18, %10, %20
  %10 = struct_element_addr %9 : $*Int, #Int._value // user: %11
  %11 = load [trivial] %10 : $*Builtin.Int64      // user: %13
  %12 = integer_literal $Builtin.Int1, -1         // user: %13
  %13 = builtin "sadd_with_overflow_Int64"(%11 : $Builtin.Int64, %7 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %14
  (%14, %15) = destructure_tuple %13 : $(Builtin.Int64, Builtin.Int1) // users: %17, %16
  cond_fail %15 : $Builtin.Int1, "arithmetic overflow" // id: %16
  %17 = struct $Int (%14 : $Builtin.Int64)        // user: %18
  store %17 to [trivial] %9 : $*Int               // id: %18
  %19 = tuple ()
  end_access %9 : $*Int                           // id: %20
  // function_ref Empty.foo()
  %21 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %22
  %22 = apply %21(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %23 = integer_literal $Builtin.Word, 1          // user: %25
  // function_ref _allocateUninitializedArray<A>(_:)
  %24 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %25
  %25 = apply %24<Any>(%23) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %26
  (%26, %27) = destructure_tuple %25 : $(Array<Any>, Builtin.RawPointer) // users: %86, %83, %28
  %28 = pointer_to_address %27 : $Builtin.RawPointer to [strict] $*Any // user: %76
  %29 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %72, %71, %37, %44, %54, %65, %70
  %30 = integer_literal $Builtin.Int64, 3         // user: %31
  %31 = struct $Int (%30 : $Builtin.Int64)        // user: %36
  %32 = integer_literal $Builtin.Int64, 1         // user: %33
  %33 = struct $Int (%32 : $Builtin.Int64)        // user: %36
  %34 = metatype $@thin DefaultStringInterpolation.Type // user: %36
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %35 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %36
  %36 = apply %35(%31, %33, %34) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %37
  store %36 to [init] %29 : $*DefaultStringInterpolation // id: %37
  %38 = string_literal utf8 "v: "                 // user: %43
  %39 = integer_literal $Builtin.Word, 3          // user: %43
  %40 = integer_literal $Builtin.Int1, -1         // user: %43
  %41 = metatype $@thin String.Type               // user: %43
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %42 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %43
  %43 = apply %42(%38, %39, %40, %41) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %48, %46
  %44 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %47, %46
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %45 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %46
  %46 = apply %45(%43, %44) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %44 : $*DefaultStringInterpolation   // id: %47
  destroy_value %43 : $String                     // id: %48
  %49 = begin_access [read] [dynamic] %5 : $*Int  // users: %51, %50
  %50 = load [trivial] %49 : $*Int                // user: %53
  end_access %49 : $*Int                          // id: %51
  %52 = alloc_stack $Int                          // users: %58, %56, %53
  store %50 to [trivial] %52 : $*Int              // id: %53
  %54 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 ""                    // user: %64
  %60 = integer_literal $Builtin.Word, 0          // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  destroy_value %64 : $String                     // id: %69
  %70 = load [copy] %29 : $*DefaultStringInterpolation // user: %75
  destroy_addr %29 : $*DefaultStringInterpolation // id: %71
  dealloc_stack %29 : $*DefaultStringInterpolation // id: %72
  %73 = metatype $@thin String.Type               // user: %75
  // function_ref String.init(stringInterpolation:)
  %74 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %75
  %75 = apply %74(%70, %73) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %77
  %76 = init_existential_addr %28 : $*Any, $String // user: %77
  store %75 to [init] %76 : $*String              // id: %77
  // function_ref default argument 1 of print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %79
  %79 = apply %78() : $@convention(thin) () -> @owned String // users: %85, %83
  // function_ref default argument 2 of print(_:separator:terminator:)
  %80 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %81
  %81 = apply %80() : $@convention(thin) () -> @owned String // users: %84, %83
  // function_ref print(_:separator:terminator:)
  %82 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %83
  %83 = apply %82(%26, %79, %81) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %81 : $String                     // id: %84
  destroy_value %79 : $String                     // id: %85
  destroy_value %26 : $Array<Any>                 // id: %86
  %87 = tuple ()                                  // user: %88
  return %87 : $()                                // id: %88
} // end sil function '$s4file3fooyyFyycfU3_'

// Array.init()
sil [serialized] [_semantics "array.init.empty"] @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>

// Array.reserveCapacity(_:)
sil [serialized] [_semantics "array.mutate_unknown"] @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()

// Bool.init(_builtinBooleanLiteral:)
sil public_external [transparent] [serialized] [ossa] @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Builtin.Int1, %1 : $@thin Bool.Type):
  %2 = struct $Bool (%0 : $Builtin.Int1)          // user: %3
  return %2 : $Bool                               // id: %3
} // end sil function '$sSb22_builtinBooleanLiteralSbBi1__tcfC'

// default argument 0 of readLine(strippingNewline:)
sil shared_external [serialized] @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool {
bb0:
  %0 = integer_literal $Builtin.Int1, -1          // user: %1
  %1 = struct $Bool (%0 : $Builtin.Int1)          // user: %2
  return %1 : $Bool                               // id: %2
} // end sil function '$ss8readLine16strippingNewlineSSSgSb_tFfA_'

// readLine(strippingNewline:)
sil @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String>

// ~= infix<A>(_:_:)
sil public_external [transparent] [serialized] [ossa] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <T where T : Equatable> (@in_guaranteed T, @in_guaranteed T) -> Bool {
// %0                                             // user: %4
// %1                                             // user: %4
bb0(%0 : $*T, %1 : $*T):
  %2 = metatype $@thick T.Type                    // user: %4
  %3 = witness_method $T, #Equatable."==" : <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %4
  %4 = apply %3<T>(%0, %1, %2) : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %5
  return %4 : $Bool                               // id: %5
} // end sil function '$ss2teoiySbx_xtSQRzlF'

// Array.append(_:)
sil [serialized] [_semantics "array.append_element"] @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()

// Collection.isEmpty.getter
sil [serialized] @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool

// static Bool.! prefix(_:)
sil public_external [transparent] [serialized] [ossa] @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Bool, %1 : $@thin Bool.Type):
  %2 = struct_extract %0 : $Bool, #Bool._value    // user: %4
  %3 = integer_literal $Builtin.Int1, -1          // user: %4
  %4 = builtin "xor_Int1"(%2 : $Builtin.Int1, %3 : $Builtin.Int1) : $Builtin.Int1 // user: %5
  %5 = struct $Bool (%4 : $Builtin.Int1)          // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sSb1nopyS2bFZ'

// RangeReplaceableCollection<>.removeLast()
sil [serialized] @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element

// BidirectionalCollection.last.getter
sil [serialized] @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>

// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
sil shared_external [transparent] [serialized] [thunk] [ossa] @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thick Optional<τ_0_0>.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Optional<τ_0_0>, %1 : $*Optional<τ_0_0>, %2 : $@thick Optional<τ_0_0>.Type):
  %3 = metatype $@thin Optional<τ_0_0>.Type      // user: %5
  // function_ref static Optional<A>.== infix(_:_:)
  %4 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %5
  %5 = apply %4<τ_0_0>(%0, %1, %3) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW'

// static Optional<A>.== infix(_:_:)
sil [serialized] @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool

sil_vtable Empty {
  #Empty.init!allocator: (Empty.Type) -> () -> Empty : @$s4file5EmptyCACycfC	// Empty.__allocating_init()
  #Empty.deinit!deallocator: @$s4file5EmptyCfD	// Empty.__deallocating_deinit
}

sil_vtable Number {
  #Number.init!allocator: (Number.Type) -> (Int) -> Number : @$s4file6NumberC6numberACSi_tcfC	// Number.__allocating_init(number:)
  #Number.deinit!deallocator: @$s4file6NumberCfD	// Number.__deallocating_deinit
}

sil_vtable Closure {
  #Closure.init!allocator: (Closure.Type) -> (@escaping () -> ()) -> Closure : @$s4file7ClosureCyACyyccfC	// Closure.__allocating_init(_:)
  #Closure.deinit!deallocator: @$s4file7ClosureCfD	// Closure.__deallocating_deinit
}

sil_witness_table public_external [serialized] <Wrapped where Wrapped : Equatable> Optional<Wrapped>: Equatable module Swift {
  method #Equatable."==": <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW	// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
  conditional_conformance (Wrapped: Equatable): dependent
}



*** SIL module before Serialization ***
sil_stage canonical

import Builtin
import Swift
import SwiftShims

// main
sil [ossa] @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

// Empty.foo()
sil hidden [ossa] @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4file5EmptyC3fooyyF'

// Empty.deinit
sil hidden [ossa] @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Empty to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file5EmptyCfd'

// Empty.__deallocating_deinit
sil hidden [ossa] @$s4file5EmptyCfD : $@convention(method) (@owned Empty) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  // function_ref Empty.deinit
  %2 = function_ref @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Empty                   // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Empty                          // id: %5
  end_lifetime %0 : $Empty                        // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Empty // user: %8
  dealloc_ref %7 : $Empty                         // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file5EmptyCfD'

// Empty.__allocating_init()
sil hidden [exact_self_class] [ossa] @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty {
// %0 "$metatype"
bb0(%0 : $@thick Empty.Type):
  %1 = alloc_ref $Empty                           // user: %3
  // function_ref Empty.init()
  %2 = function_ref @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Empty) -> @owned Empty // user: %4
  return %3 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfC'

// Empty.init()
sil hidden [ossa] @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty {
// %0 "self"                                      // users: %2, %3, %1
bb0(%0 : @owned $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = copy_value %0 : $Empty                     // user: %4
  destroy_value %0 : $Empty                       // id: %3
  return %2 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfc'

// Number.number.getter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivg : $@convention(method) (@guaranteed Number) -> Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*Int   // users: %5, %4
  %4 = load [trivial] %3 : $*Int                  // user: %6
  end_access %3 : $*Int                           // id: %5
  return %4 : $Int                                // id: %6
} // end sil function '$s4file6NumberC6numberSivg'

// Number.number.setter
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivs : $@convention(method) (Int, @guaranteed Number) -> () {
// %0 "value"                                     // users: %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : @guaranteed $Number):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to [trivial] %5 : $*Int                // id: %6
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9
} // end sil function '$s4file6NumberC6numberSivs'

// Number.number.modify
sil hidden [transparent] [ossa] @$s4file6NumberC6numberSivM : $@yield_once @convention(method) (@guaranteed Number) -> @yields @inout Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*Int // users: %5, %8, %4
  yield %3 : $*Int, resume bb1, unwind bb2        // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file6NumberC6numberSivM'

// Number.__allocating_init(number:)
sil hidden [exact_self_class] [ossa] @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number {
// %0 "number"                                    // user: %4
// %1 "$metatype"
bb0(%0 : $Int, %1 : $@thick Number.Type):
  %2 = alloc_ref $Number                          // user: %4
  // function_ref Number.init(number:)
  %3 = function_ref @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (Int, @owned Number) -> @owned Number // user: %5
  return %4 : $Number                             // id: %5
} // end sil function '$s4file6NumberC6numberACSi_tcfC'

// Number.init(number:)
sil hidden [ossa] @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %7, %2
// %1 "self"                                      // users: %4, %10, %11, %3
bb0(%0 : $Int, %1 : @owned $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %1 : $Number                  // users: %9, %5
  %5 = ref_element_addr %4 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %7, %8
  store %0 to [trivial] %6 : $*Int                // id: %7
  end_access %6 : $*Int                           // id: %8
  end_borrow %4 : $Number                         // id: %9
  %10 = copy_value %1 : $Number                   // user: %12
  destroy_value %1 : $Number                      // id: %11
  return %10 : $Number                            // id: %12
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

// Number.deinit
sil hidden [ossa] @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Number to $Builtin.NativeObject // user: %3
  %3 = unchecked_ownership_conversion %2 : $Builtin.NativeObject, @guaranteed to @owned // user: %4
  return %3 : $Builtin.NativeObject               // id: %4
} // end sil function '$s4file6NumberCfd'

// Number.__deallocating_deinit
sil hidden [ossa] @$s4file6NumberCfD : $@convention(method) (@owned Number) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  // function_ref Number.deinit
  %2 = function_ref @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Number                  // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Number                         // id: %5
  end_lifetime %0 : $Number                       // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Number // user: %8
  dealloc_ref %7 : $Number                        // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file6NumberCfD'

// Closure.closure.getter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvg : $@convention(method) (@guaranteed Closure) -> @owned @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  %4 = load [copy] %3 : $*@callee_guaranteed () -> () // user: %6
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  return %4 : $@callee_guaranteed () -> ()        // id: %6
} // end sil function '$s4file7ClosureC7closureyycvg'

// Closure.closure.setter
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvs : $@convention(method) (@owned @callee_guaranteed () -> (), @guaranteed Closure) -> () {
// %0 "value"                                     // users: %11, %4, %2
// %1 "self"                                      // users: %6, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @guaranteed $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "value", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %10, %5
  %5 = copy_value %4 : $@callee_guaranteed () -> () // user: %8
  %6 = ref_element_addr %1 : $Closure, #Closure.closure // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*@callee_guaranteed () -> () // users: %8, %9
  store %5 to [assign] %7 : $*@callee_guaranteed () -> () // id: %8
  end_access %7 : $*@callee_guaranteed () -> ()   // id: %9
  end_borrow %4 : $@callee_guaranteed () -> ()    // id: %10
  destroy_value %0 : $@callee_guaranteed () -> () // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file7ClosureC7closureyycvs'

// Closure.closure.modify
sil hidden [transparent] [ossa] @$s4file7ClosureC7closureyycvM : $@yield_once @convention(method) (@guaranteed Closure) -> @yields @inout @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %8, %4
  yield %3 : $*@callee_guaranteed () -> (), resume bb1, unwind bb2 // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file7ClosureC7closureyycvM'

// Closure.__allocating_init(_:)
sil hidden [exact_self_class] [ossa] @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure {
// %0 "block"                                     // user: %4
// %1 "$metatype"
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : $@thick Closure.Type):
  %2 = alloc_ref $Closure                         // user: %4
  // function_ref Closure.init(_:)
  %3 = function_ref @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %5
  return %4 : $Closure                            // id: %5
} // end sil function '$s4file7ClosureCyACyyccfC'

// Closure.init(_:)
sil hidden [ossa] @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %15, %5, %2
// %1 "self"                                      // users: %4, %13, %14, %3
bb0(%0 : @owned $@callee_guaranteed () -> (), %1 : @owned $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  %4 = begin_borrow %1 : $Closure                 // users: %12, %7
  %5 = begin_borrow %0 : $@callee_guaranteed () -> () // users: %11, %6
  %6 = copy_value %5 : $@callee_guaranteed () -> () // user: %9
  %7 = ref_element_addr %4 : $Closure, #Closure.closure // user: %8
  %8 = begin_access [modify] [dynamic] %7 : $*@callee_guaranteed () -> () // users: %9, %10
  store %6 to [init] %8 : $*@callee_guaranteed () -> () // id: %9
  end_access %8 : $*@callee_guaranteed () -> ()   // id: %10
  end_borrow %5 : $@callee_guaranteed () -> ()    // id: %11
  end_borrow %4 : $Closure                        // id: %12
  %13 = copy_value %1 : $Closure                  // user: %16
  destroy_value %1 : $Closure                     // id: %14
  destroy_value %0 : $@callee_guaranteed () -> () // id: %15
  return %13 : $Closure                           // id: %16
} // end sil function '$s4file7ClosureCyACyyccfc'

// Closure.deinit
sil hidden [ossa] @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %6, %2, %1
bb0(%0 : @guaranteed $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [deinit] [static] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  destroy_addr %3 : $*@callee_guaranteed () -> () // id: %4
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = unchecked_ref_cast %0 : $Closure to $Builtin.NativeObject // user: %7
  %7 = unchecked_ownership_conversion %6 : $Builtin.NativeObject, @guaranteed to @owned // user: %8
  return %7 : $Builtin.NativeObject               // id: %8
} // end sil function '$s4file7ClosureCfd'

// Closure.__deallocating_deinit
sil hidden [ossa] @$s4file7ClosureCfD : $@convention(method) (@owned Closure) -> () {
// %0 "self"                                      // users: %6, %3, %1
bb0(%0 : @owned $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  // function_ref Closure.deinit
  %2 = function_ref @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %4
  %3 = begin_borrow %0 : $Closure                 // users: %5, %4
  %4 = apply %2(%3) : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %7
  end_borrow %3 : $Closure                        // id: %5
  end_lifetime %0 : $Closure                      // id: %6
  %7 = unchecked_ref_cast %4 : $Builtin.NativeObject to $Closure // user: %8
  dealloc_ref %7 : $Closure                       // id: %8
  %9 = tuple ()                                   // user: %10
  return %9 : $()                                 // id: %10
} // end sil function '$s4file7ClosureCfD'

// foo()
sil hidden [ossa] @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %627, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %626, %102, %87, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %11
  %8 = integer_literal $Builtin.Int64, 0          // user: %9
  %9 = struct $Int (%8 : $Builtin.Int64)          // user: %11
  // function_ref Number.__allocating_init(number:)
  %10 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %11
  %11 = apply %10(%9, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %625, %98, %83, %73, %64, %12
  debug_value %11 : $Number, let, name "number"   // id: %12
  %13 = integer_literal $Builtin.Word, 1          // user: %15
  // function_ref _allocateUninitializedArray<A>(_:)
  %14 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %15
  %15 = apply %14<Any>(%13) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %16
  (%16, %17) = destructure_tuple %15 : $(Array<Any>, Builtin.RawPointer) // users: %35, %32, %18
  %18 = pointer_to_address %17 : $Builtin.RawPointer to [strict] $*Any // user: %25
  %19 = string_literal utf8 "===== Did init"      // user: %24
  %20 = integer_literal $Builtin.Word, 14         // user: %24
  %21 = integer_literal $Builtin.Int1, -1         // user: %24
  %22 = metatype $@thin String.Type               // user: %24
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %23 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %24
  %24 = apply %23(%19, %20, %21, %22) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %25 = init_existential_addr %18 : $*Any, $String // user: %26
  store %24 to [init] %25 : $*String              // id: %26
  // function_ref default argument 1 of print(_:separator:terminator:)
  %27 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %28
  %28 = apply %27() : $@convention(thin) () -> @owned String // users: %34, %32
  // function_ref default argument 2 of print(_:separator:terminator:)
  %29 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %30
  %30 = apply %29() : $@convention(thin) () -> @owned String // users: %33, %32
  // function_ref print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %32
  %32 = apply %31(%16, %28, %30) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %30 : $String                     // id: %33
  destroy_value %28 : $String                     // id: %34
  destroy_value %16 : $Array<Any>                 // id: %35
  %36 = integer_literal $Builtin.Word, 1          // user: %38
  // function_ref _allocateUninitializedArray<A>(_:)
  %37 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %38
  %38 = apply %37<Any>(%36) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %39
  (%39, %40) = destructure_tuple %38 : $(Array<Any>, Builtin.RawPointer) // users: %58, %55, %41
  %41 = pointer_to_address %40 : $Builtin.RawPointer to [strict] $*Any // user: %48
  %42 = string_literal utf8 "===== Did hook"      // user: %47
  %43 = integer_literal $Builtin.Word, 14         // user: %47
  %44 = integer_literal $Builtin.Int1, -1         // user: %47
  %45 = metatype $@thin String.Type               // user: %47
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %46 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %47
  %47 = apply %46(%42, %43, %44, %45) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %49
  %48 = init_existential_addr %41 : $*Any, $String // user: %49
  store %47 to [init] %48 : $*String              // id: %49
  // function_ref default argument 1 of print(_:separator:terminator:)
  %50 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %51
  %51 = apply %50() : $@convention(thin) () -> @owned String // users: %57, %55
  // function_ref default argument 2 of print(_:separator:terminator:)
  %52 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %53
  %53 = apply %52() : $@convention(thin) () -> @owned String // users: %56, %55
  // function_ref print(_:separator:terminator:)
  %54 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %55
  %55 = apply %54(%39, %51, %53) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %53 : $String                     // id: %56
  destroy_value %51 : $String                     // id: %57
  destroy_value %39 : $Array<Any>                 // id: %58
  %59 = alloc_box ${ var Int }, var, name "value" // users: %624, %109, %79, %60
  %60 = project_box %59 : ${ var Int }, 0         // users: %452, %63
  %61 = integer_literal $Builtin.Int64, 0         // user: %62
  %62 = struct $Int (%61 : $Builtin.Int64)        // user: %63
  store %62 to [trivial] %60 : $*Int              // id: %63
  %64 = begin_borrow %11 : $Number                // users: %67, %65
  %65 = copy_value %64 : $Number                  // users: %72, %69, %66
  debug_value %65 : $Number, let, name "number"   // id: %66
  end_borrow %64 : $Number                        // id: %67
  // function_ref closure #2 in foo()
  %68 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %70
  %69 = copy_value %65 : $Number                  // user: %70
  %70 = partial_apply [callee_guaranteed] %68(%69) : $@convention(thin) (@guaranteed Number) -> () // users: %623, %235, %71
  debug_value %70 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %71
  destroy_value %65 : $Number                     // id: %72
  %73 = begin_borrow %11 : $Number                // users: %76, %74
  %74 = copy_value %73 : $Number                  // users: %82, %78, %75
  debug_value %74 : $Number, let, name "number"   // id: %75
  end_borrow %73 : $Number                        // id: %76
  // function_ref closure #3 in foo()
  %77 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %80
  %78 = copy_value %74 : $Number                  // user: %80
  %79 = copy_value %59 : ${ var Int }             // user: %80
  %80 = partial_apply [callee_guaranteed] %77(%78, %79) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %622, %275, %81
  debug_value %80 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %81
  destroy_value %74 : $Number                     // id: %82
  %83 = begin_borrow %11 : $Number                // users: %86, %84
  %84 = copy_value %83 : $Number                  // users: %97, %92, %85
  debug_value %84 : $Number, let, name "number"   // id: %85
  end_borrow %83 : $Number                        // id: %86
  %87 = begin_borrow %5 : $Empty                  // users: %90, %88
  %88 = copy_value %87 : $Empty                   // users: %96, %93, %89
  debug_value %88 : $Empty, let, name "empty"     // id: %89
  end_borrow %87 : $Empty                         // id: %90
  // function_ref closure #4 in foo()
  %91 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %94
  %92 = copy_value %84 : $Number                  // user: %94
  %93 = copy_value %88 : $Empty                   // user: %94
  %94 = partial_apply [callee_guaranteed] %91(%92, %93) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %621, %315, %95
  debug_value %94 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %95
  destroy_value %88 : $Empty                      // id: %96
  destroy_value %84 : $Number                     // id: %97
  %98 = begin_borrow %11 : $Number                // users: %101, %99
  %99 = copy_value %98 : $Number                  // users: %113, %107, %100
  debug_value %99 : $Number, let, name "number"   // id: %100
  end_borrow %98 : $Number                        // id: %101
  %102 = begin_borrow %5 : $Empty                 // users: %105, %103
  %103 = copy_value %102 : $Empty                 // users: %112, %108, %104
  debug_value %103 : $Empty, let, name "empty"    // id: %104
  end_borrow %102 : $Empty                        // id: %105
  // function_ref closure #5 in foo()
  %106 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %110
  %107 = copy_value %99 : $Number                 // user: %110
  %108 = copy_value %103 : $Empty                 // user: %110
  %109 = copy_value %59 : ${ var Int }            // user: %110
  %110 = partial_apply [callee_guaranteed] %106(%107, %108, %109) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %620, %355, %111
  debug_value %110 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %111
  destroy_value %103 : $Empty                     // id: %112
  destroy_value %99 : $Number                     // id: %113
  %114 = integer_literal $Builtin.Word, 1         // user: %116
  // function_ref _allocateUninitializedArray<A>(_:)
  %115 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %116
  %116 = apply %115<Any>(%114) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %117
  (%117, %118) = destructure_tuple %116 : $(Array<Any>, Builtin.RawPointer) // users: %136, %133, %119
  %119 = pointer_to_address %118 : $Builtin.RawPointer to [strict] $*Any // user: %126
  %120 = string_literal utf8 "===== Did init closures" // user: %125
  %121 = integer_literal $Builtin.Word, 23        // user: %125
  %122 = integer_literal $Builtin.Int1, -1        // user: %125
  %123 = metatype $@thin String.Type              // user: %125
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %124 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %125
  %125 = apply %124(%120, %121, %122, %123) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %127
  %126 = init_existential_addr %119 : $*Any, $String // user: %127
  store %125 to [init] %126 : $*String            // id: %127
  // function_ref default argument 1 of print(_:separator:terminator:)
  %128 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %129
  %129 = apply %128() : $@convention(thin) () -> @owned String // users: %135, %133
  // function_ref default argument 2 of print(_:separator:terminator:)
  %130 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %131
  %131 = apply %130() : $@convention(thin) () -> @owned String // users: %134, %133
  // function_ref print(_:separator:terminator:)
  %132 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %133
  %133 = apply %132(%117, %129, %131) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %131 : $String                    // id: %134
  destroy_value %129 : $String                    // id: %135
  destroy_value %117 : $Array<Any>                // id: %136
  %137 = alloc_stack $Array<Closure>, var, name "storage" // users: %619, %618, %141, %144, %242, %282, %322, %362, %394, %415, %491
  %138 = metatype $@thin Array<Closure>.Type      // user: %140
  // function_ref Array.init()
  %139 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %140
  %140 = apply %139<Closure>(%138) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %141
  store %140 to [init] %137 : $*Array<Closure>    // id: %141
  %142 = integer_literal $Builtin.Int64, 100      // user: %143
  %143 = struct $Int (%142 : $Builtin.Int64)      // user: %146
  %144 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %147, %146
  // function_ref Array.reserveCapacity(_:)
  %145 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %146
  %146 = apply %145<Closure>(%143, %144) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %144 : $*Array<Closure>              // id: %147
  %148 = integer_literal $Builtin.Word, 1         // user: %150
  // function_ref _allocateUninitializedArray<A>(_:)
  %149 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %150
  %150 = apply %149<Any>(%148) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %151
  (%151, %152) = destructure_tuple %150 : $(Array<Any>, Builtin.RawPointer) // users: %170, %167, %153
  %153 = pointer_to_address %152 : $Builtin.RawPointer to [strict] $*Any // user: %160
  %154 = string_literal utf8 "===== Did init array" // user: %159
  %155 = integer_literal $Builtin.Word, 20        // user: %159
  %156 = integer_literal $Builtin.Int1, -1        // user: %159
  %157 = metatype $@thin String.Type              // user: %159
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %158 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %159
  %159 = apply %158(%154, %155, %156, %157) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %161
  %160 = init_existential_addr %153 : $*Any, $String // user: %161
  store %159 to [init] %160 : $*String            // id: %161
  // function_ref default argument 1 of print(_:separator:terminator:)
  %162 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %163
  %163 = apply %162() : $@convention(thin) () -> @owned String // users: %169, %167
  // function_ref default argument 2 of print(_:separator:terminator:)
  %164 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %165
  %165 = apply %164() : $@convention(thin) () -> @owned String // users: %168, %167
  // function_ref print(_:separator:terminator:)
  %166 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %167
  %167 = apply %166(%151, %163, %165) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %165 : $String                    // id: %168
  destroy_value %163 : $String                    // id: %169
  destroy_value %151 : $Array<Any>                // id: %170
  %171 = alloc_stack $Bool, var, name "run"       // users: %617, %174, %176, %561
  %172 = integer_literal $Builtin.Int1, -1        // user: %173
  %173 = struct $Bool (%172 : $Builtin.Int1)      // user: %174
  store %173 to [trivial] %171 : $*Bool           // id: %174
  br bb1                                          // id: %175

bb1:                                              // Preds: bb25 bb0
  %176 = begin_access [read] [static] %171 : $*Bool // users: %177, %179
  %177 = struct_element_addr %176 : $*Bool, #Bool._value // user: %178
  %178 = load [trivial] %177 : $*Builtin.Int1     // user: %180
  end_access %176 : $*Bool                        // id: %179
  cond_br %178, bb2, bb26                         // id: %180

bb2:                                              // Preds: bb1
  %181 = integer_literal $Builtin.Word, 1         // user: %183
  // function_ref _allocateUninitializedArray<A>(_:)
  %182 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %183
  %183 = apply %182<Any>(%181) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %184
  (%184, %185) = destructure_tuple %183 : $(Array<Any>, Builtin.RawPointer) // users: %203, %200, %186
  %186 = pointer_to_address %185 : $Builtin.RawPointer to [strict] $*Any // user: %193
  %187 = string_literal utf8 "===== Ask"          // user: %192
  %188 = integer_literal $Builtin.Word, 9         // user: %192
  %189 = integer_literal $Builtin.Int1, -1        // user: %192
  %190 = metatype $@thin String.Type              // user: %192
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %191 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %192
  %192 = apply %191(%187, %188, %189, %190) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %194
  %193 = init_existential_addr %186 : $*Any, $String // user: %194
  store %192 to [init] %193 : $*String            // id: %194
  // function_ref default argument 1 of print(_:separator:terminator:)
  %195 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %196
  %196 = apply %195() : $@convention(thin) () -> @owned String // users: %202, %200
  // function_ref default argument 2 of print(_:separator:terminator:)
  %197 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %198
  %198 = apply %197() : $@convention(thin) () -> @owned String // users: %201, %200
  // function_ref print(_:separator:terminator:)
  %199 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %200
  %200 = apply %199(%184, %196, %198) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %198 : $String                    // id: %201
  destroy_value %196 : $String                    // id: %202
  destroy_value %184 : $Array<Any>                // id: %203
  // function_ref default argument 0 of readLine(strippingNewline:)
  %204 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %205
  %205 = apply %204() : $@convention(thin) () -> Bool // user: %207
  // function_ref readLine(strippingNewline:)
  %206 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %207
  %207 = apply %206(%205) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %592, %209, %208
  debug_value %207 : $Optional<String>, let, name "line" // id: %208
  %209 = begin_borrow %207 : $Optional<String>    // users: %590, %564, %535, %527, %467, %464, %427, %422, %370, %367, %330, %327, %290, %287, %250, %247, %210
  %210 = copy_value %209 : $Optional<String>      // users: %233, %249, %221, %211
  debug_value %210 : $Optional<String>, let, name "$match" // id: %211
  %212 = string_literal utf8 "push1"              // user: %217
  %213 = integer_literal $Builtin.Word, 5         // user: %217
  %214 = integer_literal $Builtin.Int1, -1        // user: %217
  %215 = metatype $@thin String.Type              // user: %217
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %216 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %217
  %217 = apply %216(%212, %213, %214, %215) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %218
  %218 = enum $Optional<String>, #Optional.some!enumelt, %217 : $String // user: %220
  %219 = alloc_stack $Optional<String>            // users: %226, %230, %229, %220
  store %218 to [init] %219 : $*Optional<String>  // id: %220
  %221 = begin_borrow %210 : $Optional<String>    // users: %228, %223
  %222 = alloc_stack $Optional<String>            // users: %226, %227, %223
  %223 = store_borrow %221 to %222 : $*Optional<String>
  %224 = metatype $@thin Optional<String>.Type    // user: %226
  // function_ref static Optional<A>.== infix(_:_:)
  %225 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %226
  %226 = apply %225<String>(%219, %222, %224) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %231
  dealloc_stack %222 : $*Optional<String>         // id: %227
  end_borrow %221 : $Optional<String>             // id: %228
  destroy_addr %219 : $*Optional<String>          // id: %229
  dealloc_stack %219 : $*Optional<String>         // id: %230
  %231 = struct_extract %226 : $Bool, #Bool._value // user: %232
  cond_br %231, bb3, bb4                          // id: %232

bb3:                                              // Preds: bb2
  destroy_value %210 : $Optional<String>          // id: %233
  %234 = metatype $@thick Closure.Type            // user: %238
  %235 = begin_borrow %70 : $@callee_guaranteed () -> () // users: %239, %236
  %236 = copy_value %235 : $@callee_guaranteed () -> () // user: %238
  // function_ref Closure.__allocating_init(_:)
  %237 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %238
  %238 = apply %237(%236, %234) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %241
  end_borrow %235 : $@callee_guaranteed () -> ()  // id: %239
  %240 = alloc_stack $Closure                     // users: %246, %244, %241
  store %238 to [init] %240 : $*Closure           // id: %241
  %242 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %245, %244
  // function_ref Array.append(_:)
  %243 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %244
  %244 = apply %243<Closure>(%240, %242) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %242 : $*Array<Closure>              // id: %245
  dealloc_stack %240 : $*Closure                  // id: %246
  end_borrow %209 : $Optional<String>             // id: %247
  br bb25                                         // id: %248

bb4:                                              // Preds: bb2
  destroy_value %210 : $Optional<String>          // id: %249
  %250 = copy_value %209 : $Optional<String>      // users: %273, %289, %261, %251
  debug_value %250 : $Optional<String>, let, name "$match" // id: %251
  %252 = string_literal utf8 "push1_1"            // user: %257
  %253 = integer_literal $Builtin.Word, 7         // user: %257
  %254 = integer_literal $Builtin.Int1, -1        // user: %257
  %255 = metatype $@thin String.Type              // user: %257
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %256 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %257
  %257 = apply %256(%252, %253, %254, %255) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %258
  %258 = enum $Optional<String>, #Optional.some!enumelt, %257 : $String // user: %260
  %259 = alloc_stack $Optional<String>            // users: %266, %270, %269, %260
  store %258 to [init] %259 : $*Optional<String>  // id: %260
  %261 = begin_borrow %250 : $Optional<String>    // users: %268, %263
  %262 = alloc_stack $Optional<String>            // users: %266, %267, %263
  %263 = store_borrow %261 to %262 : $*Optional<String>
  %264 = metatype $@thin Optional<String>.Type    // user: %266
  // function_ref static Optional<A>.== infix(_:_:)
  %265 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %266
  %266 = apply %265<String>(%259, %262, %264) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %271
  dealloc_stack %262 : $*Optional<String>         // id: %267
  end_borrow %261 : $Optional<String>             // id: %268
  destroy_addr %259 : $*Optional<String>          // id: %269
  dealloc_stack %259 : $*Optional<String>         // id: %270
  %271 = struct_extract %266 : $Bool, #Bool._value // user: %272
  cond_br %271, bb5, bb6                          // id: %272

bb5:                                              // Preds: bb4
  destroy_value %250 : $Optional<String>          // id: %273
  %274 = metatype $@thick Closure.Type            // user: %278
  %275 = begin_borrow %80 : $@callee_guaranteed () -> () // users: %279, %276
  %276 = copy_value %275 : $@callee_guaranteed () -> () // user: %278
  // function_ref Closure.__allocating_init(_:)
  %277 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %278
  %278 = apply %277(%276, %274) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %281
  end_borrow %275 : $@callee_guaranteed () -> ()  // id: %279
  %280 = alloc_stack $Closure                     // users: %286, %284, %281
  store %278 to [init] %280 : $*Closure           // id: %281
  %282 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %285, %284
  // function_ref Array.append(_:)
  %283 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %284
  %284 = apply %283<Closure>(%280, %282) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %282 : $*Array<Closure>              // id: %285
  dealloc_stack %280 : $*Closure                  // id: %286
  end_borrow %209 : $Optional<String>             // id: %287
  br bb25                                         // id: %288

bb6:                                              // Preds: bb4
  destroy_value %250 : $Optional<String>          // id: %289
  %290 = copy_value %209 : $Optional<String>      // users: %313, %329, %301, %291
  debug_value %290 : $Optional<String>, let, name "$match" // id: %291
  %292 = string_literal utf8 "push2"              // user: %297
  %293 = integer_literal $Builtin.Word, 5         // user: %297
  %294 = integer_literal $Builtin.Int1, -1        // user: %297
  %295 = metatype $@thin String.Type              // user: %297
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %296 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %297
  %297 = apply %296(%292, %293, %294, %295) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %298
  %298 = enum $Optional<String>, #Optional.some!enumelt, %297 : $String // user: %300
  %299 = alloc_stack $Optional<String>            // users: %306, %310, %309, %300
  store %298 to [init] %299 : $*Optional<String>  // id: %300
  %301 = begin_borrow %290 : $Optional<String>    // users: %308, %303
  %302 = alloc_stack $Optional<String>            // users: %306, %307, %303
  %303 = store_borrow %301 to %302 : $*Optional<String>
  %304 = metatype $@thin Optional<String>.Type    // user: %306
  // function_ref static Optional<A>.== infix(_:_:)
  %305 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %306
  %306 = apply %305<String>(%299, %302, %304) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %311
  dealloc_stack %302 : $*Optional<String>         // id: %307
  end_borrow %301 : $Optional<String>             // id: %308
  destroy_addr %299 : $*Optional<String>          // id: %309
  dealloc_stack %299 : $*Optional<String>         // id: %310
  %311 = struct_extract %306 : $Bool, #Bool._value // user: %312
  cond_br %311, bb7, bb8                          // id: %312

bb7:                                              // Preds: bb6
  destroy_value %290 : $Optional<String>          // id: %313
  %314 = metatype $@thick Closure.Type            // user: %318
  %315 = begin_borrow %94 : $@callee_guaranteed () -> () // users: %319, %316
  %316 = copy_value %315 : $@callee_guaranteed () -> () // user: %318
  // function_ref Closure.__allocating_init(_:)
  %317 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %318
  %318 = apply %317(%316, %314) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %321
  end_borrow %315 : $@callee_guaranteed () -> ()  // id: %319
  %320 = alloc_stack $Closure                     // users: %326, %324, %321
  store %318 to [init] %320 : $*Closure           // id: %321
  %322 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %325, %324
  // function_ref Array.append(_:)
  %323 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %324
  %324 = apply %323<Closure>(%320, %322) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %322 : $*Array<Closure>              // id: %325
  dealloc_stack %320 : $*Closure                  // id: %326
  end_borrow %209 : $Optional<String>             // id: %327
  br bb25                                         // id: %328

bb8:                                              // Preds: bb6
  destroy_value %290 : $Optional<String>          // id: %329
  %330 = copy_value %209 : $Optional<String>      // users: %353, %369, %341, %331
  debug_value %330 : $Optional<String>, let, name "$match" // id: %331
  %332 = string_literal utf8 "push2_1"            // user: %337
  %333 = integer_literal $Builtin.Word, 7         // user: %337
  %334 = integer_literal $Builtin.Int1, -1        // user: %337
  %335 = metatype $@thin String.Type              // user: %337
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %336 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %337
  %337 = apply %336(%332, %333, %334, %335) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %338
  %338 = enum $Optional<String>, #Optional.some!enumelt, %337 : $String // user: %340
  %339 = alloc_stack $Optional<String>            // users: %346, %350, %349, %340
  store %338 to [init] %339 : $*Optional<String>  // id: %340
  %341 = begin_borrow %330 : $Optional<String>    // users: %348, %343
  %342 = alloc_stack $Optional<String>            // users: %346, %347, %343
  %343 = store_borrow %341 to %342 : $*Optional<String>
  %344 = metatype $@thin Optional<String>.Type    // user: %346
  // function_ref static Optional<A>.== infix(_:_:)
  %345 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %346
  %346 = apply %345<String>(%339, %342, %344) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %351
  dealloc_stack %342 : $*Optional<String>         // id: %347
  end_borrow %341 : $Optional<String>             // id: %348
  destroy_addr %339 : $*Optional<String>          // id: %349
  dealloc_stack %339 : $*Optional<String>         // id: %350
  %351 = struct_extract %346 : $Bool, #Bool._value // user: %352
  cond_br %351, bb9, bb10                         // id: %352

bb9:                                              // Preds: bb8
  destroy_value %330 : $Optional<String>          // id: %353
  %354 = metatype $@thick Closure.Type            // user: %358
  %355 = begin_borrow %110 : $@callee_guaranteed () -> () // users: %359, %356
  %356 = copy_value %355 : $@callee_guaranteed () -> () // user: %358
  // function_ref Closure.__allocating_init(_:)
  %357 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %358
  %358 = apply %357(%356, %354) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %361
  end_borrow %355 : $@callee_guaranteed () -> ()  // id: %359
  %360 = alloc_stack $Closure                     // users: %366, %364, %361
  store %358 to [init] %360 : $*Closure           // id: %361
  %362 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %365, %364
  // function_ref Array.append(_:)
  %363 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %364
  %364 = apply %363<Closure>(%360, %362) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %362 : $*Array<Closure>              // id: %365
  dealloc_stack %360 : $*Closure                  // id: %366
  end_borrow %209 : $Optional<String>             // id: %367
  br bb25                                         // id: %368

bb10:                                             // Preds: bb8
  destroy_value %330 : $Optional<String>          // id: %369
  %370 = copy_value %209 : $Optional<String>      // users: %393, %425, %381, %371
  debug_value %370 : $Optional<String>, let, name "$match" // id: %371
  %372 = string_literal utf8 "pop"                // user: %377
  %373 = integer_literal $Builtin.Word, 3         // user: %377
  %374 = integer_literal $Builtin.Int1, -1        // user: %377
  %375 = metatype $@thin String.Type              // user: %377
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %376 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %377
  %377 = apply %376(%372, %373, %374, %375) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %378
  %378 = enum $Optional<String>, #Optional.some!enumelt, %377 : $String // user: %380
  %379 = alloc_stack $Optional<String>            // users: %386, %390, %389, %380
  store %378 to [init] %379 : $*Optional<String>  // id: %380
  %381 = begin_borrow %370 : $Optional<String>    // users: %388, %383
  %382 = alloc_stack $Optional<String>            // users: %386, %387, %383
  %383 = store_borrow %381 to %382 : $*Optional<String>
  %384 = metatype $@thin Optional<String>.Type    // user: %386
  // function_ref static Optional<A>.== infix(_:_:)
  %385 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %386
  %386 = apply %385<String>(%379, %382, %384) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %391
  dealloc_stack %382 : $*Optional<String>         // id: %387
  end_borrow %381 : $Optional<String>             // id: %388
  destroy_addr %379 : $*Optional<String>          // id: %389
  dealloc_stack %379 : $*Optional<String>         // id: %390
  %391 = struct_extract %386 : $Bool, #Bool._value // user: %392
  cond_br %391, bb11, bb14                        // id: %392

bb11:                                             // Preds: bb10
  destroy_value %370 : $Optional<String>          // id: %393
  %394 = begin_access [read] [static] %137 : $*Array<Closure> // users: %396, %395
  %395 = load [copy] %394 : $*Array<Closure>      // users: %407, %397
  end_access %394 : $*Array<Closure>              // id: %396
  %397 = begin_borrow %395 : $Array<Closure>      // users: %406, %399
  %398 = alloc_stack $Array<Closure>              // users: %412, %400, %399
  %399 = store_borrow %397 to %398 : $*Array<Closure>
  %400 = load_borrow %398 : $*Array<Closure>      // users: %411, %402
  %401 = alloc_stack $Array<Closure>              // users: %405, %404, %402
  %402 = store_borrow %400 to %401 : $*Array<Closure>
  // function_ref Collection.isEmpty.getter
  %403 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %404
  %404 = apply %403<[Closure]>(%401) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %408
  dealloc_stack %401 : $*Array<Closure>           // id: %405
  end_borrow %397 : $Array<Closure>               // id: %406
  destroy_value %395 : $Array<Closure>            // id: %407
  %408 = struct_extract %404 : $Bool, #Bool._value // user: %410
  %409 = integer_literal $Builtin.Int1, -1        // user: %410
  %410 = builtin "xor_Int1"(%408 : $Builtin.Int1, %409 : $Builtin.Int1) : $Builtin.Int1 // user: %413
  end_borrow %400 : $Array<Closure>               // id: %411
  dealloc_stack %398 : $*Array<Closure>           // id: %412
  cond_br %410, bb12, bb13                        // id: %413

bb12:                                             // Preds: bb11
  %414 = alloc_stack $Closure                     // users: %421, %419, %417
  %415 = begin_access [modify] [static] %137 : $*Array<Closure> // users: %418, %417
  // function_ref RangeReplaceableCollection<>.removeLast()
  %416 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %417
  %417 = apply %416<[Closure]>(%414, %415) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %415 : $*Array<Closure>              // id: %418
  %419 = load [take] %414 : $*Closure             // user: %420
  destroy_value %419 : $Closure                   // id: %420
  dealloc_stack %414 : $*Closure                  // id: %421
  end_borrow %209 : $Optional<String>             // id: %422
  br bb25                                         // id: %423

bb13:                                             // Preds: bb11
  br bb15                                         // id: %424

bb14:                                             // Preds: bb10
  destroy_value %370 : $Optional<String>          // id: %425
  br bb15                                         // id: %426

bb15:                                             // Preds: bb13 bb14
  %427 = copy_value %209 : $Optional<String>      // users: %450, %466, %438, %428
  debug_value %427 : $Optional<String>, let, name "$match" // id: %428
  %429 = string_literal utf8 "inc"                // user: %434
  %430 = integer_literal $Builtin.Word, 3         // user: %434
  %431 = integer_literal $Builtin.Int1, -1        // user: %434
  %432 = metatype $@thin String.Type              // user: %434
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %433 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %434
  %434 = apply %433(%429, %430, %431, %432) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %435
  %435 = enum $Optional<String>, #Optional.some!enumelt, %434 : $String // user: %437
  %436 = alloc_stack $Optional<String>            // users: %443, %447, %446, %437
  store %435 to [init] %436 : $*Optional<String>  // id: %437
  %438 = begin_borrow %427 : $Optional<String>    // users: %445, %440
  %439 = alloc_stack $Optional<String>            // users: %443, %444, %440
  %440 = store_borrow %438 to %439 : $*Optional<String>
  %441 = metatype $@thin Optional<String>.Type    // user: %443
  // function_ref static Optional<A>.== infix(_:_:)
  %442 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %443
  %443 = apply %442<String>(%436, %439, %441) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %448
  dealloc_stack %439 : $*Optional<String>         // id: %444
  end_borrow %438 : $Optional<String>             // id: %445
  destroy_addr %436 : $*Optional<String>          // id: %446
  dealloc_stack %436 : $*Optional<String>         // id: %447
  %448 = struct_extract %443 : $Bool, #Bool._value // user: %449
  cond_br %448, bb16, bb17                        // id: %449

bb16:                                             // Preds: bb15
  destroy_value %427 : $Optional<String>          // id: %450
  %451 = integer_literal $Builtin.Int64, 1        // user: %456
  %452 = begin_access [modify] [dynamic] %60 : $*Int // users: %461, %453, %463
  %453 = struct_element_addr %452 : $*Int, #Int._value // user: %454
  %454 = load [trivial] %453 : $*Builtin.Int64    // user: %456
  %455 = integer_literal $Builtin.Int1, -1        // user: %456
  %456 = builtin "sadd_with_overflow_Int64"(%454 : $Builtin.Int64, %451 : $Builtin.Int64, %455 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %457
  (%457, %458) = destructure_tuple %456 : $(Builtin.Int64, Builtin.Int1) // users: %460, %459
  cond_fail %458 : $Builtin.Int1, "arithmetic overflow" // id: %459
  %460 = struct $Int (%457 : $Builtin.Int64)      // user: %461
  store %460 to [trivial] %452 : $*Int            // id: %461
  %462 = tuple ()
  end_access %452 : $*Int                         // id: %463
  end_borrow %209 : $Optional<String>             // id: %464
  br bb25                                         // id: %465

bb17:                                             // Preds: bb15
  destroy_value %427 : $Optional<String>          // id: %466
  %467 = copy_value %209 : $Optional<String>      // users: %490, %534, %478, %468
  debug_value %467 : $Optional<String>, let, name "$match" // id: %468
  %469 = string_literal utf8 "exec"               // user: %474
  %470 = integer_literal $Builtin.Word, 4         // user: %474
  %471 = integer_literal $Builtin.Int1, -1        // user: %474
  %472 = metatype $@thin String.Type              // user: %474
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %473 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %474
  %474 = apply %473(%469, %470, %471, %472) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %475
  %475 = enum $Optional<String>, #Optional.some!enumelt, %474 : $String // user: %477
  %476 = alloc_stack $Optional<String>            // users: %483, %487, %486, %477
  store %475 to [init] %476 : $*Optional<String>  // id: %477
  %478 = begin_borrow %467 : $Optional<String>    // users: %485, %480
  %479 = alloc_stack $Optional<String>            // users: %483, %484, %480
  %480 = store_borrow %478 to %479 : $*Optional<String>
  %481 = metatype $@thin Optional<String>.Type    // user: %483
  // function_ref static Optional<A>.== infix(_:_:)
  %482 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %483
  %483 = apply %482<String>(%476, %479, %481) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %488
  dealloc_stack %479 : $*Optional<String>         // id: %484
  end_borrow %478 : $Optional<String>             // id: %485
  destroy_addr %476 : $*Optional<String>          // id: %486
  dealloc_stack %476 : $*Optional<String>         // id: %487
  %488 = struct_extract %483 : $Bool, #Bool._value // user: %489
  cond_br %488, bb18, bb22                        // id: %489

bb18:                                             // Preds: bb17
  destroy_value %467 : $Optional<String>          // id: %490
  %491 = begin_access [read] [static] %137 : $*Array<Closure> // users: %493, %492
  %492 = load [copy] %491 : $*Array<Closure>      // users: %506, %494
  end_access %491 : $*Array<Closure>              // id: %493
  %494 = begin_borrow %492 : $Array<Closure>      // users: %505, %496
  %495 = alloc_stack $Array<Closure>              // users: %524, %531, %497, %496
  %496 = store_borrow %494 to %495 : $*Array<Closure>
  %497 = load_borrow %495 : $*Array<Closure>      // users: %523, %530, %500
  %498 = alloc_stack $Optional<Closure>           // users: %522, %529, %504, %502
  %499 = alloc_stack $Array<Closure>              // users: %503, %502, %500
  %500 = store_borrow %497 to %499 : $*Array<Closure>
  // function_ref BidirectionalCollection.last.getter
  %501 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %502
  %502 = apply %501<[Closure]>(%498, %499) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %499 : $*Array<Closure>           // id: %503
  %504 = load [take] %498 : $*Optional<Closure>   // user: %507
  end_borrow %494 : $Array<Closure>               // id: %505
  destroy_value %492 : $Array<Closure>            // id: %506
  switch_enum %504 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %507

// %508                                           // users: %515, %509
bb19(%508 : @owned $Closure):                     // Preds: bb18
  %509 = begin_borrow %508 : $Closure             // users: %514, %510
  %510 = ref_element_addr %509 : $Closure, #Closure.closure // user: %511
  %511 = begin_access [read] [dynamic] %510 : $*@callee_guaranteed () -> () // users: %513, %512
  %512 = load [copy] %511 : $*@callee_guaranteed () -> () // users: %521, %516
  end_access %511 : $*@callee_guaranteed () -> () // id: %513
  end_borrow %509 : $Closure                      // id: %514
  destroy_value %508 : $Closure                   // id: %515
  %516 = begin_borrow %512 : $@callee_guaranteed () -> () // users: %518, %517
  %517 = apply %516() : $@callee_guaranteed () -> ()
  end_borrow %516 : $@callee_guaranteed () -> ()  // id: %518
  %519 = tuple ()                                 // user: %520
  %520 = enum $Optional<()>, #Optional.some!enumelt, %519 : $() // user: %525
  destroy_value %512 : $@callee_guaranteed () -> () // id: %521
  dealloc_stack %498 : $*Optional<Closure>        // id: %522
  end_borrow %497 : $Array<Closure>               // id: %523
  dealloc_stack %495 : $*Array<Closure>           // id: %524
  br bb20(%520 : $Optional<()>)                   // id: %525

bb20(%526 : $Optional<()>):                       // Preds: bb21 bb19
  end_borrow %209 : $Optional<String>             // id: %527
  br bb25                                         // id: %528

bb21:                                             // Preds: bb18
  dealloc_stack %498 : $*Optional<Closure>        // id: %529
  end_borrow %497 : $Array<Closure>               // id: %530
  dealloc_stack %495 : $*Array<Closure>           // id: %531
  %532 = enum $Optional<()>, #Optional.none!enumelt // user: %533
  br bb20(%532 : $Optional<()>)                   // id: %533

bb22:                                             // Preds: bb17
  destroy_value %467 : $Optional<String>          // id: %534
  %535 = copy_value %209 : $Optional<String>      // users: %558, %566, %546, %536
  debug_value %535 : $Optional<String>, let, name "$match" // id: %536
  %537 = string_literal utf8 "exit"               // user: %542
  %538 = integer_literal $Builtin.Word, 4         // user: %542
  %539 = integer_literal $Builtin.Int1, -1        // user: %542
  %540 = metatype $@thin String.Type              // user: %542
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %541 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %542
  %542 = apply %541(%537, %538, %539, %540) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %543
  %543 = enum $Optional<String>, #Optional.some!enumelt, %542 : $String // user: %545
  %544 = alloc_stack $Optional<String>            // users: %551, %555, %554, %545
  store %543 to [init] %544 : $*Optional<String>  // id: %545
  %546 = begin_borrow %535 : $Optional<String>    // users: %553, %548
  %547 = alloc_stack $Optional<String>            // users: %551, %552, %548
  %548 = store_borrow %546 to %547 : $*Optional<String>
  %549 = metatype $@thin Optional<String>.Type    // user: %551
  // function_ref static Optional<A>.== infix(_:_:)
  %550 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %551
  %551 = apply %550<String>(%544, %547, %549) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %556
  dealloc_stack %547 : $*Optional<String>         // id: %552
  end_borrow %546 : $Optional<String>             // id: %553
  destroy_addr %544 : $*Optional<String>          // id: %554
  dealloc_stack %544 : $*Optional<String>         // id: %555
  %556 = struct_extract %551 : $Bool, #Bool._value // user: %557
  cond_br %556, bb23, bb24                        // id: %557

bb23:                                             // Preds: bb22
  destroy_value %535 : $Optional<String>          // id: %558
  %559 = integer_literal $Builtin.Int1, 0         // user: %560
  %560 = struct $Bool (%559 : $Builtin.Int1)      // user: %562
  %561 = begin_access [modify] [static] %171 : $*Bool // users: %562, %563
  store %560 to [trivial] %561 : $*Bool           // id: %562
  end_access %561 : $*Bool                        // id: %563
  end_borrow %209 : $Optional<String>             // id: %564
  br bb25                                         // id: %565

bb24:                                             // Preds: bb22
  destroy_value %535 : $Optional<String>          // id: %566
  %567 = integer_literal $Builtin.Word, 1         // user: %569
  // function_ref _allocateUninitializedArray<A>(_:)
  %568 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %569
  %569 = apply %568<Any>(%567) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %570
  (%570, %571) = destructure_tuple %569 : $(Array<Any>, Builtin.RawPointer) // users: %589, %586, %572
  %572 = pointer_to_address %571 : $Builtin.RawPointer to [strict] $*Any // user: %579
  %573 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %578
  %574 = integer_literal $Builtin.Word, 44        // user: %578
  %575 = integer_literal $Builtin.Int1, 0         // user: %578
  %576 = metatype $@thin String.Type              // user: %578
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %577 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %578
  %578 = apply %577(%573, %574, %575, %576) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %580
  %579 = init_existential_addr %572 : $*Any, $String // user: %580
  store %578 to [init] %579 : $*String            // id: %580
  // function_ref default argument 1 of print(_:separator:terminator:)
  %581 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %582
  %582 = apply %581() : $@convention(thin) () -> @owned String // users: %588, %586
  // function_ref default argument 2 of print(_:separator:terminator:)
  %583 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %584
  %584 = apply %583() : $@convention(thin) () -> @owned String // users: %587, %586
  // function_ref print(_:separator:terminator:)
  %585 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %586
  %586 = apply %585(%570, %582, %584) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %584 : $String                    // id: %587
  destroy_value %582 : $String                    // id: %588
  destroy_value %570 : $Array<Any>                // id: %589
  end_borrow %209 : $Optional<String>             // id: %590
  br bb25                                         // id: %591

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  destroy_value %207 : $Optional<String>          // id: %592
  br bb1                                          // id: %593

bb26:                                             // Preds: bb1
  %594 = integer_literal $Builtin.Word, 1         // user: %596
  // function_ref _allocateUninitializedArray<A>(_:)
  %595 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %596
  %596 = apply %595<Any>(%594) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %597
  (%597, %598) = destructure_tuple %596 : $(Array<Any>, Builtin.RawPointer) // users: %616, %613, %599
  %599 = pointer_to_address %598 : $Builtin.RawPointer to [strict] $*Any // user: %606
  %600 = string_literal utf8 "===== will end"     // user: %605
  %601 = integer_literal $Builtin.Word, 14        // user: %605
  %602 = integer_literal $Builtin.Int1, -1        // user: %605
  %603 = metatype $@thin String.Type              // user: %605
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %604 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %605
  %605 = apply %604(%600, %601, %602, %603) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %607
  %606 = init_existential_addr %599 : $*Any, $String // user: %607
  store %605 to [init] %606 : $*String            // id: %607
  // function_ref default argument 1 of print(_:separator:terminator:)
  %608 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %609
  %609 = apply %608() : $@convention(thin) () -> @owned String // users: %615, %613
  // function_ref default argument 2 of print(_:separator:terminator:)
  %610 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %611
  %611 = apply %610() : $@convention(thin) () -> @owned String // users: %614, %613
  // function_ref print(_:separator:terminator:)
  %612 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %613
  %613 = apply %612(%597, %609, %611) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %611 : $String                    // id: %614
  destroy_value %609 : $String                    // id: %615
  destroy_value %597 : $Array<Any>                // id: %616
  dealloc_stack %171 : $*Bool                     // id: %617
  destroy_addr %137 : $*Array<Closure>            // id: %618
  dealloc_stack %137 : $*Array<Closure>           // id: %619
  destroy_value %110 : $@callee_guaranteed () -> () // id: %620
  destroy_value %94 : $@callee_guaranteed () -> () // id: %621
  destroy_value %80 : $@callee_guaranteed () -> () // id: %622
  destroy_value %70 : $@callee_guaranteed () -> () // id: %623
  destroy_value %59 : ${ var Int }                // id: %624
  destroy_value %11 : $Number                     // id: %625
  destroy_value %5 : $Empty                       // id: %626
  destroy_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %627
  %628 = tuple ()                                 // user: %629
  return %628 : $()                               // id: %629
} // end sil function '$s4file3fooyyF'

// closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () {
// %0 "name"                                      // users: %3, %1
bb0(%0 : @guaranteed $String):
  debug_value %0 : $String, let, name "name", argno 1 // id: %1
  // function_ref closure #1 in closure #1 in foo()
  %2 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %4
  %3 = copy_value %0 : $String                    // user: %4
  %4 = partial_apply [callee_guaranteed] %2(%3) : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %5
  return %4 : $@callee_guaranteed (Int, Int, Int) -> () // id: %5
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_'

// closure #1 in closure #1 in foo()
sil private [ossa] @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %53, %4
// %1 "weak"                                      // users: %71, %5
// %2 "unowned"                                   // users: %89, %6
// %3 "name"                                      // users: %35, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : @guaranteed $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %11
  (%11, %12) = destructure_tuple %10 : $(Array<Any>, Builtin.RawPointer) // users: %122, %119, %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %112
  %14 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %108, %107, %22, %29, %36, %47, %54, %65, %72, %83, %90, %101, %106
  %15 = integer_literal $Builtin.Int64, 39        // user: %16
  %16 = struct $Int (%15 : $Builtin.Int64)        // user: %21
  %17 = integer_literal $Builtin.Int64, 4         // user: %18
  %18 = struct $Int (%17 : $Builtin.Int64)        // user: %21
  %19 = metatype $@thin DefaultStringInterpolation.Type // user: %21
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %20 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %21
  %21 = apply %20(%16, %18, %19) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %22
  store %21 to [init] %14 : $*DefaultStringInterpolation // id: %22
  %23 = string_literal utf8 "Name: "              // user: %28
  %24 = integer_literal $Builtin.Word, 6          // user: %28
  %25 = integer_literal $Builtin.Int1, -1         // user: %28
  %26 = metatype $@thin String.Type               // user: %28
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %27 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %28 = apply %27(%23, %24, %25, %26) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %33, %31
  %29 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %32, %31
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %30 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %31
  %31 = apply %30(%28, %29) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %29 : $*DefaultStringInterpolation   // id: %32
  destroy_value %28 : $String                     // id: %33
  %34 = alloc_stack $String                       // users: %40, %38, %35
  %35 = store_borrow %3 to %34 : $*String
  %36 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %39, %38
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %37 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %38
  %38 = apply %37<String>(%34, %36) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %36 : $*DefaultStringInterpolation   // id: %39
  dealloc_stack %34 : $*String                    // id: %40
  %41 = string_literal utf8 "; Strong: ("         // user: %46
  %42 = integer_literal $Builtin.Word, 11         // user: %46
  %43 = integer_literal $Builtin.Int1, -1         // user: %46
  %44 = metatype $@thin String.Type               // user: %46
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %45 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %46
  %46 = apply %45(%41, %42, %43, %44) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %51, %49
  %47 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %50, %49
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %48 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %49
  %49 = apply %48(%46, %47) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %47 : $*DefaultStringInterpolation   // id: %50
  destroy_value %46 : $String                     // id: %51
  %52 = alloc_stack $Int                          // users: %58, %56, %53
  store %0 to [trivial] %52 : $*Int               // id: %53
  %54 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 "); Weak: ("          // user: %64
  %60 = integer_literal $Builtin.Word, 10         // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  destroy_value %64 : $String                     // id: %69
  %70 = alloc_stack $Int                          // users: %76, %74, %71
  store %1 to [trivial] %70 : $*Int               // id: %71
  %72 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %75, %74
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %73 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %74
  %74 = apply %73<Int>(%70, %72) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %72 : $*DefaultStringInterpolation   // id: %75
  dealloc_stack %70 : $*Int                       // id: %76
  %77 = string_literal utf8 "); Unowned("         // user: %82
  %78 = integer_literal $Builtin.Word, 11         // user: %82
  %79 = integer_literal $Builtin.Int1, -1         // user: %82
  %80 = metatype $@thin String.Type               // user: %82
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %81 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %82
  %82 = apply %81(%77, %78, %79, %80) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %87, %85
  %83 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %86, %85
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %84 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %85
  %85 = apply %84(%82, %83) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %83 : $*DefaultStringInterpolation   // id: %86
  destroy_value %82 : $String                     // id: %87
  %88 = alloc_stack $Int                          // users: %94, %92, %89
  store %2 to [trivial] %88 : $*Int               // id: %89
  %90 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %93, %92
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %91 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %92
  %92 = apply %91<Int>(%88, %90) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %90 : $*DefaultStringInterpolation   // id: %93
  dealloc_stack %88 : $*Int                       // id: %94
  %95 = string_literal utf8 ")"                   // user: %100
  %96 = integer_literal $Builtin.Word, 1          // user: %100
  %97 = integer_literal $Builtin.Int1, -1         // user: %100
  %98 = metatype $@thin String.Type               // user: %100
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %99 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %100
  %100 = apply %99(%95, %96, %97, %98) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %105, %103
  %101 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %104, %103
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %102 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %103
  %103 = apply %102(%100, %101) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %101 : $*DefaultStringInterpolation  // id: %104
  destroy_value %100 : $String                    // id: %105
  %106 = load [copy] %14 : $*DefaultStringInterpolation // user: %111
  destroy_addr %14 : $*DefaultStringInterpolation // id: %107
  dealloc_stack %14 : $*DefaultStringInterpolation // id: %108
  %109 = metatype $@thin String.Type              // user: %111
  // function_ref String.init(stringInterpolation:)
  %110 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %111
  %111 = apply %110(%106, %109) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %113
  %112 = init_existential_addr %13 : $*Any, $String // user: %113
  store %111 to [init] %112 : $*String            // id: %113
  // function_ref default argument 1 of print(_:separator:terminator:)
  %114 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %115
  %115 = apply %114() : $@convention(thin) () -> @owned String // users: %121, %119
  // function_ref default argument 2 of print(_:separator:terminator:)
  %116 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %117
  %117 = apply %116() : $@convention(thin) () -> @owned String // users: %120, %119
  // function_ref print(_:separator:terminator:)
  %118 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %119
  %119 = apply %118(%11, %115, %117) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %117 : $String                    // id: %120
  destroy_value %115 : $String                    // id: %121
  destroy_value %11 : $Array<Any>                 // id: %122
  %123 = tuple ()                                 // user: %124
  return %123 : $()                               // id: %124
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] [_semantics "array.uninitialized_intrinsic"] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer)

// Int.init(_builtinIntegerLiteral:)
sil public_external [transparent] [serialized] [ossa] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int {
// %0                                             // user: %2
bb0(%0 : $Builtin.IntLiteral, %1 : $@thin Int.Type):
  %2 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%0 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %3
  (%3, %4) = destructure_tuple %2 : $(Builtin.Int64, Builtin.Int1) // user: %5
  %5 = struct $Int (%3 : $Builtin.Int64)          // user: %6
  return %5 : $Int                                // id: %6
} // end sil function '$sSi22_builtinIntegerLiteralSiBI_tcfC'

// DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
sil [serialized] @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// DefaultStringInterpolation.appendLiteral(_:)
sil [serialized] @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// String.init(stringInterpolation:)
sil [serialized] [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String

// default argument 1 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 " "                    // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA0_'

// default argument 2 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 "\n"                   // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA1_'

// print(_:separator:terminator:)
sil @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()

// closure #2 in foo()
sil private [ossa] @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () {
// %0 "number"                                    // users: %3, %1
bb0(%0 : @guaranteed $Number):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %1
  %2 = integer_literal $Builtin.Int64, 1          // user: %8
  %3 = ref_element_addr %0 : $Number, #Number.number // user: %4
  %4 = begin_access [modify] [dynamic] %3 : $*Int // users: %13, %5, %15
  %5 = struct_element_addr %4 : $*Int, #Int._value // user: %6
  %6 = load [trivial] %5 : $*Builtin.Int64        // user: %8
  %7 = integer_literal $Builtin.Int1, -1          // user: %8
  %8 = builtin "sadd_with_overflow_Int64"(%6 : $Builtin.Int64, %2 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %9
  (%9, %10) = destructure_tuple %8 : $(Builtin.Int64, Builtin.Int1) // users: %12, %11
  cond_fail %10 : $Builtin.Int1, "arithmetic overflow" // id: %11
  %12 = struct $Int (%9 : $Builtin.Int64)         // user: %13
  store %12 to [trivial] %4 : $*Int               // id: %13
  %14 = tuple ()
  end_access %4 : $*Int                           // id: %15
  %16 = tuple ()                                  // user: %17
  return %16 : $()                                // id: %17
} // end sil function '$s4file3fooyyFyycfU0_'

// static Int.+= infix(_:_:)
sil public_external [transparent] [serialized] [ossa] @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () {
// %0                                             // users: %14, %3
// %1                                             // user: %5
bb0(%0 : $*Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_element_addr %0 : $*Int, #Int._value // user: %4
  %4 = load [trivial] %3 : $*Builtin.Int64        // user: %7
  %5 = struct_extract %1 : $Int, #Int._value      // user: %7
  %6 = integer_literal $Builtin.Int1, -1          // user: %7
  %7 = builtin "sadd_with_overflow_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %8
  (%8, %9) = destructure_tuple %7 : $(Builtin.Int64, Builtin.Int1) // users: %13, %12
  br bb1                                          // id: %10

bb1:                                              // Preds: bb0
  br bb2                                          // id: %11

bb2:                                              // Preds: bb1
  cond_fail %9 : $Builtin.Int1, "arithmetic overflow" // id: %12
  %13 = struct $Int (%8 : $Builtin.Int64)         // user: %14
  store %13 to [trivial] %0 : $*Int               // id: %14
  %15 = tuple ()                                  // user: %16
  return %15 : $()                                // id: %16
} // end sil function '$sSi2peoiyySiz_SitFZ'

// closure #3 in foo()
sil private [ossa] @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %6, %2
// %1 "value"                                     // user: %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %45, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = integer_literal $Builtin.Int64, 1          // user: %11
  %6 = ref_element_addr %0 : $Number, #Number.number // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*Int // users: %16, %8, %18
  %8 = struct_element_addr %7 : $*Int, #Int._value // user: %9
  %9 = load [trivial] %8 : $*Builtin.Int64        // user: %11
  %10 = integer_literal $Builtin.Int1, -1         // user: %11
  %11 = builtin "sadd_with_overflow_Int64"(%9 : $Builtin.Int64, %5 : $Builtin.Int64, %10 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %12
  (%12, %13) = destructure_tuple %11 : $(Builtin.Int64, Builtin.Int1) // users: %15, %14
  cond_fail %13 : $Builtin.Int1, "arithmetic overflow" // id: %14
  %15 = struct $Int (%12 : $Builtin.Int64)        // user: %16
  store %15 to [trivial] %7 : $*Int               // id: %16
  %17 = tuple ()
  end_access %7 : $*Int                           // id: %18
  %19 = integer_literal $Builtin.Word, 1          // user: %21
  // function_ref _allocateUninitializedArray<A>(_:)
  %20 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %21
  %21 = apply %20<Any>(%19) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %22
  (%22, %23) = destructure_tuple %21 : $(Array<Any>, Builtin.RawPointer) // users: %82, %79, %24
  %24 = pointer_to_address %23 : $Builtin.RawPointer to [strict] $*Any // user: %72
  %25 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %68, %67, %33, %40, %50, %61, %66
  %26 = integer_literal $Builtin.Int64, 3         // user: %27
  %27 = struct $Int (%26 : $Builtin.Int64)        // user: %32
  %28 = integer_literal $Builtin.Int64, 1         // user: %29
  %29 = struct $Int (%28 : $Builtin.Int64)        // user: %32
  %30 = metatype $@thin DefaultStringInterpolation.Type // user: %32
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %31 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %32
  %32 = apply %31(%27, %29, %30) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %33
  store %32 to [init] %25 : $*DefaultStringInterpolation // id: %33
  %34 = string_literal utf8 "v: "                 // user: %39
  %35 = integer_literal $Builtin.Word, 3          // user: %39
  %36 = integer_literal $Builtin.Int1, -1         // user: %39
  %37 = metatype $@thin String.Type               // user: %39
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %38 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %39
  %39 = apply %38(%34, %35, %36, %37) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %44, %42
  %40 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %43, %42
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %41 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %42
  %42 = apply %41(%39, %40) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %40 : $*DefaultStringInterpolation   // id: %43
  destroy_value %39 : $String                     // id: %44
  %45 = begin_access [read] [dynamic] %3 : $*Int  // users: %47, %46
  %46 = load [trivial] %45 : $*Int                // user: %49
  end_access %45 : $*Int                          // id: %47
  %48 = alloc_stack $Int                          // users: %54, %52, %49
  store %46 to [trivial] %48 : $*Int              // id: %49
  %50 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %53, %52
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %51 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %52
  %52 = apply %51<Int>(%48, %50) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %50 : $*DefaultStringInterpolation   // id: %53
  dealloc_stack %48 : $*Int                       // id: %54
  %55 = string_literal utf8 ""                    // user: %60
  %56 = integer_literal $Builtin.Word, 0          // user: %60
  %57 = integer_literal $Builtin.Int1, -1         // user: %60
  %58 = metatype $@thin String.Type               // user: %60
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %59 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %60
  %60 = apply %59(%55, %56, %57, %58) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %65, %63
  %61 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %64, %63
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %62 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %63
  %63 = apply %62(%60, %61) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %61 : $*DefaultStringInterpolation   // id: %64
  destroy_value %60 : $String                     // id: %65
  %66 = load [copy] %25 : $*DefaultStringInterpolation // user: %71
  destroy_addr %25 : $*DefaultStringInterpolation // id: %67
  dealloc_stack %25 : $*DefaultStringInterpolation // id: %68
  %69 = metatype $@thin String.Type               // user: %71
  // function_ref String.init(stringInterpolation:)
  %70 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %71
  %71 = apply %70(%66, %69) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %73
  %72 = init_existential_addr %24 : $*Any, $String // user: %73
  store %71 to [init] %72 : $*String              // id: %73
  // function_ref default argument 1 of print(_:separator:terminator:)
  %74 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %75
  %75 = apply %74() : $@convention(thin) () -> @owned String // users: %81, %79
  // function_ref default argument 2 of print(_:separator:terminator:)
  %76 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %77
  %77 = apply %76() : $@convention(thin) () -> @owned String // users: %80, %79
  // function_ref print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %79
  %79 = apply %78(%22, %75, %77) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %77 : $String                     // id: %80
  destroy_value %75 : $String                     // id: %81
  destroy_value %22 : $Array<Any>                 // id: %82
  %83 = tuple ()                                  // user: %84
  return %83 : $()                                // id: %84
} // end sil function '$s4file3fooyyFyycfU1_'

// closure #4 in foo()
sil private [ossa] @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () {
// %0 "number"                                    // users: %5, %2
// %1 "empty"                                     // users: %19, %3
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %3
  %4 = integer_literal $Builtin.Int64, 1          // user: %10
  %5 = ref_element_addr %0 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %15, %7, %17
  %7 = struct_element_addr %6 : $*Int, #Int._value // user: %8
  %8 = load [trivial] %7 : $*Builtin.Int64        // user: %10
  %9 = integer_literal $Builtin.Int1, -1          // user: %10
  %10 = builtin "sadd_with_overflow_Int64"(%8 : $Builtin.Int64, %4 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %11
  (%11, %12) = destructure_tuple %10 : $(Builtin.Int64, Builtin.Int1) // users: %14, %13
  cond_fail %12 : $Builtin.Int1, "arithmetic overflow" // id: %13
  %14 = struct $Int (%11 : $Builtin.Int64)        // user: %15
  store %14 to [trivial] %6 : $*Int               // id: %15
  %16 = tuple ()
  end_access %6 : $*Int                           // id: %17
  // function_ref Empty.foo()
  %18 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %19
  %19 = apply %18(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %20 = tuple ()                                  // user: %21
  return %20 : $()                                // id: %21
} // end sil function '$s4file3fooyyFyycfU2_'

// closure #5 in foo()
sil private [ossa] @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %8, %3
// %1 "empty"                                     // users: %22, %4
// %2 "value"                                     // user: %5
bb0(%0 : @guaranteed $Number, %1 : @guaranteed $Empty, %2 : @guaranteed ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %49, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = integer_literal $Builtin.Int64, 1          // user: %13
  %8 = ref_element_addr %0 : $Number, #Number.number // user: %9
  %9 = begin_access [modify] [dynamic] %8 : $*Int // users: %18, %10, %20
  %10 = struct_element_addr %9 : $*Int, #Int._value // user: %11
  %11 = load [trivial] %10 : $*Builtin.Int64      // user: %13
  %12 = integer_literal $Builtin.Int1, -1         // user: %13
  %13 = builtin "sadd_with_overflow_Int64"(%11 : $Builtin.Int64, %7 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // user: %14
  (%14, %15) = destructure_tuple %13 : $(Builtin.Int64, Builtin.Int1) // users: %17, %16
  cond_fail %15 : $Builtin.Int1, "arithmetic overflow" // id: %16
  %17 = struct $Int (%14 : $Builtin.Int64)        // user: %18
  store %17 to [trivial] %9 : $*Int               // id: %18
  %19 = tuple ()
  end_access %9 : $*Int                           // id: %20
  // function_ref Empty.foo()
  %21 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %22
  %22 = apply %21(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %23 = integer_literal $Builtin.Word, 1          // user: %25
  // function_ref _allocateUninitializedArray<A>(_:)
  %24 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %25
  %25 = apply %24<Any>(%23) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %26
  (%26, %27) = destructure_tuple %25 : $(Array<Any>, Builtin.RawPointer) // users: %86, %83, %28
  %28 = pointer_to_address %27 : $Builtin.RawPointer to [strict] $*Any // user: %76
  %29 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %72, %71, %37, %44, %54, %65, %70
  %30 = integer_literal $Builtin.Int64, 3         // user: %31
  %31 = struct $Int (%30 : $Builtin.Int64)        // user: %36
  %32 = integer_literal $Builtin.Int64, 1         // user: %33
  %33 = struct $Int (%32 : $Builtin.Int64)        // user: %36
  %34 = metatype $@thin DefaultStringInterpolation.Type // user: %36
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %35 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %36
  %36 = apply %35(%31, %33, %34) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %37
  store %36 to [init] %29 : $*DefaultStringInterpolation // id: %37
  %38 = string_literal utf8 "v: "                 // user: %43
  %39 = integer_literal $Builtin.Word, 3          // user: %43
  %40 = integer_literal $Builtin.Int1, -1         // user: %43
  %41 = metatype $@thin String.Type               // user: %43
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %42 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %43
  %43 = apply %42(%38, %39, %40, %41) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %48, %46
  %44 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %47, %46
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %45 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %46
  %46 = apply %45(%43, %44) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %44 : $*DefaultStringInterpolation   // id: %47
  destroy_value %43 : $String                     // id: %48
  %49 = begin_access [read] [dynamic] %5 : $*Int  // users: %51, %50
  %50 = load [trivial] %49 : $*Int                // user: %53
  end_access %49 : $*Int                          // id: %51
  %52 = alloc_stack $Int                          // users: %58, %56, %53
  store %50 to [trivial] %52 : $*Int              // id: %53
  %54 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 ""                    // user: %64
  %60 = integer_literal $Builtin.Word, 0          // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  destroy_value %64 : $String                     // id: %69
  %70 = load [copy] %29 : $*DefaultStringInterpolation // user: %75
  destroy_addr %29 : $*DefaultStringInterpolation // id: %71
  dealloc_stack %29 : $*DefaultStringInterpolation // id: %72
  %73 = metatype $@thin String.Type               // user: %75
  // function_ref String.init(stringInterpolation:)
  %74 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %75
  %75 = apply %74(%70, %73) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %77
  %76 = init_existential_addr %28 : $*Any, $String // user: %77
  store %75 to [init] %76 : $*String              // id: %77
  // function_ref default argument 1 of print(_:separator:terminator:)
  %78 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %79
  %79 = apply %78() : $@convention(thin) () -> @owned String // users: %85, %83
  // function_ref default argument 2 of print(_:separator:terminator:)
  %80 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %81
  %81 = apply %80() : $@convention(thin) () -> @owned String // users: %84, %83
  // function_ref print(_:separator:terminator:)
  %82 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %83
  %83 = apply %82(%26, %79, %81) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  destroy_value %81 : $String                     // id: %84
  destroy_value %79 : $String                     // id: %85
  destroy_value %26 : $Array<Any>                 // id: %86
  %87 = tuple ()                                  // user: %88
  return %87 : $()                                // id: %88
} // end sil function '$s4file3fooyyFyycfU3_'

// Array.init()
sil [serialized] [_semantics "array.init.empty"] @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>

// Array.reserveCapacity(_:)
sil [serialized] [_semantics "array.mutate_unknown"] @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()

// Bool.init(_builtinBooleanLiteral:)
sil public_external [transparent] [serialized] [ossa] @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Builtin.Int1, %1 : $@thin Bool.Type):
  %2 = struct $Bool (%0 : $Builtin.Int1)          // user: %3
  return %2 : $Bool                               // id: %3
} // end sil function '$sSb22_builtinBooleanLiteralSbBi1__tcfC'

// default argument 0 of readLine(strippingNewline:)
sil shared_external [serialized] @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool {
bb0:
  %0 = integer_literal $Builtin.Int1, -1          // user: %1
  %1 = struct $Bool (%0 : $Builtin.Int1)          // user: %2
  return %1 : $Bool                               // id: %2
} // end sil function '$ss8readLine16strippingNewlineSSSgSb_tFfA_'

// readLine(strippingNewline:)
sil @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String>

// ~= infix<A>(_:_:)
sil public_external [transparent] [serialized] [ossa] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <T where T : Equatable> (@in_guaranteed T, @in_guaranteed T) -> Bool {
// %0                                             // user: %4
// %1                                             // user: %4
bb0(%0 : $*T, %1 : $*T):
  %2 = metatype $@thick T.Type                    // user: %4
  %3 = witness_method $T, #Equatable."==" : <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %4
  %4 = apply %3<T>(%0, %1, %2) : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %5
  return %4 : $Bool                               // id: %5
} // end sil function '$ss2teoiySbx_xtSQRzlF'

// Array.append(_:)
sil [serialized] [_semantics "array.append_element"] @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()

// Collection.isEmpty.getter
sil [serialized] @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool

// static Bool.! prefix(_:)
sil public_external [transparent] [serialized] [ossa] @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Bool, %1 : $@thin Bool.Type):
  %2 = struct_extract %0 : $Bool, #Bool._value    // user: %4
  %3 = integer_literal $Builtin.Int1, -1          // user: %4
  %4 = builtin "xor_Int1"(%2 : $Builtin.Int1, %3 : $Builtin.Int1) : $Builtin.Int1 // user: %5
  %5 = struct $Bool (%4 : $Builtin.Int1)          // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sSb1nopyS2bFZ'

// RangeReplaceableCollection<>.removeLast()
sil [serialized] @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element

// BidirectionalCollection.last.getter
sil [serialized] @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>

// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
sil shared_external [transparent] [serialized] [thunk] [ossa] @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thick Optional<τ_0_0>.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Optional<τ_0_0>, %1 : $*Optional<τ_0_0>, %2 : $@thick Optional<τ_0_0>.Type):
  %3 = metatype $@thin Optional<τ_0_0>.Type      // user: %5
  // function_ref static Optional<A>.== infix(_:_:)
  %4 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %5
  %5 = apply %4<τ_0_0>(%0, %1, %3) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW'

// static Optional<A>.== infix(_:_:)
sil [serialized] @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool

sil_vtable Empty {
  #Empty.init!allocator: (Empty.Type) -> () -> Empty : @$s4file5EmptyCACycfC	// Empty.__allocating_init()
  #Empty.deinit!deallocator: @$s4file5EmptyCfD	// Empty.__deallocating_deinit
}

sil_vtable Number {
  #Number.init!allocator: (Number.Type) -> (Int) -> Number : @$s4file6NumberC6numberACSi_tcfC	// Number.__allocating_init(number:)
  #Number.deinit!deallocator: @$s4file6NumberCfD	// Number.__deallocating_deinit
}

sil_vtable Closure {
  #Closure.init!allocator: (Closure.Type) -> (@escaping () -> ()) -> Closure : @$s4file7ClosureCyACyyccfC	// Closure.__allocating_init(_:)
  #Closure.deinit!deallocator: @$s4file7ClosureCfD	// Closure.__deallocating_deinit
}

sil_witness_table public_external [serialized] <Wrapped where Wrapped : Equatable> Optional<Wrapped>: Equatable module Swift {
  method #Equatable."==": <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW	// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
  conditional_conformance (Wrapped: Equatable): dependent
}



  *** SIL module after #73, stage Serialization, pass 1: OwnershipModelEliminator (ownership-model-eliminator)
sil_stage canonical

import Builtin
import Swift
import SwiftShims

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

// Empty.foo()
sil hidden @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4file5EmptyC3fooyyF'

// Empty.deinit
sil hidden @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Empty to $Builtin.NativeObject // user: %3
  return %2 : $Builtin.NativeObject               // id: %3
} // end sil function '$s4file5EmptyCfd'

// Empty.__deallocating_deinit
sil hidden @$s4file5EmptyCfD : $@convention(method) (@owned Empty) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  // function_ref Empty.deinit
  %2 = function_ref @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Empty // user: %5
  dealloc_ref %4 : $Empty                         // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4file5EmptyCfD'

// Empty.__allocating_init()
sil hidden [exact_self_class] @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty {
// %0 "$metatype"
bb0(%0 : $@thick Empty.Type):
  %1 = alloc_ref $Empty                           // user: %3
  // function_ref Empty.init()
  %2 = function_ref @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Empty) -> @owned Empty // user: %4
  return %3 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfC'

// Empty.init()
sil hidden @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  return %0 : $Empty                              // id: %2
} // end sil function '$s4file5EmptyCACycfc'

// Number.number.getter
sil hidden [transparent] @$s4file6NumberC6numberSivg : $@convention(method) (@guaranteed Number) -> Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*Int   // users: %4, %5
  %4 = load %3 : $*Int                            // user: %6
  end_access %3 : $*Int                           // id: %5
  return %4 : $Int                                // id: %6
} // end sil function '$s4file6NumberC6numberSivg'

// Number.number.setter
sil hidden [transparent] @$s4file6NumberC6numberSivs : $@convention(method) (Int, @guaranteed Number) -> () {
// %0 "value"                                     // users: %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : $Number):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to %5 : $*Int                          // id: %6
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9
} // end sil function '$s4file6NumberC6numberSivs'

// Number.number.modify
sil hidden [transparent] @$s4file6NumberC6numberSivM : $@yield_once @convention(method) (@guaranteed Number) -> @yields @inout Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*Int // users: %5, %8, %4
  yield %3 : $*Int, resume bb1, unwind bb2        // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file6NumberC6numberSivM'

// Number.__allocating_init(number:)
sil hidden [exact_self_class] @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number {
// %0 "number"                                    // user: %4
// %1 "$metatype"
bb0(%0 : $Int, %1 : $@thick Number.Type):
  %2 = alloc_ref $Number                          // user: %4
  // function_ref Number.init(number:)
  %3 = function_ref @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (Int, @owned Number) -> @owned Number // user: %5
  return %4 : $Number                             // id: %5
} // end sil function '$s4file6NumberC6numberACSi_tcfC'

// Number.init(number:)
sil hidden @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %6, %2
// %1 "self"                                      // users: %8, %4, %3
bb0(%0 : $Int, %1 : $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to %5 : $*Int                          // id: %6
  end_access %5 : $*Int                           // id: %7
  return %1 : $Number                             // id: %8
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

// Number.deinit
sil hidden @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Number to $Builtin.NativeObject // user: %3
  return %2 : $Builtin.NativeObject               // id: %3
} // end sil function '$s4file6NumberCfd'

// Number.__deallocating_deinit
sil hidden @$s4file6NumberCfD : $@convention(method) (@owned Number) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  // function_ref Number.deinit
  %2 = function_ref @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Number // user: %5
  dealloc_ref %4 : $Number                        // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4file6NumberCfD'

// Closure.closure.getter
sil hidden [transparent] @$s4file7ClosureC7closureyycvg : $@convention(method) (@guaranteed Closure) -> @owned @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %4, %6
  %4 = load %3 : $*@callee_guaranteed () -> ()    // users: %7, %5
  strong_retain %4 : $@callee_guaranteed () -> () // id: %5
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %6
  return %4 : $@callee_guaranteed () -> ()        // id: %7
} // end sil function '$s4file7ClosureC7closureyycvg'

// Closure.closure.setter
sil hidden [transparent] @$s4file7ClosureC7closureyycvs : $@convention(method) (@owned @callee_guaranteed () -> (), @guaranteed Closure) -> () {
// %0 "value"                                     // users: %11, %8, %4, %2
// %1 "self"                                      // users: %5, %3
bb0(%0 : $@callee_guaranteed () -> (), %1 : $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "value", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  strong_retain %0 : $@callee_guaranteed () -> () // id: %4
  %5 = ref_element_addr %1 : $Closure, #Closure.closure // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*@callee_guaranteed () -> () // users: %8, %7, %10
  %7 = load %6 : $*@callee_guaranteed () -> ()    // user: %9
  store %0 to %6 : $*@callee_guaranteed () -> ()  // id: %8
  strong_release %7 : $@callee_guaranteed () -> () // id: %9
  end_access %6 : $*@callee_guaranteed () -> ()   // id: %10
  strong_release %0 : $@callee_guaranteed () -> () // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file7ClosureC7closureyycvs'

// Closure.closure.modify
sil hidden [transparent] @$s4file7ClosureC7closureyycvM : $@yield_once @convention(method) (@guaranteed Closure) -> @yields @inout @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %8, %4
  yield %3 : $*@callee_guaranteed () -> (), resume bb1, unwind bb2 // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file7ClosureC7closureyycvM'

// Closure.__allocating_init(_:)
sil hidden [exact_self_class] @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure {
// %0 "block"                                     // user: %4
// %1 "$metatype"
bb0(%0 : $@callee_guaranteed () -> (), %1 : $@thick Closure.Type):
  %2 = alloc_ref $Closure                         // user: %4
  // function_ref Closure.init(_:)
  %3 = function_ref @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %5
  return %4 : $Closure                            // id: %5
} // end sil function '$s4file7ClosureCyACyyccfC'

// Closure.init(_:)
sil hidden @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %9, %7, %4, %2
// %1 "self"                                      // users: %10, %5, %3
bb0(%0 : $@callee_guaranteed () -> (), %1 : $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  strong_retain %0 : $@callee_guaranteed () -> () // id: %4
  %5 = ref_element_addr %1 : $Closure, #Closure.closure // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*@callee_guaranteed () -> () // users: %7, %8
  store %0 to %6 : $*@callee_guaranteed () -> ()  // id: %7
  end_access %6 : $*@callee_guaranteed () -> ()   // id: %8
  strong_release %0 : $@callee_guaranteed () -> () // id: %9
  return %1 : $Closure                            // id: %10
} // end sil function '$s4file7ClosureCyACyyccfc'

// Closure.deinit
sil hidden @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %6, %2, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [deinit] [static] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  destroy_addr %3 : $*@callee_guaranteed () -> () // id: %4
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = unchecked_ref_cast %0 : $Closure to $Builtin.NativeObject // user: %7
  return %6 : $Builtin.NativeObject               // id: %7
} // end sil function '$s4file7ClosureCfd'

// Closure.__deallocating_deinit
sil hidden @$s4file7ClosureCfD : $@convention(method) (@owned Closure) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  // function_ref Closure.deinit
  %2 = function_ref @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Closure // user: %5
  dealloc_ref %4 : $Closure                       // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4file7ClosureCfD'

// foo()
sil hidden @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %573, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %572, %100, %98, %96, %93, %92, %88, %86, %85, %82, %81, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %11
  %8 = integer_literal $Builtin.Int64, 0          // user: %9
  %9 = struct $Int (%8 : $Builtin.Int64)          // user: %11
  // function_ref Number.__allocating_init(number:)
  %10 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %11
  %11 = apply %10(%9, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %571, %101, %98, %95, %91, %90, %89, %86, %84, %80, %79, %78, %76, %74, %72, %71, %70, %68, %67, %65, %64, %12
  debug_value %11 : $Number, let, name "number"   // id: %12
  %13 = integer_literal $Builtin.Word, 1          // user: %15
  // function_ref _allocateUninitializedArray<A>(_:)
  %14 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %15
  %15 = apply %14<Any>(%13) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %17, %16
  %16 = tuple_extract %15 : $(Array<Any>, Builtin.RawPointer), 0 // users: %35, %32
  %17 = tuple_extract %15 : $(Array<Any>, Builtin.RawPointer), 1 // user: %18
  %18 = pointer_to_address %17 : $Builtin.RawPointer to [strict] $*Any // user: %25
  %19 = string_literal utf8 "===== Did init"      // user: %24
  %20 = integer_literal $Builtin.Word, 14         // user: %24
  %21 = integer_literal $Builtin.Int1, -1         // user: %24
  %22 = metatype $@thin String.Type               // user: %24
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %23 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %24
  %24 = apply %23(%19, %20, %21, %22) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %25 = init_existential_addr %18 : $*Any, $String // user: %26
  store %24 to %25 : $*String                     // id: %26
  // function_ref default argument 1 of print(_:separator:terminator:)
  %27 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %28
  %28 = apply %27() : $@convention(thin) () -> @owned String // users: %34, %32
  // function_ref default argument 2 of print(_:separator:terminator:)
  %29 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %30
  %30 = apply %29() : $@convention(thin) () -> @owned String // users: %33, %32
  // function_ref print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %32
  %32 = apply %31(%16, %28, %30) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %30 : $String                     // id: %33
  release_value %28 : $String                     // id: %34
  release_value %16 : $Array<Any>                 // id: %35
  %36 = integer_literal $Builtin.Word, 1          // user: %38
  // function_ref _allocateUninitializedArray<A>(_:)
  %37 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %38
  %38 = apply %37<Any>(%36) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %40, %39
  %39 = tuple_extract %38 : $(Array<Any>, Builtin.RawPointer), 0 // users: %58, %55
  %40 = tuple_extract %38 : $(Array<Any>, Builtin.RawPointer), 1 // user: %41
  %41 = pointer_to_address %40 : $Builtin.RawPointer to [strict] $*Any // user: %48
  %42 = string_literal utf8 "===== Did hook"      // user: %47
  %43 = integer_literal $Builtin.Word, 14         // user: %47
  %44 = integer_literal $Builtin.Int1, -1         // user: %47
  %45 = metatype $@thin String.Type               // user: %47
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %46 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %47
  %47 = apply %46(%42, %43, %44, %45) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %49
  %48 = init_existential_addr %41 : $*Any, $String // user: %49
  store %47 to %48 : $*String                     // id: %49
  // function_ref default argument 1 of print(_:separator:terminator:)
  %50 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %51
  %51 = apply %50() : $@convention(thin) () -> @owned String // users: %57, %55
  // function_ref default argument 2 of print(_:separator:terminator:)
  %52 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %53
  %53 = apply %52() : $@convention(thin) () -> @owned String // users: %56, %55
  // function_ref print(_:separator:terminator:)
  %54 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %55
  %55 = apply %54(%39, %51, %53) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %53 : $String                     // id: %56
  release_value %51 : $String                     // id: %57
  release_value %39 : $Array<Any>                 // id: %58
  %59 = alloc_box ${ var Int }, var, name "value" // users: %570, %98, %97, %76, %75, %60
  %60 = project_box %59 : ${ var Int }, 0         // users: %63, %412
  %61 = integer_literal $Builtin.Int64, 0         // user: %62
  %62 = struct $Int (%61 : $Builtin.Int64)        // user: %63
  store %62 to %60 : $*Int                        // id: %63
  strong_retain %11 : $Number                     // id: %64
  debug_value %11 : $Number, let, name "number"   // id: %65
  // function_ref closure #2 in foo()
  %66 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %68
  strong_retain %11 : $Number                     // id: %67
  %68 = partial_apply [callee_guaranteed] %66(%11) : $@convention(thin) (@guaranteed Number) -> () // users: %569, %222, %220, %69
  debug_value %68 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %69
  strong_release %11 : $Number                    // id: %70
  strong_retain %11 : $Number                     // id: %71
  debug_value %11 : $Number, let, name "number"   // id: %72
  // function_ref closure #3 in foo()
  %73 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %76
  strong_retain %11 : $Number                     // id: %74
  strong_retain %59 : ${ var Int }                // id: %75
  %76 = partial_apply [callee_guaranteed] %73(%11, %59) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %568, %257, %255, %77
  debug_value %76 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %77
  strong_release %11 : $Number                    // id: %78
  strong_retain %11 : $Number                     // id: %79
  debug_value %11 : $Number, let, name "number"   // id: %80
  strong_retain %5 : $Empty                       // id: %81
  debug_value %5 : $Empty, let, name "empty"      // id: %82
  // function_ref closure #4 in foo()
  %83 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %86
  strong_retain %11 : $Number                     // id: %84
  strong_retain %5 : $Empty                       // id: %85
  %86 = partial_apply [callee_guaranteed] %83(%11, %5) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %567, %292, %290, %87
  debug_value %86 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %87
  strong_release %5 : $Empty                      // id: %88
  strong_release %11 : $Number                    // id: %89
  strong_retain %11 : $Number                     // id: %90
  debug_value %11 : $Number, let, name "number"   // id: %91
  strong_retain %5 : $Empty                       // id: %92
  debug_value %5 : $Empty, let, name "empty"      // id: %93
  // function_ref closure #5 in foo()
  %94 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %98
  strong_retain %11 : $Number                     // id: %95
  strong_retain %5 : $Empty                       // id: %96
  strong_retain %59 : ${ var Int }                // id: %97
  %98 = partial_apply [callee_guaranteed] %94(%11, %5, %59) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %566, %327, %325, %99
  debug_value %98 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %99
  strong_release %5 : $Empty                      // id: %100
  strong_release %11 : $Number                    // id: %101
  %102 = integer_literal $Builtin.Word, 1         // user: %104
  // function_ref _allocateUninitializedArray<A>(_:)
  %103 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %104
  %104 = apply %103<Any>(%102) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %106, %105
  %105 = tuple_extract %104 : $(Array<Any>, Builtin.RawPointer), 0 // users: %124, %121
  %106 = tuple_extract %104 : $(Array<Any>, Builtin.RawPointer), 1 // user: %107
  %107 = pointer_to_address %106 : $Builtin.RawPointer to [strict] $*Any // user: %114
  %108 = string_literal utf8 "===== Did init closures" // user: %113
  %109 = integer_literal $Builtin.Word, 23        // user: %113
  %110 = integer_literal $Builtin.Int1, -1        // user: %113
  %111 = metatype $@thin String.Type              // user: %113
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %112 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %113
  %113 = apply %112(%108, %109, %110, %111) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %115
  %114 = init_existential_addr %107 : $*Any, $String // user: %115
  store %113 to %114 : $*String                   // id: %115
  // function_ref default argument 1 of print(_:separator:terminator:)
  %116 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %117
  %117 = apply %116() : $@convention(thin) () -> @owned String // users: %123, %121
  // function_ref default argument 2 of print(_:separator:terminator:)
  %118 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %119
  %119 = apply %118() : $@convention(thin) () -> @owned String // users: %122, %121
  // function_ref print(_:separator:terminator:)
  %120 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %121
  %121 = apply %120(%105, %117, %119) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %119 : $String                    // id: %122
  release_value %117 : $String                    // id: %123
  release_value %105 : $Array<Any>                // id: %124
  %125 = alloc_stack $Array<Closure>, var, name "storage" // users: %129, %565, %564, %132, %225, %260, %295, %330, %359, %378, %448
  %126 = metatype $@thin Array<Closure>.Type      // user: %128
  // function_ref Array.init()
  %127 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %128
  %128 = apply %127<Closure>(%126) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %129
  store %128 to %125 : $*Array<Closure>           // id: %129
  %130 = integer_literal $Builtin.Int64, 100      // user: %131
  %131 = struct $Int (%130 : $Builtin.Int64)      // user: %134
  %132 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %135, %134
  // function_ref Array.reserveCapacity(_:)
  %133 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %134
  %134 = apply %133<Closure>(%131, %132) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %132 : $*Array<Closure>              // id: %135
  %136 = integer_literal $Builtin.Word, 1         // user: %138
  // function_ref _allocateUninitializedArray<A>(_:)
  %137 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %138
  %138 = apply %137<Any>(%136) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %140, %139
  %139 = tuple_extract %138 : $(Array<Any>, Builtin.RawPointer), 0 // users: %158, %155
  %140 = tuple_extract %138 : $(Array<Any>, Builtin.RawPointer), 1 // user: %141
  %141 = pointer_to_address %140 : $Builtin.RawPointer to [strict] $*Any // user: %148
  %142 = string_literal utf8 "===== Did init array" // user: %147
  %143 = integer_literal $Builtin.Word, 20        // user: %147
  %144 = integer_literal $Builtin.Int1, -1        // user: %147
  %145 = metatype $@thin String.Type              // user: %147
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %146 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %147
  %147 = apply %146(%142, %143, %144, %145) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %149
  %148 = init_existential_addr %141 : $*Any, $String // user: %149
  store %147 to %148 : $*String                   // id: %149
  // function_ref default argument 1 of print(_:separator:terminator:)
  %150 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %151
  %151 = apply %150() : $@convention(thin) () -> @owned String // users: %157, %155
  // function_ref default argument 2 of print(_:separator:terminator:)
  %152 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %153
  %153 = apply %152() : $@convention(thin) () -> @owned String // users: %156, %155
  // function_ref print(_:separator:terminator:)
  %154 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %155
  %155 = apply %154(%139, %151, %153) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %153 : $String                    // id: %156
  release_value %151 : $String                    // id: %157
  release_value %139 : $Array<Any>                // id: %158
  %159 = alloc_stack $Bool, var, name "run"       // users: %162, %563, %164, %509
  %160 = integer_literal $Builtin.Int1, -1        // user: %161
  %161 = struct $Bool (%160 : $Builtin.Int1)      // user: %162
  store %161 to %159 : $*Bool                     // id: %162
  br bb1                                          // id: %163

bb1:                                              // Preds: bb25 bb0
  %164 = begin_access [read] [static] %159 : $*Bool // users: %165, %167
  %165 = struct_element_addr %164 : $*Bool, #Bool._value // user: %166
  %166 = load %165 : $*Builtin.Int1               // user: %168
  end_access %164 : $*Bool                        // id: %167
  cond_br %166, bb2, bb26                         // id: %168

bb2:                                              // Preds: bb1
  %169 = integer_literal $Builtin.Word, 1         // user: %171
  // function_ref _allocateUninitializedArray<A>(_:)
  %170 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %171
  %171 = apply %170<Any>(%169) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %173, %172
  %172 = tuple_extract %171 : $(Array<Any>, Builtin.RawPointer), 0 // users: %191, %188
  %173 = tuple_extract %171 : $(Array<Any>, Builtin.RawPointer), 1 // user: %174
  %174 = pointer_to_address %173 : $Builtin.RawPointer to [strict] $*Any // user: %181
  %175 = string_literal utf8 "===== Ask"          // user: %180
  %176 = integer_literal $Builtin.Word, 9         // user: %180
  %177 = integer_literal $Builtin.Int1, -1        // user: %180
  %178 = metatype $@thin String.Type              // user: %180
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %179 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %180
  %180 = apply %179(%175, %176, %177, %178) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %182
  %181 = init_existential_addr %174 : $*Any, $String // user: %182
  store %180 to %181 : $*String                   // id: %182
  // function_ref default argument 1 of print(_:separator:terminator:)
  %183 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %184
  %184 = apply %183() : $@convention(thin) () -> @owned String // users: %190, %188
  // function_ref default argument 2 of print(_:separator:terminator:)
  %185 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %186
  %186 = apply %185() : $@convention(thin) () -> @owned String // users: %189, %188
  // function_ref print(_:separator:terminator:)
  %187 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %188
  %188 = apply %187(%172, %184, %186) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %186 : $String                    // id: %189
  release_value %184 : $String                    // id: %190
  release_value %172 : $Array<Any>                // id: %191
  // function_ref default argument 0 of readLine(strippingNewline:)
  %192 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %193
  %193 = apply %192() : $@convention(thin) () -> Bool // user: %195
  // function_ref readLine(strippingNewline:)
  %194 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %195
  %195 = apply %194(%193) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %538, %513, %506, %497, %486, %485, %484, %447, %438, %427, %426, %425, %410, %401, %390, %389, %387, %358, %349, %338, %337, %336, %323, %314, %303, %302, %301, %288, %279, %268, %267, %266, %253, %244, %233, %232, %231, %218, %209, %198, %197, %196
  debug_value %195 : $Optional<String>, let, name "line" // id: %196
  retain_value %195 : $Optional<String>           // id: %197
  debug_value %195 : $Optional<String>, let, name "$match" // id: %198
  %199 = string_literal utf8 "push1"              // user: %204
  %200 = integer_literal $Builtin.Word, 5         // user: %204
  %201 = integer_literal $Builtin.Int1, -1        // user: %204
  %202 = metatype $@thin String.Type              // user: %204
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %203 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %204
  %204 = apply %203(%199, %200, %201, %202) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %205
  %205 = enum $Optional<String>, #Optional.some!enumelt, %204 : $String // user: %207
  %206 = alloc_stack $Optional<String>            // users: %207, %212, %215, %214
  store %205 to %206 : $*Optional<String>         // id: %207
  %208 = alloc_stack $Optional<String>            // users: %209, %212, %213
  store %195 to %208 : $*Optional<String>         // id: %209
  %210 = metatype $@thin Optional<String>.Type    // user: %212
  // function_ref static Optional<A>.== infix(_:_:)
  %211 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %212
  %212 = apply %211<String>(%206, %208, %210) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %216
  dealloc_stack %208 : $*Optional<String>         // id: %213
  destroy_addr %206 : $*Optional<String>          // id: %214
  dealloc_stack %206 : $*Optional<String>         // id: %215
  %216 = struct_extract %212 : $Bool, #Bool._value // user: %217
  cond_br %216, bb3, bb4                          // id: %217

bb3:                                              // Preds: bb2
  release_value %195 : $Optional<String>          // id: %218
  %219 = metatype $@thick Closure.Type            // user: %222
  strong_retain %68 : $@callee_guaranteed () -> () // id: %220
  // function_ref Closure.__allocating_init(_:)
  %221 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %222
  %222 = apply %221(%68, %219) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %224
  %223 = alloc_stack $Closure                     // users: %224, %229, %227
  store %222 to %223 : $*Closure                  // id: %224
  %225 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %228, %227
  // function_ref Array.append(_:)
  %226 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %227
  %227 = apply %226<Closure>(%223, %225) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %225 : $*Array<Closure>              // id: %228
  dealloc_stack %223 : $*Closure                  // id: %229
  br bb25                                         // id: %230

bb4:                                              // Preds: bb2
  release_value %195 : $Optional<String>          // id: %231
  retain_value %195 : $Optional<String>           // id: %232
  debug_value %195 : $Optional<String>, let, name "$match" // id: %233
  %234 = string_literal utf8 "push1_1"            // user: %239
  %235 = integer_literal $Builtin.Word, 7         // user: %239
  %236 = integer_literal $Builtin.Int1, -1        // user: %239
  %237 = metatype $@thin String.Type              // user: %239
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %238 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %239
  %239 = apply %238(%234, %235, %236, %237) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %240
  %240 = enum $Optional<String>, #Optional.some!enumelt, %239 : $String // user: %242
  %241 = alloc_stack $Optional<String>            // users: %242, %247, %250, %249
  store %240 to %241 : $*Optional<String>         // id: %242
  %243 = alloc_stack $Optional<String>            // users: %244, %247, %248
  store %195 to %243 : $*Optional<String>         // id: %244
  %245 = metatype $@thin Optional<String>.Type    // user: %247
  // function_ref static Optional<A>.== infix(_:_:)
  %246 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %247
  %247 = apply %246<String>(%241, %243, %245) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %251
  dealloc_stack %243 : $*Optional<String>         // id: %248
  destroy_addr %241 : $*Optional<String>          // id: %249
  dealloc_stack %241 : $*Optional<String>         // id: %250
  %251 = struct_extract %247 : $Bool, #Bool._value // user: %252
  cond_br %251, bb5, bb6                          // id: %252

bb5:                                              // Preds: bb4
  release_value %195 : $Optional<String>          // id: %253
  %254 = metatype $@thick Closure.Type            // user: %257
  strong_retain %76 : $@callee_guaranteed () -> () // id: %255
  // function_ref Closure.__allocating_init(_:)
  %256 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %257
  %257 = apply %256(%76, %254) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %259
  %258 = alloc_stack $Closure                     // users: %259, %264, %262
  store %257 to %258 : $*Closure                  // id: %259
  %260 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %263, %262
  // function_ref Array.append(_:)
  %261 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %262
  %262 = apply %261<Closure>(%258, %260) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %260 : $*Array<Closure>              // id: %263
  dealloc_stack %258 : $*Closure                  // id: %264
  br bb25                                         // id: %265

bb6:                                              // Preds: bb4
  release_value %195 : $Optional<String>          // id: %266
  retain_value %195 : $Optional<String>           // id: %267
  debug_value %195 : $Optional<String>, let, name "$match" // id: %268
  %269 = string_literal utf8 "push2"              // user: %274
  %270 = integer_literal $Builtin.Word, 5         // user: %274
  %271 = integer_literal $Builtin.Int1, -1        // user: %274
  %272 = metatype $@thin String.Type              // user: %274
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %273 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %274
  %274 = apply %273(%269, %270, %271, %272) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %275
  %275 = enum $Optional<String>, #Optional.some!enumelt, %274 : $String // user: %277
  %276 = alloc_stack $Optional<String>            // users: %277, %282, %285, %284
  store %275 to %276 : $*Optional<String>         // id: %277
  %278 = alloc_stack $Optional<String>            // users: %279, %282, %283
  store %195 to %278 : $*Optional<String>         // id: %279
  %280 = metatype $@thin Optional<String>.Type    // user: %282
  // function_ref static Optional<A>.== infix(_:_:)
  %281 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %282
  %282 = apply %281<String>(%276, %278, %280) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %286
  dealloc_stack %278 : $*Optional<String>         // id: %283
  destroy_addr %276 : $*Optional<String>          // id: %284
  dealloc_stack %276 : $*Optional<String>         // id: %285
  %286 = struct_extract %282 : $Bool, #Bool._value // user: %287
  cond_br %286, bb7, bb8                          // id: %287

bb7:                                              // Preds: bb6
  release_value %195 : $Optional<String>          // id: %288
  %289 = metatype $@thick Closure.Type            // user: %292
  strong_retain %86 : $@callee_guaranteed () -> () // id: %290
  // function_ref Closure.__allocating_init(_:)
  %291 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %292
  %292 = apply %291(%86, %289) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %294
  %293 = alloc_stack $Closure                     // users: %294, %299, %297
  store %292 to %293 : $*Closure                  // id: %294
  %295 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %298, %297
  // function_ref Array.append(_:)
  %296 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %297
  %297 = apply %296<Closure>(%293, %295) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %295 : $*Array<Closure>              // id: %298
  dealloc_stack %293 : $*Closure                  // id: %299
  br bb25                                         // id: %300

bb8:                                              // Preds: bb6
  release_value %195 : $Optional<String>          // id: %301
  retain_value %195 : $Optional<String>           // id: %302
  debug_value %195 : $Optional<String>, let, name "$match" // id: %303
  %304 = string_literal utf8 "push2_1"            // user: %309
  %305 = integer_literal $Builtin.Word, 7         // user: %309
  %306 = integer_literal $Builtin.Int1, -1        // user: %309
  %307 = metatype $@thin String.Type              // user: %309
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %308 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %309
  %309 = apply %308(%304, %305, %306, %307) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %310
  %310 = enum $Optional<String>, #Optional.some!enumelt, %309 : $String // user: %312
  %311 = alloc_stack $Optional<String>            // users: %312, %317, %320, %319
  store %310 to %311 : $*Optional<String>         // id: %312
  %313 = alloc_stack $Optional<String>            // users: %314, %317, %318
  store %195 to %313 : $*Optional<String>         // id: %314
  %315 = metatype $@thin Optional<String>.Type    // user: %317
  // function_ref static Optional<A>.== infix(_:_:)
  %316 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %317
  %317 = apply %316<String>(%311, %313, %315) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %321
  dealloc_stack %313 : $*Optional<String>         // id: %318
  destroy_addr %311 : $*Optional<String>          // id: %319
  dealloc_stack %311 : $*Optional<String>         // id: %320
  %321 = struct_extract %317 : $Bool, #Bool._value // user: %322
  cond_br %321, bb9, bb10                         // id: %322

bb9:                                              // Preds: bb8
  release_value %195 : $Optional<String>          // id: %323
  %324 = metatype $@thick Closure.Type            // user: %327
  strong_retain %98 : $@callee_guaranteed () -> () // id: %325
  // function_ref Closure.__allocating_init(_:)
  %326 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %327
  %327 = apply %326(%98, %324) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %329
  %328 = alloc_stack $Closure                     // users: %329, %334, %332
  store %327 to %328 : $*Closure                  // id: %329
  %330 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %333, %332
  // function_ref Array.append(_:)
  %331 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %332
  %332 = apply %331<Closure>(%328, %330) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %330 : $*Array<Closure>              // id: %333
  dealloc_stack %328 : $*Closure                  // id: %334
  br bb25                                         // id: %335

bb10:                                             // Preds: bb8
  release_value %195 : $Optional<String>          // id: %336
  retain_value %195 : $Optional<String>           // id: %337
  debug_value %195 : $Optional<String>, let, name "$match" // id: %338
  %339 = string_literal utf8 "pop"                // user: %344
  %340 = integer_literal $Builtin.Word, 3         // user: %344
  %341 = integer_literal $Builtin.Int1, -1        // user: %344
  %342 = metatype $@thin String.Type              // user: %344
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %343 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %344
  %344 = apply %343(%339, %340, %341, %342) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %345
  %345 = enum $Optional<String>, #Optional.some!enumelt, %344 : $String // user: %347
  %346 = alloc_stack $Optional<String>            // users: %347, %352, %355, %354
  store %345 to %346 : $*Optional<String>         // id: %347
  %348 = alloc_stack $Optional<String>            // users: %349, %352, %353
  store %195 to %348 : $*Optional<String>         // id: %349
  %350 = metatype $@thin Optional<String>.Type    // user: %352
  // function_ref static Optional<A>.== infix(_:_:)
  %351 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %352
  %352 = apply %351<String>(%346, %348, %350) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %356
  dealloc_stack %348 : $*Optional<String>         // id: %353
  destroy_addr %346 : $*Optional<String>          // id: %354
  dealloc_stack %346 : $*Optional<String>         // id: %355
  %356 = struct_extract %352 : $Bool, #Bool._value // user: %357
  cond_br %356, bb11, bb14                        // id: %357

bb11:                                             // Preds: bb10
  release_value %195 : $Optional<String>          // id: %358
  %359 = begin_access [read] [static] %125 : $*Array<Closure> // users: %360, %362
  %360 = load %359 : $*Array<Closure>             // users: %371, %364, %361
  retain_value %360 : $Array<Closure>             // id: %361
  end_access %359 : $*Array<Closure>              // id: %362
  %363 = alloc_stack $Array<Closure>              // users: %365, %364, %375
  store %360 to %363 : $*Array<Closure>           // id: %364
  %365 = load %363 : $*Array<Closure>             // user: %367
  %366 = alloc_stack $Array<Closure>              // users: %367, %370, %369
  store %365 to %366 : $*Array<Closure>           // id: %367
  // function_ref Collection.isEmpty.getter
  %368 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %369
  %369 = apply %368<[Closure]>(%366) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %372
  dealloc_stack %366 : $*Array<Closure>           // id: %370
  release_value %360 : $Array<Closure>            // id: %371
  %372 = struct_extract %369 : $Bool, #Bool._value // user: %374
  %373 = integer_literal $Builtin.Int1, -1        // user: %374
  %374 = builtin "xor_Int1"(%372 : $Builtin.Int1, %373 : $Builtin.Int1) : $Builtin.Int1 // user: %376
  dealloc_stack %363 : $*Array<Closure>           // id: %375
  cond_br %374, bb12, bb13                        // id: %376

bb12:                                             // Preds: bb11
  %377 = alloc_stack $Closure                     // users: %382, %384, %380
  %378 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %381, %380
  // function_ref RangeReplaceableCollection<>.removeLast()
  %379 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %380
  %380 = apply %379<[Closure]>(%377, %378) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %378 : $*Array<Closure>              // id: %381
  %382 = load %377 : $*Closure                    // user: %383
  strong_release %382 : $Closure                  // id: %383
  dealloc_stack %377 : $*Closure                  // id: %384
  br bb25                                         // id: %385

bb13:                                             // Preds: bb11
  br bb15                                         // id: %386

bb14:                                             // Preds: bb10
  release_value %195 : $Optional<String>          // id: %387
  br bb15                                         // id: %388

bb15:                                             // Preds: bb13 bb14
  retain_value %195 : $Optional<String>           // id: %389
  debug_value %195 : $Optional<String>, let, name "$match" // id: %390
  %391 = string_literal utf8 "inc"                // user: %396
  %392 = integer_literal $Builtin.Word, 3         // user: %396
  %393 = integer_literal $Builtin.Int1, -1        // user: %396
  %394 = metatype $@thin String.Type              // user: %396
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %395 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %396
  %396 = apply %395(%391, %392, %393, %394) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %397
  %397 = enum $Optional<String>, #Optional.some!enumelt, %396 : $String // user: %399
  %398 = alloc_stack $Optional<String>            // users: %399, %404, %407, %406
  store %397 to %398 : $*Optional<String>         // id: %399
  %400 = alloc_stack $Optional<String>            // users: %401, %404, %405
  store %195 to %400 : $*Optional<String>         // id: %401
  %402 = metatype $@thin Optional<String>.Type    // user: %404
  // function_ref static Optional<A>.== infix(_:_:)
  %403 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %404
  %404 = apply %403<String>(%398, %400, %402) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %408
  dealloc_stack %400 : $*Optional<String>         // id: %405
  destroy_addr %398 : $*Optional<String>          // id: %406
  dealloc_stack %398 : $*Optional<String>         // id: %407
  %408 = struct_extract %404 : $Bool, #Bool._value // user: %409
  cond_br %408, bb16, bb17                        // id: %409

bb16:                                             // Preds: bb15
  release_value %195 : $Optional<String>          // id: %410
  %411 = integer_literal $Builtin.Int64, 1        // user: %416
  %412 = begin_access [modify] [dynamic] %60 : $*Int // users: %421, %413, %423
  %413 = struct_element_addr %412 : $*Int, #Int._value // user: %414
  %414 = load %413 : $*Builtin.Int64              // user: %416
  %415 = integer_literal $Builtin.Int1, -1        // user: %416
  %416 = builtin "sadd_with_overflow_Int64"(%414 : $Builtin.Int64, %411 : $Builtin.Int64, %415 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %418, %417
  %417 = tuple_extract %416 : $(Builtin.Int64, Builtin.Int1), 0 // user: %420
  %418 = tuple_extract %416 : $(Builtin.Int64, Builtin.Int1), 1 // user: %419
  cond_fail %418 : $Builtin.Int1, "arithmetic overflow" // id: %419
  %420 = struct $Int (%417 : $Builtin.Int64)      // user: %421
  store %420 to %412 : $*Int                      // id: %421
  %422 = tuple ()
  end_access %412 : $*Int                         // id: %423
  br bb25                                         // id: %424

bb17:                                             // Preds: bb15
  release_value %195 : $Optional<String>          // id: %425
  retain_value %195 : $Optional<String>           // id: %426
  debug_value %195 : $Optional<String>, let, name "$match" // id: %427
  %428 = string_literal utf8 "exec"               // user: %433
  %429 = integer_literal $Builtin.Word, 4         // user: %433
  %430 = integer_literal $Builtin.Int1, -1        // user: %433
  %431 = metatype $@thin String.Type              // user: %433
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %432 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %433
  %433 = apply %432(%428, %429, %430, %431) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %434
  %434 = enum $Optional<String>, #Optional.some!enumelt, %433 : $String // user: %436
  %435 = alloc_stack $Optional<String>            // users: %436, %441, %444, %443
  store %434 to %435 : $*Optional<String>         // id: %436
  %437 = alloc_stack $Optional<String>            // users: %438, %441, %442
  store %195 to %437 : $*Optional<String>         // id: %438
  %439 = metatype $@thin Optional<String>.Type    // user: %441
  // function_ref static Optional<A>.== infix(_:_:)
  %440 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %441
  %441 = apply %440<String>(%435, %437, %439) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %445
  dealloc_stack %437 : $*Optional<String>         // id: %442
  destroy_addr %435 : $*Optional<String>          // id: %443
  dealloc_stack %435 : $*Optional<String>         // id: %444
  %445 = struct_extract %441 : $Bool, #Bool._value // user: %446
  cond_br %445, bb18, bb22                        // id: %446

bb18:                                             // Preds: bb17
  release_value %195 : $Optional<String>          // id: %447
  %448 = begin_access [read] [static] %125 : $*Array<Closure> // users: %449, %451
  %449 = load %448 : $*Array<Closure>             // users: %462, %453, %450
  retain_value %449 : $Array<Closure>             // id: %450
  end_access %448 : $*Array<Closure>              // id: %451
  %452 = alloc_stack $Array<Closure>              // users: %454, %453, %476, %481
  store %449 to %452 : $*Array<Closure>           // id: %453
  %454 = load %452 : $*Array<Closure>             // user: %457
  %455 = alloc_stack $Optional<Closure>           // users: %461, %475, %480, %459
  %456 = alloc_stack $Array<Closure>              // users: %457, %460, %459
  store %454 to %456 : $*Array<Closure>           // id: %457
  // function_ref BidirectionalCollection.last.getter
  %458 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %459
  %459 = apply %458<[Closure]>(%455, %456) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %456 : $*Array<Closure>           // id: %460
  %461 = load %455 : $*Optional<Closure>          // user: %463
  release_value %449 : $Array<Closure>            // id: %462
  switch_enum %461 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %463

// %464                                           // users: %470, %465
bb19(%464 : $Closure):                            // Preds: bb18
  %465 = ref_element_addr %464 : $Closure, #Closure.closure // user: %466
  %466 = begin_access [read] [dynamic] %465 : $*@callee_guaranteed () -> () // users: %467, %469
  %467 = load %466 : $*@callee_guaranteed () -> () // users: %474, %471, %468
  strong_retain %467 : $@callee_guaranteed () -> () // id: %468
  end_access %466 : $*@callee_guaranteed () -> () // id: %469
  strong_release %464 : $Closure                  // id: %470
  %471 = apply %467() : $@callee_guaranteed () -> ()
  %472 = tuple ()                                 // user: %473
  %473 = enum $Optional<()>, #Optional.some!enumelt, %472 : $() // user: %477
  strong_release %467 : $@callee_guaranteed () -> () // id: %474
  dealloc_stack %455 : $*Optional<Closure>        // id: %475
  dealloc_stack %452 : $*Array<Closure>           // id: %476
  br bb20(%473 : $Optional<()>)                   // id: %477

bb20(%478 : $Optional<()>):                       // Preds: bb21 bb19
  br bb25                                         // id: %479

bb21:                                             // Preds: bb18
  dealloc_stack %455 : $*Optional<Closure>        // id: %480
  dealloc_stack %452 : $*Array<Closure>           // id: %481
  %482 = enum $Optional<()>, #Optional.none!enumelt // user: %483
  br bb20(%482 : $Optional<()>)                   // id: %483

bb22:                                             // Preds: bb17
  release_value %195 : $Optional<String>          // id: %484
  retain_value %195 : $Optional<String>           // id: %485
  debug_value %195 : $Optional<String>, let, name "$match" // id: %486
  %487 = string_literal utf8 "exit"               // user: %492
  %488 = integer_literal $Builtin.Word, 4         // user: %492
  %489 = integer_literal $Builtin.Int1, -1        // user: %492
  %490 = metatype $@thin String.Type              // user: %492
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %491 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %492
  %492 = apply %491(%487, %488, %489, %490) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %493
  %493 = enum $Optional<String>, #Optional.some!enumelt, %492 : $String // user: %495
  %494 = alloc_stack $Optional<String>            // users: %495, %500, %503, %502
  store %493 to %494 : $*Optional<String>         // id: %495
  %496 = alloc_stack $Optional<String>            // users: %497, %500, %501
  store %195 to %496 : $*Optional<String>         // id: %497
  %498 = metatype $@thin Optional<String>.Type    // user: %500
  // function_ref static Optional<A>.== infix(_:_:)
  %499 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %500
  %500 = apply %499<String>(%494, %496, %498) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %504
  dealloc_stack %496 : $*Optional<String>         // id: %501
  destroy_addr %494 : $*Optional<String>          // id: %502
  dealloc_stack %494 : $*Optional<String>         // id: %503
  %504 = struct_extract %500 : $Bool, #Bool._value // user: %505
  cond_br %504, bb23, bb24                        // id: %505

bb23:                                             // Preds: bb22
  release_value %195 : $Optional<String>          // id: %506
  %507 = integer_literal $Builtin.Int1, 0         // user: %508
  %508 = struct $Bool (%507 : $Builtin.Int1)      // user: %510
  %509 = begin_access [modify] [static] %159 : $*Bool // users: %510, %511
  store %508 to %509 : $*Bool                     // id: %510
  end_access %509 : $*Bool                        // id: %511
  br bb25                                         // id: %512

bb24:                                             // Preds: bb22
  release_value %195 : $Optional<String>          // id: %513
  %514 = integer_literal $Builtin.Word, 1         // user: %516
  // function_ref _allocateUninitializedArray<A>(_:)
  %515 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %516
  %516 = apply %515<Any>(%514) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %518, %517
  %517 = tuple_extract %516 : $(Array<Any>, Builtin.RawPointer), 0 // users: %536, %533
  %518 = tuple_extract %516 : $(Array<Any>, Builtin.RawPointer), 1 // user: %519
  %519 = pointer_to_address %518 : $Builtin.RawPointer to [strict] $*Any // user: %526
  %520 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %525
  %521 = integer_literal $Builtin.Word, 44        // user: %525
  %522 = integer_literal $Builtin.Int1, 0         // user: %525
  %523 = metatype $@thin String.Type              // user: %525
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %524 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %525
  %525 = apply %524(%520, %521, %522, %523) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %527
  %526 = init_existential_addr %519 : $*Any, $String // user: %527
  store %525 to %526 : $*String                   // id: %527
  // function_ref default argument 1 of print(_:separator:terminator:)
  %528 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %529
  %529 = apply %528() : $@convention(thin) () -> @owned String // users: %535, %533
  // function_ref default argument 2 of print(_:separator:terminator:)
  %530 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %531
  %531 = apply %530() : $@convention(thin) () -> @owned String // users: %534, %533
  // function_ref print(_:separator:terminator:)
  %532 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %533
  %533 = apply %532(%517, %529, %531) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %531 : $String                    // id: %534
  release_value %529 : $String                    // id: %535
  release_value %517 : $Array<Any>                // id: %536
  br bb25                                         // id: %537

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  release_value %195 : $Optional<String>          // id: %538
  br bb1                                          // id: %539

bb26:                                             // Preds: bb1
  %540 = integer_literal $Builtin.Word, 1         // user: %542
  // function_ref _allocateUninitializedArray<A>(_:)
  %541 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %542
  %542 = apply %541<Any>(%540) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %544, %543
  %543 = tuple_extract %542 : $(Array<Any>, Builtin.RawPointer), 0 // users: %562, %559
  %544 = tuple_extract %542 : $(Array<Any>, Builtin.RawPointer), 1 // user: %545
  %545 = pointer_to_address %544 : $Builtin.RawPointer to [strict] $*Any // user: %552
  %546 = string_literal utf8 "===== will end"     // user: %551
  %547 = integer_literal $Builtin.Word, 14        // user: %551
  %548 = integer_literal $Builtin.Int1, -1        // user: %551
  %549 = metatype $@thin String.Type              // user: %551
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %550 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %551
  %551 = apply %550(%546, %547, %548, %549) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %553
  %552 = init_existential_addr %545 : $*Any, $String // user: %553
  store %551 to %552 : $*String                   // id: %553
  // function_ref default argument 1 of print(_:separator:terminator:)
  %554 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %555
  %555 = apply %554() : $@convention(thin) () -> @owned String // users: %561, %559
  // function_ref default argument 2 of print(_:separator:terminator:)
  %556 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %557
  %557 = apply %556() : $@convention(thin) () -> @owned String // users: %560, %559
  // function_ref print(_:separator:terminator:)
  %558 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %559
  %559 = apply %558(%543, %555, %557) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %557 : $String                    // id: %560
  release_value %555 : $String                    // id: %561
  release_value %543 : $Array<Any>                // id: %562
  dealloc_stack %159 : $*Bool                     // id: %563
  destroy_addr %125 : $*Array<Closure>            // id: %564
  dealloc_stack %125 : $*Array<Closure>           // id: %565
  strong_release %98 : $@callee_guaranteed () -> () // id: %566
  strong_release %86 : $@callee_guaranteed () -> () // id: %567
  strong_release %76 : $@callee_guaranteed () -> () // id: %568
  strong_release %68 : $@callee_guaranteed () -> () // id: %569
  strong_release %59 : ${ var Int }               // id: %570
  strong_release %11 : $Number                    // id: %571
  strong_release %5 : $Empty                      // id: %572
  strong_release %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %573
  %574 = tuple ()                                 // user: %575
  return %574 : $()                               // id: %575
} // end sil function '$s4file3fooyyF'

// closure #1 in foo()
sil private @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () {
// %0 "name"                                      // users: %4, %3, %1
bb0(%0 : $String):
  debug_value %0 : $String, let, name "name", argno 1 // id: %1
  // function_ref closure #1 in closure #1 in foo()
  %2 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %4
  retain_value %0 : $String                       // id: %3
  %4 = partial_apply [callee_guaranteed] %2(%0) : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %5
  return %4 : $@callee_guaranteed (Int, Int, Int) -> () // id: %5
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_'

// closure #1 in closure #1 in foo()
sil private @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %53, %4
// %1 "weak"                                      // users: %71, %5
// %2 "unowned"                                   // users: %89, %6
// %3 "name"                                      // users: %35, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %12, %11
  %11 = tuple_extract %10 : $(Array<Any>, Builtin.RawPointer), 0 // users: %123, %120
  %12 = tuple_extract %10 : $(Array<Any>, Builtin.RawPointer), 1 // user: %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %113
  %14 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %106, %22, %109, %108, %29, %36, %47, %54, %65, %72, %83, %90, %101
  %15 = integer_literal $Builtin.Int64, 39        // user: %16
  %16 = struct $Int (%15 : $Builtin.Int64)        // user: %21
  %17 = integer_literal $Builtin.Int64, 4         // user: %18
  %18 = struct $Int (%17 : $Builtin.Int64)        // user: %21
  %19 = metatype $@thin DefaultStringInterpolation.Type // user: %21
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %20 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %21
  %21 = apply %20(%16, %18, %19) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %22
  store %21 to %14 : $*DefaultStringInterpolation // id: %22
  %23 = string_literal utf8 "Name: "              // user: %28
  %24 = integer_literal $Builtin.Word, 6          // user: %28
  %25 = integer_literal $Builtin.Int1, -1         // user: %28
  %26 = metatype $@thin String.Type               // user: %28
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %27 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %28 = apply %27(%23, %24, %25, %26) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %33, %31
  %29 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %32, %31
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %30 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %31
  %31 = apply %30(%28, %29) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %29 : $*DefaultStringInterpolation   // id: %32
  release_value %28 : $String                     // id: %33
  %34 = alloc_stack $String                       // users: %35, %40, %38
  store %3 to %34 : $*String                      // id: %35
  %36 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %39, %38
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %37 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %38
  %38 = apply %37<String>(%34, %36) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %36 : $*DefaultStringInterpolation   // id: %39
  dealloc_stack %34 : $*String                    // id: %40
  %41 = string_literal utf8 "; Strong: ("         // user: %46
  %42 = integer_literal $Builtin.Word, 11         // user: %46
  %43 = integer_literal $Builtin.Int1, -1         // user: %46
  %44 = metatype $@thin String.Type               // user: %46
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %45 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %46
  %46 = apply %45(%41, %42, %43, %44) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %51, %49
  %47 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %50, %49
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %48 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %49
  %49 = apply %48(%46, %47) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %47 : $*DefaultStringInterpolation   // id: %50
  release_value %46 : $String                     // id: %51
  %52 = alloc_stack $Int                          // users: %53, %58, %56
  store %0 to %52 : $*Int                         // id: %53
  %54 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 "); Weak: ("          // user: %64
  %60 = integer_literal $Builtin.Word, 10         // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  release_value %64 : $String                     // id: %69
  %70 = alloc_stack $Int                          // users: %71, %76, %74
  store %1 to %70 : $*Int                         // id: %71
  %72 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %75, %74
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %73 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %74
  %74 = apply %73<Int>(%70, %72) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %72 : $*DefaultStringInterpolation   // id: %75
  dealloc_stack %70 : $*Int                       // id: %76
  %77 = string_literal utf8 "); Unowned("         // user: %82
  %78 = integer_literal $Builtin.Word, 11         // user: %82
  %79 = integer_literal $Builtin.Int1, -1         // user: %82
  %80 = metatype $@thin String.Type               // user: %82
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %81 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %82
  %82 = apply %81(%77, %78, %79, %80) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %87, %85
  %83 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %86, %85
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %84 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %85
  %85 = apply %84(%82, %83) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %83 : $*DefaultStringInterpolation   // id: %86
  release_value %82 : $String                     // id: %87
  %88 = alloc_stack $Int                          // users: %89, %94, %92
  store %2 to %88 : $*Int                         // id: %89
  %90 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %93, %92
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %91 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %92
  %92 = apply %91<Int>(%88, %90) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %90 : $*DefaultStringInterpolation   // id: %93
  dealloc_stack %88 : $*Int                       // id: %94
  %95 = string_literal utf8 ")"                   // user: %100
  %96 = integer_literal $Builtin.Word, 1          // user: %100
  %97 = integer_literal $Builtin.Int1, -1         // user: %100
  %98 = metatype $@thin String.Type               // user: %100
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %99 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %100
  %100 = apply %99(%95, %96, %97, %98) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %105, %103
  %101 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %104, %103
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %102 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %103
  %103 = apply %102(%100, %101) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %101 : $*DefaultStringInterpolation  // id: %104
  release_value %100 : $String                    // id: %105
  %106 = load %14 : $*DefaultStringInterpolation  // users: %112, %107
  retain_value %106 : $DefaultStringInterpolation // id: %107
  destroy_addr %14 : $*DefaultStringInterpolation // id: %108
  dealloc_stack %14 : $*DefaultStringInterpolation // id: %109
  %110 = metatype $@thin String.Type              // user: %112
  // function_ref String.init(stringInterpolation:)
  %111 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %112
  %112 = apply %111(%106, %110) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %114
  %113 = init_existential_addr %13 : $*Any, $String // user: %114
  store %112 to %113 : $*String                   // id: %114
  // function_ref default argument 1 of print(_:separator:terminator:)
  %115 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %116
  %116 = apply %115() : $@convention(thin) () -> @owned String // users: %122, %120
  // function_ref default argument 2 of print(_:separator:terminator:)
  %117 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %118
  %118 = apply %117() : $@convention(thin) () -> @owned String // users: %121, %120
  // function_ref print(_:separator:terminator:)
  %119 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %120
  %120 = apply %119(%11, %116, %118) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %118 : $String                    // id: %121
  release_value %116 : $String                    // id: %122
  release_value %11 : $Array<Any>                 // id: %123
  %124 = tuple ()                                 // user: %125
  return %124 : $()                               // id: %125
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] [_semantics "array.uninitialized_intrinsic"] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer)

// Int.init(_builtinIntegerLiteral:)
sil public_external [transparent] [serialized] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int {
// %0                                             // user: %2
bb0(%0 : $Builtin.IntLiteral, %1 : $@thin Int.Type):
  %2 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%0 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %3
  %3 = tuple_extract %2 : $(Builtin.Int64, Builtin.Int1), 0 // user: %4
  %4 = struct $Int (%3 : $Builtin.Int64)          // user: %5
  return %4 : $Int                                // id: %5
} // end sil function '$sSi22_builtinIntegerLiteralSiBI_tcfC'

// DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
sil [serialized] @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// DefaultStringInterpolation.appendLiteral(_:)
sil [serialized] @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// String.init(stringInterpolation:)
sil [serialized] [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String

// default argument 1 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 " "                    // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA0_'

// default argument 2 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 "\n"                   // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA1_'

// print(_:separator:terminator:)
sil @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()

// closure #2 in foo()
sil private @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () {
// %0 "number"                                    // users: %3, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %1
  %2 = integer_literal $Builtin.Int64, 1          // user: %8
  %3 = ref_element_addr %0 : $Number, #Number.number // user: %4
  %4 = begin_access [modify] [dynamic] %3 : $*Int // users: %13, %5, %15
  %5 = struct_element_addr %4 : $*Int, #Int._value // user: %6
  %6 = load %5 : $*Builtin.Int64                  // user: %8
  %7 = integer_literal $Builtin.Int1, -1          // user: %8
  %8 = builtin "sadd_with_overflow_Int64"(%6 : $Builtin.Int64, %2 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %10, %9
  %9 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 0 // user: %12
  %10 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 1 // user: %11
  cond_fail %10 : $Builtin.Int1, "arithmetic overflow" // id: %11
  %12 = struct $Int (%9 : $Builtin.Int64)         // user: %13
  store %12 to %4 : $*Int                         // id: %13
  %14 = tuple ()
  end_access %4 : $*Int                           // id: %15
  %16 = tuple ()                                  // user: %17
  return %16 : $()                                // id: %17
} // end sil function '$s4file3fooyyFyycfU0_'

// static Int.+= infix(_:_:)
sil public_external [transparent] [serialized] @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () {
// %0                                             // users: %14, %3
// %1                                             // user: %5
bb0(%0 : $*Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_element_addr %0 : $*Int, #Int._value // user: %4
  %4 = load %3 : $*Builtin.Int64                  // user: %7
  %5 = struct_extract %1 : $Int, #Int._value      // user: %7
  %6 = integer_literal $Builtin.Int1, -1          // user: %7
  %7 = builtin "sadd_with_overflow_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %9, %8
  %8 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 0 // user: %13
  %9 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 1 // user: %12
  br bb1                                          // id: %10

bb1:                                              // Preds: bb0
  br bb2                                          // id: %11

bb2:                                              // Preds: bb1
  cond_fail %9 : $Builtin.Int1, "arithmetic overflow" // id: %12
  %13 = struct $Int (%8 : $Builtin.Int64)         // user: %14
  store %13 to %0 : $*Int                         // id: %14
  %15 = tuple ()                                  // user: %16
  return %15 : $()                                // id: %16
} // end sil function '$sSi2peoiyySiz_SitFZ'

// closure #3 in foo()
sil private @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %6, %2
// %1 "value"                                     // user: %3
bb0(%0 : $Number, %1 : ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %45, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = integer_literal $Builtin.Int64, 1          // user: %11
  %6 = ref_element_addr %0 : $Number, #Number.number // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*Int // users: %16, %8, %18
  %8 = struct_element_addr %7 : $*Int, #Int._value // user: %9
  %9 = load %8 : $*Builtin.Int64                  // user: %11
  %10 = integer_literal $Builtin.Int1, -1         // user: %11
  %11 = builtin "sadd_with_overflow_Int64"(%9 : $Builtin.Int64, %5 : $Builtin.Int64, %10 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %13, %12
  %12 = tuple_extract %11 : $(Builtin.Int64, Builtin.Int1), 0 // user: %15
  %13 = tuple_extract %11 : $(Builtin.Int64, Builtin.Int1), 1 // user: %14
  cond_fail %13 : $Builtin.Int1, "arithmetic overflow" // id: %14
  %15 = struct $Int (%12 : $Builtin.Int64)        // user: %16
  store %15 to %7 : $*Int                         // id: %16
  %17 = tuple ()
  end_access %7 : $*Int                           // id: %18
  %19 = integer_literal $Builtin.Word, 1          // user: %21
  // function_ref _allocateUninitializedArray<A>(_:)
  %20 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %21
  %21 = apply %20<Any>(%19) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %23, %22
  %22 = tuple_extract %21 : $(Array<Any>, Builtin.RawPointer), 0 // users: %83, %80
  %23 = tuple_extract %21 : $(Array<Any>, Builtin.RawPointer), 1 // user: %24
  %24 = pointer_to_address %23 : $Builtin.RawPointer to [strict] $*Any // user: %73
  %25 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %66, %33, %69, %68, %40, %50, %61
  %26 = integer_literal $Builtin.Int64, 3         // user: %27
  %27 = struct $Int (%26 : $Builtin.Int64)        // user: %32
  %28 = integer_literal $Builtin.Int64, 1         // user: %29
  %29 = struct $Int (%28 : $Builtin.Int64)        // user: %32
  %30 = metatype $@thin DefaultStringInterpolation.Type // user: %32
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %31 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %32
  %32 = apply %31(%27, %29, %30) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %33
  store %32 to %25 : $*DefaultStringInterpolation // id: %33
  %34 = string_literal utf8 "v: "                 // user: %39
  %35 = integer_literal $Builtin.Word, 3          // user: %39
  %36 = integer_literal $Builtin.Int1, -1         // user: %39
  %37 = metatype $@thin String.Type               // user: %39
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %38 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %39
  %39 = apply %38(%34, %35, %36, %37) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %44, %42
  %40 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %43, %42
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %41 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %42
  %42 = apply %41(%39, %40) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %40 : $*DefaultStringInterpolation   // id: %43
  release_value %39 : $String                     // id: %44
  %45 = begin_access [read] [dynamic] %3 : $*Int  // users: %46, %47
  %46 = load %45 : $*Int                          // user: %49
  end_access %45 : $*Int                          // id: %47
  %48 = alloc_stack $Int                          // users: %49, %54, %52
  store %46 to %48 : $*Int                        // id: %49
  %50 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %53, %52
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %51 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %52
  %52 = apply %51<Int>(%48, %50) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %50 : $*DefaultStringInterpolation   // id: %53
  dealloc_stack %48 : $*Int                       // id: %54
  %55 = string_literal utf8 ""                    // user: %60
  %56 = integer_literal $Builtin.Word, 0          // user: %60
  %57 = integer_literal $Builtin.Int1, -1         // user: %60
  %58 = metatype $@thin String.Type               // user: %60
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %59 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %60
  %60 = apply %59(%55, %56, %57, %58) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %65, %63
  %61 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %64, %63
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %62 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %63
  %63 = apply %62(%60, %61) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %61 : $*DefaultStringInterpolation   // id: %64
  release_value %60 : $String                     // id: %65
  %66 = load %25 : $*DefaultStringInterpolation   // users: %72, %67
  retain_value %66 : $DefaultStringInterpolation  // id: %67
  destroy_addr %25 : $*DefaultStringInterpolation // id: %68
  dealloc_stack %25 : $*DefaultStringInterpolation // id: %69
  %70 = metatype $@thin String.Type               // user: %72
  // function_ref String.init(stringInterpolation:)
  %71 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %72
  %72 = apply %71(%66, %70) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %74
  %73 = init_existential_addr %24 : $*Any, $String // user: %74
  store %72 to %73 : $*String                     // id: %74
  // function_ref default argument 1 of print(_:separator:terminator:)
  %75 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %76
  %76 = apply %75() : $@convention(thin) () -> @owned String // users: %82, %80
  // function_ref default argument 2 of print(_:separator:terminator:)
  %77 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %78
  %78 = apply %77() : $@convention(thin) () -> @owned String // users: %81, %80
  // function_ref print(_:separator:terminator:)
  %79 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %80
  %80 = apply %79(%22, %76, %78) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %78 : $String                     // id: %81
  release_value %76 : $String                     // id: %82
  release_value %22 : $Array<Any>                 // id: %83
  %84 = tuple ()                                  // user: %85
  return %84 : $()                                // id: %85
} // end sil function '$s4file3fooyyFyycfU1_'

// closure #4 in foo()
sil private @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () {
// %0 "number"                                    // users: %5, %2
// %1 "empty"                                     // users: %19, %3
bb0(%0 : $Number, %1 : $Empty):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %3
  %4 = integer_literal $Builtin.Int64, 1          // user: %10
  %5 = ref_element_addr %0 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %15, %7, %17
  %7 = struct_element_addr %6 : $*Int, #Int._value // user: %8
  %8 = load %7 : $*Builtin.Int64                  // user: %10
  %9 = integer_literal $Builtin.Int1, -1          // user: %10
  %10 = builtin "sadd_with_overflow_Int64"(%8 : $Builtin.Int64, %4 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %12, %11
  %11 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 0 // user: %14
  %12 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 1 // user: %13
  cond_fail %12 : $Builtin.Int1, "arithmetic overflow" // id: %13
  %14 = struct $Int (%11 : $Builtin.Int64)        // user: %15
  store %14 to %6 : $*Int                         // id: %15
  %16 = tuple ()
  end_access %6 : $*Int                           // id: %17
  // function_ref Empty.foo()
  %18 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %19
  %19 = apply %18(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %20 = tuple ()                                  // user: %21
  return %20 : $()                                // id: %21
} // end sil function '$s4file3fooyyFyycfU2_'

// closure #5 in foo()
sil private @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %8, %3
// %1 "empty"                                     // users: %22, %4
// %2 "value"                                     // user: %5
bb0(%0 : $Number, %1 : $Empty, %2 : ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %49, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = integer_literal $Builtin.Int64, 1          // user: %13
  %8 = ref_element_addr %0 : $Number, #Number.number // user: %9
  %9 = begin_access [modify] [dynamic] %8 : $*Int // users: %18, %10, %20
  %10 = struct_element_addr %9 : $*Int, #Int._value // user: %11
  %11 = load %10 : $*Builtin.Int64                // user: %13
  %12 = integer_literal $Builtin.Int1, -1         // user: %13
  %13 = builtin "sadd_with_overflow_Int64"(%11 : $Builtin.Int64, %7 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %15, %14
  %14 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 0 // user: %17
  %15 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 1 // user: %16
  cond_fail %15 : $Builtin.Int1, "arithmetic overflow" // id: %16
  %17 = struct $Int (%14 : $Builtin.Int64)        // user: %18
  store %17 to %9 : $*Int                         // id: %18
  %19 = tuple ()
  end_access %9 : $*Int                           // id: %20
  // function_ref Empty.foo()
  %21 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %22
  %22 = apply %21(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %23 = integer_literal $Builtin.Word, 1          // user: %25
  // function_ref _allocateUninitializedArray<A>(_:)
  %24 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %25
  %25 = apply %24<Any>(%23) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %27, %26
  %26 = tuple_extract %25 : $(Array<Any>, Builtin.RawPointer), 0 // users: %87, %84
  %27 = tuple_extract %25 : $(Array<Any>, Builtin.RawPointer), 1 // user: %28
  %28 = pointer_to_address %27 : $Builtin.RawPointer to [strict] $*Any // user: %77
  %29 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %70, %37, %73, %72, %44, %54, %65
  %30 = integer_literal $Builtin.Int64, 3         // user: %31
  %31 = struct $Int (%30 : $Builtin.Int64)        // user: %36
  %32 = integer_literal $Builtin.Int64, 1         // user: %33
  %33 = struct $Int (%32 : $Builtin.Int64)        // user: %36
  %34 = metatype $@thin DefaultStringInterpolation.Type // user: %36
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %35 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %36
  %36 = apply %35(%31, %33, %34) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %37
  store %36 to %29 : $*DefaultStringInterpolation // id: %37
  %38 = string_literal utf8 "v: "                 // user: %43
  %39 = integer_literal $Builtin.Word, 3          // user: %43
  %40 = integer_literal $Builtin.Int1, -1         // user: %43
  %41 = metatype $@thin String.Type               // user: %43
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %42 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %43
  %43 = apply %42(%38, %39, %40, %41) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %48, %46
  %44 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %47, %46
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %45 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %46
  %46 = apply %45(%43, %44) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %44 : $*DefaultStringInterpolation   // id: %47
  release_value %43 : $String                     // id: %48
  %49 = begin_access [read] [dynamic] %5 : $*Int  // users: %50, %51
  %50 = load %49 : $*Int                          // user: %53
  end_access %49 : $*Int                          // id: %51
  %52 = alloc_stack $Int                          // users: %53, %58, %56
  store %50 to %52 : $*Int                        // id: %53
  %54 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 ""                    // user: %64
  %60 = integer_literal $Builtin.Word, 0          // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  release_value %64 : $String                     // id: %69
  %70 = load %29 : $*DefaultStringInterpolation   // users: %76, %71
  retain_value %70 : $DefaultStringInterpolation  // id: %71
  destroy_addr %29 : $*DefaultStringInterpolation // id: %72
  dealloc_stack %29 : $*DefaultStringInterpolation // id: %73
  %74 = metatype $@thin String.Type               // user: %76
  // function_ref String.init(stringInterpolation:)
  %75 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %76
  %76 = apply %75(%70, %74) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %78
  %77 = init_existential_addr %28 : $*Any, $String // user: %78
  store %76 to %77 : $*String                     // id: %78
  // function_ref default argument 1 of print(_:separator:terminator:)
  %79 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %80
  %80 = apply %79() : $@convention(thin) () -> @owned String // users: %86, %84
  // function_ref default argument 2 of print(_:separator:terminator:)
  %81 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %82
  %82 = apply %81() : $@convention(thin) () -> @owned String // users: %85, %84
  // function_ref print(_:separator:terminator:)
  %83 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %84
  %84 = apply %83(%26, %80, %82) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %82 : $String                     // id: %85
  release_value %80 : $String                     // id: %86
  release_value %26 : $Array<Any>                 // id: %87
  %88 = tuple ()                                  // user: %89
  return %88 : $()                                // id: %89
} // end sil function '$s4file3fooyyFyycfU3_'

// Array.init()
sil [serialized] [_semantics "array.init.empty"] @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>

// Array.reserveCapacity(_:)
sil [serialized] [_semantics "array.mutate_unknown"] @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()

// Bool.init(_builtinBooleanLiteral:)
sil public_external [transparent] [serialized] @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Builtin.Int1, %1 : $@thin Bool.Type):
  %2 = struct $Bool (%0 : $Builtin.Int1)          // user: %3
  return %2 : $Bool                               // id: %3
} // end sil function '$sSb22_builtinBooleanLiteralSbBi1__tcfC'

// default argument 0 of readLine(strippingNewline:)
sil shared_external [serialized] @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool {
bb0:
  %0 = integer_literal $Builtin.Int1, -1          // user: %1
  %1 = struct $Bool (%0 : $Builtin.Int1)          // user: %2
  return %1 : $Bool                               // id: %2
} // end sil function '$ss8readLine16strippingNewlineSSSgSb_tFfA_'

// readLine(strippingNewline:)
sil @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String>

// ~= infix<A>(_:_:)
sil public_external [transparent] [serialized] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <T where T : Equatable> (@in_guaranteed T, @in_guaranteed T) -> Bool {
// %0                                             // user: %4
// %1                                             // user: %4
bb0(%0 : $*T, %1 : $*T):
  %2 = metatype $@thick T.Type                    // user: %4
  %3 = witness_method $T, #Equatable."==" : <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %4
  %4 = apply %3<T>(%0, %1, %2) : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %5
  return %4 : $Bool                               // id: %5
} // end sil function '$ss2teoiySbx_xtSQRzlF'

// Array.append(_:)
sil [serialized] [_semantics "array.append_element"] @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()

// Collection.isEmpty.getter
sil [serialized] @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool

// static Bool.! prefix(_:)
sil public_external [transparent] [serialized] @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Bool, %1 : $@thin Bool.Type):
  %2 = struct_extract %0 : $Bool, #Bool._value    // user: %4
  %3 = integer_literal $Builtin.Int1, -1          // user: %4
  %4 = builtin "xor_Int1"(%2 : $Builtin.Int1, %3 : $Builtin.Int1) : $Builtin.Int1 // user: %5
  %5 = struct $Bool (%4 : $Builtin.Int1)          // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sSb1nopyS2bFZ'

// RangeReplaceableCollection<>.removeLast()
sil [serialized] @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element

// BidirectionalCollection.last.getter
sil [serialized] @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>

// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
sil shared_external [transparent] [serialized] [thunk] @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thick Optional<τ_0_0>.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Optional<τ_0_0>, %1 : $*Optional<τ_0_0>, %2 : $@thick Optional<τ_0_0>.Type):
  %3 = metatype $@thin Optional<τ_0_0>.Type      // user: %5
  // function_ref static Optional<A>.== infix(_:_:)
  %4 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %5
  %5 = apply %4<τ_0_0>(%0, %1, %3) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW'

// static Optional<A>.== infix(_:_:)
sil [serialized] @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool

sil_vtable Empty {
  #Empty.init!allocator: (Empty.Type) -> () -> Empty : @$s4file5EmptyCACycfC	// Empty.__allocating_init()
  #Empty.deinit!deallocator: @$s4file5EmptyCfD	// Empty.__deallocating_deinit
}

sil_vtable Number {
  #Number.init!allocator: (Number.Type) -> (Int) -> Number : @$s4file6NumberC6numberACSi_tcfC	// Number.__allocating_init(number:)
  #Number.deinit!deallocator: @$s4file6NumberCfD	// Number.__deallocating_deinit
}

sil_vtable Closure {
  #Closure.init!allocator: (Closure.Type) -> (@escaping () -> ()) -> Closure : @$s4file7ClosureCyACyyccfC	// Closure.__allocating_init(_:)
  #Closure.deinit!deallocator: @$s4file7ClosureCfD	// Closure.__deallocating_deinit
}

sil_witness_table public_external [serialized] <Wrapped where Wrapped : Equatable> Optional<Wrapped>: Equatable module Swift {
  method #Equatable."==": <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW	// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
  conditional_conformance (Wrapped: Equatable): dependent
}



*** SIL module before Rest of Onone ***
sil_stage canonical

import Builtin
import Swift
import SwiftShims

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

// Empty.foo()
sil hidden @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4file5EmptyC3fooyyF'

// Empty.deinit
sil hidden @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Empty to $Builtin.NativeObject // user: %3
  return %2 : $Builtin.NativeObject               // id: %3
} // end sil function '$s4file5EmptyCfd'

// Empty.__deallocating_deinit
sil hidden @$s4file5EmptyCfD : $@convention(method) (@owned Empty) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  // function_ref Empty.deinit
  %2 = function_ref @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Empty // user: %5
  dealloc_ref %4 : $Empty                         // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4file5EmptyCfD'

// Empty.__allocating_init()
sil hidden [exact_self_class] @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty {
// %0 "$metatype"
bb0(%0 : $@thick Empty.Type):
  %1 = alloc_ref $Empty                           // user: %3
  // function_ref Empty.init()
  %2 = function_ref @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Empty) -> @owned Empty // user: %4
  return %3 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfC'

// Empty.init()
sil hidden @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  return %0 : $Empty                              // id: %2
} // end sil function '$s4file5EmptyCACycfc'

// Number.number.getter
sil hidden [transparent] @$s4file6NumberC6numberSivg : $@convention(method) (@guaranteed Number) -> Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*Int   // users: %4, %5
  %4 = load %3 : $*Int                            // user: %6
  end_access %3 : $*Int                           // id: %5
  return %4 : $Int                                // id: %6
} // end sil function '$s4file6NumberC6numberSivg'

// Number.number.setter
sil hidden [transparent] @$s4file6NumberC6numberSivs : $@convention(method) (Int, @guaranteed Number) -> () {
// %0 "value"                                     // users: %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : $Number):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to %5 : $*Int                          // id: %6
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9
} // end sil function '$s4file6NumberC6numberSivs'

// Number.number.modify
sil hidden [transparent] @$s4file6NumberC6numberSivM : $@yield_once @convention(method) (@guaranteed Number) -> @yields @inout Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*Int // users: %5, %8, %4
  yield %3 : $*Int, resume bb1, unwind bb2        // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file6NumberC6numberSivM'

// Number.__allocating_init(number:)
sil hidden [exact_self_class] @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number {
// %0 "number"                                    // user: %4
// %1 "$metatype"
bb0(%0 : $Int, %1 : $@thick Number.Type):
  %2 = alloc_ref $Number                          // user: %4
  // function_ref Number.init(number:)
  %3 = function_ref @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (Int, @owned Number) -> @owned Number // user: %5
  return %4 : $Number                             // id: %5
} // end sil function '$s4file6NumberC6numberACSi_tcfC'

// Number.init(number:)
sil hidden @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %6, %2
// %1 "self"                                      // users: %8, %4, %3
bb0(%0 : $Int, %1 : $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to %5 : $*Int                          // id: %6
  end_access %5 : $*Int                           // id: %7
  return %1 : $Number                             // id: %8
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

// Number.deinit
sil hidden @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Number to $Builtin.NativeObject // user: %3
  return %2 : $Builtin.NativeObject               // id: %3
} // end sil function '$s4file6NumberCfd'

// Number.__deallocating_deinit
sil hidden @$s4file6NumberCfD : $@convention(method) (@owned Number) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  // function_ref Number.deinit
  %2 = function_ref @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Number // user: %5
  dealloc_ref %4 : $Number                        // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4file6NumberCfD'

// Closure.closure.getter
sil hidden [transparent] @$s4file7ClosureC7closureyycvg : $@convention(method) (@guaranteed Closure) -> @owned @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %4, %6
  %4 = load %3 : $*@callee_guaranteed () -> ()    // users: %7, %5
  strong_retain %4 : $@callee_guaranteed () -> () // id: %5
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %6
  return %4 : $@callee_guaranteed () -> ()        // id: %7
} // end sil function '$s4file7ClosureC7closureyycvg'

// Closure.closure.setter
sil hidden [transparent] @$s4file7ClosureC7closureyycvs : $@convention(method) (@owned @callee_guaranteed () -> (), @guaranteed Closure) -> () {
// %0 "value"                                     // users: %11, %8, %4, %2
// %1 "self"                                      // users: %5, %3
bb0(%0 : $@callee_guaranteed () -> (), %1 : $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "value", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  strong_retain %0 : $@callee_guaranteed () -> () // id: %4
  %5 = ref_element_addr %1 : $Closure, #Closure.closure // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*@callee_guaranteed () -> () // users: %8, %7, %10
  %7 = load %6 : $*@callee_guaranteed () -> ()    // user: %9
  store %0 to %6 : $*@callee_guaranteed () -> ()  // id: %8
  strong_release %7 : $@callee_guaranteed () -> () // id: %9
  end_access %6 : $*@callee_guaranteed () -> ()   // id: %10
  strong_release %0 : $@callee_guaranteed () -> () // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file7ClosureC7closureyycvs'

// Closure.closure.modify
sil hidden [transparent] @$s4file7ClosureC7closureyycvM : $@yield_once @convention(method) (@guaranteed Closure) -> @yields @inout @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %8, %4
  yield %3 : $*@callee_guaranteed () -> (), resume bb1, unwind bb2 // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file7ClosureC7closureyycvM'

// Closure.__allocating_init(_:)
sil hidden [exact_self_class] @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure {
// %0 "block"                                     // user: %4
// %1 "$metatype"
bb0(%0 : $@callee_guaranteed () -> (), %1 : $@thick Closure.Type):
  %2 = alloc_ref $Closure                         // user: %4
  // function_ref Closure.init(_:)
  %3 = function_ref @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %5
  return %4 : $Closure                            // id: %5
} // end sil function '$s4file7ClosureCyACyyccfC'

// Closure.init(_:)
sil hidden @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %9, %7, %4, %2
// %1 "self"                                      // users: %10, %5, %3
bb0(%0 : $@callee_guaranteed () -> (), %1 : $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  strong_retain %0 : $@callee_guaranteed () -> () // id: %4
  %5 = ref_element_addr %1 : $Closure, #Closure.closure // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*@callee_guaranteed () -> () // users: %7, %8
  store %0 to %6 : $*@callee_guaranteed () -> ()  // id: %7
  end_access %6 : $*@callee_guaranteed () -> ()   // id: %8
  strong_release %0 : $@callee_guaranteed () -> () // id: %9
  return %1 : $Closure                            // id: %10
} // end sil function '$s4file7ClosureCyACyyccfc'

// Closure.deinit
sil hidden @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %6, %2, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [deinit] [static] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  destroy_addr %3 : $*@callee_guaranteed () -> () // id: %4
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = unchecked_ref_cast %0 : $Closure to $Builtin.NativeObject // user: %7
  return %6 : $Builtin.NativeObject               // id: %7
} // end sil function '$s4file7ClosureCfd'

// Closure.__deallocating_deinit
sil hidden @$s4file7ClosureCfD : $@convention(method) (@owned Closure) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  // function_ref Closure.deinit
  %2 = function_ref @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Closure // user: %5
  dealloc_ref %4 : $Closure                       // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4file7ClosureCfD'

// foo()
sil hidden @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %573, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %572, %100, %98, %96, %93, %92, %88, %86, %85, %82, %81, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %11
  %8 = integer_literal $Builtin.Int64, 0          // user: %9
  %9 = struct $Int (%8 : $Builtin.Int64)          // user: %11
  // function_ref Number.__allocating_init(number:)
  %10 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %11
  %11 = apply %10(%9, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %571, %101, %98, %95, %91, %90, %89, %86, %84, %80, %79, %78, %76, %74, %72, %71, %70, %68, %67, %65, %64, %12
  debug_value %11 : $Number, let, name "number"   // id: %12
  %13 = integer_literal $Builtin.Word, 1          // user: %15
  // function_ref _allocateUninitializedArray<A>(_:)
  %14 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %15
  %15 = apply %14<Any>(%13) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %17, %16
  %16 = tuple_extract %15 : $(Array<Any>, Builtin.RawPointer), 0 // users: %35, %32
  %17 = tuple_extract %15 : $(Array<Any>, Builtin.RawPointer), 1 // user: %18
  %18 = pointer_to_address %17 : $Builtin.RawPointer to [strict] $*Any // user: %25
  %19 = string_literal utf8 "===== Did init"      // user: %24
  %20 = integer_literal $Builtin.Word, 14         // user: %24
  %21 = integer_literal $Builtin.Int1, -1         // user: %24
  %22 = metatype $@thin String.Type               // user: %24
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %23 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %24
  %24 = apply %23(%19, %20, %21, %22) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %25 = init_existential_addr %18 : $*Any, $String // user: %26
  store %24 to %25 : $*String                     // id: %26
  // function_ref default argument 1 of print(_:separator:terminator:)
  %27 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %28
  %28 = apply %27() : $@convention(thin) () -> @owned String // users: %34, %32
  // function_ref default argument 2 of print(_:separator:terminator:)
  %29 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %30
  %30 = apply %29() : $@convention(thin) () -> @owned String // users: %33, %32
  // function_ref print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %32
  %32 = apply %31(%16, %28, %30) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %30 : $String                     // id: %33
  release_value %28 : $String                     // id: %34
  release_value %16 : $Array<Any>                 // id: %35
  %36 = integer_literal $Builtin.Word, 1          // user: %38
  // function_ref _allocateUninitializedArray<A>(_:)
  %37 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %38
  %38 = apply %37<Any>(%36) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %40, %39
  %39 = tuple_extract %38 : $(Array<Any>, Builtin.RawPointer), 0 // users: %58, %55
  %40 = tuple_extract %38 : $(Array<Any>, Builtin.RawPointer), 1 // user: %41
  %41 = pointer_to_address %40 : $Builtin.RawPointer to [strict] $*Any // user: %48
  %42 = string_literal utf8 "===== Did hook"      // user: %47
  %43 = integer_literal $Builtin.Word, 14         // user: %47
  %44 = integer_literal $Builtin.Int1, -1         // user: %47
  %45 = metatype $@thin String.Type               // user: %47
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %46 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %47
  %47 = apply %46(%42, %43, %44, %45) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %49
  %48 = init_existential_addr %41 : $*Any, $String // user: %49
  store %47 to %48 : $*String                     // id: %49
  // function_ref default argument 1 of print(_:separator:terminator:)
  %50 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %51
  %51 = apply %50() : $@convention(thin) () -> @owned String // users: %57, %55
  // function_ref default argument 2 of print(_:separator:terminator:)
  %52 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %53
  %53 = apply %52() : $@convention(thin) () -> @owned String // users: %56, %55
  // function_ref print(_:separator:terminator:)
  %54 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %55
  %55 = apply %54(%39, %51, %53) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %53 : $String                     // id: %56
  release_value %51 : $String                     // id: %57
  release_value %39 : $Array<Any>                 // id: %58
  %59 = alloc_box ${ var Int }, var, name "value" // users: %570, %98, %97, %76, %75, %60
  %60 = project_box %59 : ${ var Int }, 0         // users: %63, %412
  %61 = integer_literal $Builtin.Int64, 0         // user: %62
  %62 = struct $Int (%61 : $Builtin.Int64)        // user: %63
  store %62 to %60 : $*Int                        // id: %63
  strong_retain %11 : $Number                     // id: %64
  debug_value %11 : $Number, let, name "number"   // id: %65
  // function_ref closure #2 in foo()
  %66 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %68
  strong_retain %11 : $Number                     // id: %67
  %68 = partial_apply [callee_guaranteed] %66(%11) : $@convention(thin) (@guaranteed Number) -> () // users: %569, %222, %220, %69
  debug_value %68 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %69
  strong_release %11 : $Number                    // id: %70
  strong_retain %11 : $Number                     // id: %71
  debug_value %11 : $Number, let, name "number"   // id: %72
  // function_ref closure #3 in foo()
  %73 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %76
  strong_retain %11 : $Number                     // id: %74
  strong_retain %59 : ${ var Int }                // id: %75
  %76 = partial_apply [callee_guaranteed] %73(%11, %59) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %568, %257, %255, %77
  debug_value %76 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %77
  strong_release %11 : $Number                    // id: %78
  strong_retain %11 : $Number                     // id: %79
  debug_value %11 : $Number, let, name "number"   // id: %80
  strong_retain %5 : $Empty                       // id: %81
  debug_value %5 : $Empty, let, name "empty"      // id: %82
  // function_ref closure #4 in foo()
  %83 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %86
  strong_retain %11 : $Number                     // id: %84
  strong_retain %5 : $Empty                       // id: %85
  %86 = partial_apply [callee_guaranteed] %83(%11, %5) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %567, %292, %290, %87
  debug_value %86 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %87
  strong_release %5 : $Empty                      // id: %88
  strong_release %11 : $Number                    // id: %89
  strong_retain %11 : $Number                     // id: %90
  debug_value %11 : $Number, let, name "number"   // id: %91
  strong_retain %5 : $Empty                       // id: %92
  debug_value %5 : $Empty, let, name "empty"      // id: %93
  // function_ref closure #5 in foo()
  %94 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %98
  strong_retain %11 : $Number                     // id: %95
  strong_retain %5 : $Empty                       // id: %96
  strong_retain %59 : ${ var Int }                // id: %97
  %98 = partial_apply [callee_guaranteed] %94(%11, %5, %59) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %566, %327, %325, %99
  debug_value %98 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %99
  strong_release %5 : $Empty                      // id: %100
  strong_release %11 : $Number                    // id: %101
  %102 = integer_literal $Builtin.Word, 1         // user: %104
  // function_ref _allocateUninitializedArray<A>(_:)
  %103 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %104
  %104 = apply %103<Any>(%102) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %106, %105
  %105 = tuple_extract %104 : $(Array<Any>, Builtin.RawPointer), 0 // users: %124, %121
  %106 = tuple_extract %104 : $(Array<Any>, Builtin.RawPointer), 1 // user: %107
  %107 = pointer_to_address %106 : $Builtin.RawPointer to [strict] $*Any // user: %114
  %108 = string_literal utf8 "===== Did init closures" // user: %113
  %109 = integer_literal $Builtin.Word, 23        // user: %113
  %110 = integer_literal $Builtin.Int1, -1        // user: %113
  %111 = metatype $@thin String.Type              // user: %113
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %112 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %113
  %113 = apply %112(%108, %109, %110, %111) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %115
  %114 = init_existential_addr %107 : $*Any, $String // user: %115
  store %113 to %114 : $*String                   // id: %115
  // function_ref default argument 1 of print(_:separator:terminator:)
  %116 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %117
  %117 = apply %116() : $@convention(thin) () -> @owned String // users: %123, %121
  // function_ref default argument 2 of print(_:separator:terminator:)
  %118 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %119
  %119 = apply %118() : $@convention(thin) () -> @owned String // users: %122, %121
  // function_ref print(_:separator:terminator:)
  %120 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %121
  %121 = apply %120(%105, %117, %119) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %119 : $String                    // id: %122
  release_value %117 : $String                    // id: %123
  release_value %105 : $Array<Any>                // id: %124
  %125 = alloc_stack $Array<Closure>, var, name "storage" // users: %129, %565, %564, %132, %225, %260, %295, %330, %359, %378, %448
  %126 = metatype $@thin Array<Closure>.Type      // user: %128
  // function_ref Array.init()
  %127 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %128
  %128 = apply %127<Closure>(%126) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %129
  store %128 to %125 : $*Array<Closure>           // id: %129
  %130 = integer_literal $Builtin.Int64, 100      // user: %131
  %131 = struct $Int (%130 : $Builtin.Int64)      // user: %134
  %132 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %135, %134
  // function_ref Array.reserveCapacity(_:)
  %133 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %134
  %134 = apply %133<Closure>(%131, %132) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %132 : $*Array<Closure>              // id: %135
  %136 = integer_literal $Builtin.Word, 1         // user: %138
  // function_ref _allocateUninitializedArray<A>(_:)
  %137 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %138
  %138 = apply %137<Any>(%136) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %140, %139
  %139 = tuple_extract %138 : $(Array<Any>, Builtin.RawPointer), 0 // users: %158, %155
  %140 = tuple_extract %138 : $(Array<Any>, Builtin.RawPointer), 1 // user: %141
  %141 = pointer_to_address %140 : $Builtin.RawPointer to [strict] $*Any // user: %148
  %142 = string_literal utf8 "===== Did init array" // user: %147
  %143 = integer_literal $Builtin.Word, 20        // user: %147
  %144 = integer_literal $Builtin.Int1, -1        // user: %147
  %145 = metatype $@thin String.Type              // user: %147
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %146 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %147
  %147 = apply %146(%142, %143, %144, %145) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %149
  %148 = init_existential_addr %141 : $*Any, $String // user: %149
  store %147 to %148 : $*String                   // id: %149
  // function_ref default argument 1 of print(_:separator:terminator:)
  %150 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %151
  %151 = apply %150() : $@convention(thin) () -> @owned String // users: %157, %155
  // function_ref default argument 2 of print(_:separator:terminator:)
  %152 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %153
  %153 = apply %152() : $@convention(thin) () -> @owned String // users: %156, %155
  // function_ref print(_:separator:terminator:)
  %154 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %155
  %155 = apply %154(%139, %151, %153) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %153 : $String                    // id: %156
  release_value %151 : $String                    // id: %157
  release_value %139 : $Array<Any>                // id: %158
  %159 = alloc_stack $Bool, var, name "run"       // users: %162, %563, %164, %509
  %160 = integer_literal $Builtin.Int1, -1        // user: %161
  %161 = struct $Bool (%160 : $Builtin.Int1)      // user: %162
  store %161 to %159 : $*Bool                     // id: %162
  br bb1                                          // id: %163

bb1:                                              // Preds: bb25 bb0
  %164 = begin_access [read] [static] %159 : $*Bool // users: %165, %167
  %165 = struct_element_addr %164 : $*Bool, #Bool._value // user: %166
  %166 = load %165 : $*Builtin.Int1               // user: %168
  end_access %164 : $*Bool                        // id: %167
  cond_br %166, bb2, bb26                         // id: %168

bb2:                                              // Preds: bb1
  %169 = integer_literal $Builtin.Word, 1         // user: %171
  // function_ref _allocateUninitializedArray<A>(_:)
  %170 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %171
  %171 = apply %170<Any>(%169) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %173, %172
  %172 = tuple_extract %171 : $(Array<Any>, Builtin.RawPointer), 0 // users: %191, %188
  %173 = tuple_extract %171 : $(Array<Any>, Builtin.RawPointer), 1 // user: %174
  %174 = pointer_to_address %173 : $Builtin.RawPointer to [strict] $*Any // user: %181
  %175 = string_literal utf8 "===== Ask"          // user: %180
  %176 = integer_literal $Builtin.Word, 9         // user: %180
  %177 = integer_literal $Builtin.Int1, -1        // user: %180
  %178 = metatype $@thin String.Type              // user: %180
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %179 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %180
  %180 = apply %179(%175, %176, %177, %178) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %182
  %181 = init_existential_addr %174 : $*Any, $String // user: %182
  store %180 to %181 : $*String                   // id: %182
  // function_ref default argument 1 of print(_:separator:terminator:)
  %183 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %184
  %184 = apply %183() : $@convention(thin) () -> @owned String // users: %190, %188
  // function_ref default argument 2 of print(_:separator:terminator:)
  %185 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %186
  %186 = apply %185() : $@convention(thin) () -> @owned String // users: %189, %188
  // function_ref print(_:separator:terminator:)
  %187 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %188
  %188 = apply %187(%172, %184, %186) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %186 : $String                    // id: %189
  release_value %184 : $String                    // id: %190
  release_value %172 : $Array<Any>                // id: %191
  // function_ref default argument 0 of readLine(strippingNewline:)
  %192 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %193
  %193 = apply %192() : $@convention(thin) () -> Bool // user: %195
  // function_ref readLine(strippingNewline:)
  %194 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %195
  %195 = apply %194(%193) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %538, %513, %506, %497, %486, %485, %484, %447, %438, %427, %426, %425, %410, %401, %390, %389, %387, %358, %349, %338, %337, %336, %323, %314, %303, %302, %301, %288, %279, %268, %267, %266, %253, %244, %233, %232, %231, %218, %209, %198, %197, %196
  debug_value %195 : $Optional<String>, let, name "line" // id: %196
  retain_value %195 : $Optional<String>           // id: %197
  debug_value %195 : $Optional<String>, let, name "$match" // id: %198
  %199 = string_literal utf8 "push1"              // user: %204
  %200 = integer_literal $Builtin.Word, 5         // user: %204
  %201 = integer_literal $Builtin.Int1, -1        // user: %204
  %202 = metatype $@thin String.Type              // user: %204
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %203 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %204
  %204 = apply %203(%199, %200, %201, %202) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %205
  %205 = enum $Optional<String>, #Optional.some!enumelt, %204 : $String // user: %207
  %206 = alloc_stack $Optional<String>            // users: %207, %212, %215, %214
  store %205 to %206 : $*Optional<String>         // id: %207
  %208 = alloc_stack $Optional<String>            // users: %209, %212, %213
  store %195 to %208 : $*Optional<String>         // id: %209
  %210 = metatype $@thin Optional<String>.Type    // user: %212
  // function_ref static Optional<A>.== infix(_:_:)
  %211 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %212
  %212 = apply %211<String>(%206, %208, %210) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %216
  dealloc_stack %208 : $*Optional<String>         // id: %213
  destroy_addr %206 : $*Optional<String>          // id: %214
  dealloc_stack %206 : $*Optional<String>         // id: %215
  %216 = struct_extract %212 : $Bool, #Bool._value // user: %217
  cond_br %216, bb3, bb4                          // id: %217

bb3:                                              // Preds: bb2
  release_value %195 : $Optional<String>          // id: %218
  %219 = metatype $@thick Closure.Type            // user: %222
  strong_retain %68 : $@callee_guaranteed () -> () // id: %220
  // function_ref Closure.__allocating_init(_:)
  %221 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %222
  %222 = apply %221(%68, %219) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %224
  %223 = alloc_stack $Closure                     // users: %224, %229, %227
  store %222 to %223 : $*Closure                  // id: %224
  %225 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %228, %227
  // function_ref Array.append(_:)
  %226 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %227
  %227 = apply %226<Closure>(%223, %225) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %225 : $*Array<Closure>              // id: %228
  dealloc_stack %223 : $*Closure                  // id: %229
  br bb25                                         // id: %230

bb4:                                              // Preds: bb2
  release_value %195 : $Optional<String>          // id: %231
  retain_value %195 : $Optional<String>           // id: %232
  debug_value %195 : $Optional<String>, let, name "$match" // id: %233
  %234 = string_literal utf8 "push1_1"            // user: %239
  %235 = integer_literal $Builtin.Word, 7         // user: %239
  %236 = integer_literal $Builtin.Int1, -1        // user: %239
  %237 = metatype $@thin String.Type              // user: %239
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %238 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %239
  %239 = apply %238(%234, %235, %236, %237) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %240
  %240 = enum $Optional<String>, #Optional.some!enumelt, %239 : $String // user: %242
  %241 = alloc_stack $Optional<String>            // users: %242, %247, %250, %249
  store %240 to %241 : $*Optional<String>         // id: %242
  %243 = alloc_stack $Optional<String>            // users: %244, %247, %248
  store %195 to %243 : $*Optional<String>         // id: %244
  %245 = metatype $@thin Optional<String>.Type    // user: %247
  // function_ref static Optional<A>.== infix(_:_:)
  %246 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %247
  %247 = apply %246<String>(%241, %243, %245) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %251
  dealloc_stack %243 : $*Optional<String>         // id: %248
  destroy_addr %241 : $*Optional<String>          // id: %249
  dealloc_stack %241 : $*Optional<String>         // id: %250
  %251 = struct_extract %247 : $Bool, #Bool._value // user: %252
  cond_br %251, bb5, bb6                          // id: %252

bb5:                                              // Preds: bb4
  release_value %195 : $Optional<String>          // id: %253
  %254 = metatype $@thick Closure.Type            // user: %257
  strong_retain %76 : $@callee_guaranteed () -> () // id: %255
  // function_ref Closure.__allocating_init(_:)
  %256 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %257
  %257 = apply %256(%76, %254) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %259
  %258 = alloc_stack $Closure                     // users: %259, %264, %262
  store %257 to %258 : $*Closure                  // id: %259
  %260 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %263, %262
  // function_ref Array.append(_:)
  %261 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %262
  %262 = apply %261<Closure>(%258, %260) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %260 : $*Array<Closure>              // id: %263
  dealloc_stack %258 : $*Closure                  // id: %264
  br bb25                                         // id: %265

bb6:                                              // Preds: bb4
  release_value %195 : $Optional<String>          // id: %266
  retain_value %195 : $Optional<String>           // id: %267
  debug_value %195 : $Optional<String>, let, name "$match" // id: %268
  %269 = string_literal utf8 "push2"              // user: %274
  %270 = integer_literal $Builtin.Word, 5         // user: %274
  %271 = integer_literal $Builtin.Int1, -1        // user: %274
  %272 = metatype $@thin String.Type              // user: %274
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %273 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %274
  %274 = apply %273(%269, %270, %271, %272) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %275
  %275 = enum $Optional<String>, #Optional.some!enumelt, %274 : $String // user: %277
  %276 = alloc_stack $Optional<String>            // users: %277, %282, %285, %284
  store %275 to %276 : $*Optional<String>         // id: %277
  %278 = alloc_stack $Optional<String>            // users: %279, %282, %283
  store %195 to %278 : $*Optional<String>         // id: %279
  %280 = metatype $@thin Optional<String>.Type    // user: %282
  // function_ref static Optional<A>.== infix(_:_:)
  %281 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %282
  %282 = apply %281<String>(%276, %278, %280) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %286
  dealloc_stack %278 : $*Optional<String>         // id: %283
  destroy_addr %276 : $*Optional<String>          // id: %284
  dealloc_stack %276 : $*Optional<String>         // id: %285
  %286 = struct_extract %282 : $Bool, #Bool._value // user: %287
  cond_br %286, bb7, bb8                          // id: %287

bb7:                                              // Preds: bb6
  release_value %195 : $Optional<String>          // id: %288
  %289 = metatype $@thick Closure.Type            // user: %292
  strong_retain %86 : $@callee_guaranteed () -> () // id: %290
  // function_ref Closure.__allocating_init(_:)
  %291 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %292
  %292 = apply %291(%86, %289) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %294
  %293 = alloc_stack $Closure                     // users: %294, %299, %297
  store %292 to %293 : $*Closure                  // id: %294
  %295 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %298, %297
  // function_ref Array.append(_:)
  %296 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %297
  %297 = apply %296<Closure>(%293, %295) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %295 : $*Array<Closure>              // id: %298
  dealloc_stack %293 : $*Closure                  // id: %299
  br bb25                                         // id: %300

bb8:                                              // Preds: bb6
  release_value %195 : $Optional<String>          // id: %301
  retain_value %195 : $Optional<String>           // id: %302
  debug_value %195 : $Optional<String>, let, name "$match" // id: %303
  %304 = string_literal utf8 "push2_1"            // user: %309
  %305 = integer_literal $Builtin.Word, 7         // user: %309
  %306 = integer_literal $Builtin.Int1, -1        // user: %309
  %307 = metatype $@thin String.Type              // user: %309
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %308 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %309
  %309 = apply %308(%304, %305, %306, %307) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %310
  %310 = enum $Optional<String>, #Optional.some!enumelt, %309 : $String // user: %312
  %311 = alloc_stack $Optional<String>            // users: %312, %317, %320, %319
  store %310 to %311 : $*Optional<String>         // id: %312
  %313 = alloc_stack $Optional<String>            // users: %314, %317, %318
  store %195 to %313 : $*Optional<String>         // id: %314
  %315 = metatype $@thin Optional<String>.Type    // user: %317
  // function_ref static Optional<A>.== infix(_:_:)
  %316 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %317
  %317 = apply %316<String>(%311, %313, %315) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %321
  dealloc_stack %313 : $*Optional<String>         // id: %318
  destroy_addr %311 : $*Optional<String>          // id: %319
  dealloc_stack %311 : $*Optional<String>         // id: %320
  %321 = struct_extract %317 : $Bool, #Bool._value // user: %322
  cond_br %321, bb9, bb10                         // id: %322

bb9:                                              // Preds: bb8
  release_value %195 : $Optional<String>          // id: %323
  %324 = metatype $@thick Closure.Type            // user: %327
  strong_retain %98 : $@callee_guaranteed () -> () // id: %325
  // function_ref Closure.__allocating_init(_:)
  %326 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %327
  %327 = apply %326(%98, %324) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %329
  %328 = alloc_stack $Closure                     // users: %329, %334, %332
  store %327 to %328 : $*Closure                  // id: %329
  %330 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %333, %332
  // function_ref Array.append(_:)
  %331 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %332
  %332 = apply %331<Closure>(%328, %330) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %330 : $*Array<Closure>              // id: %333
  dealloc_stack %328 : $*Closure                  // id: %334
  br bb25                                         // id: %335

bb10:                                             // Preds: bb8
  release_value %195 : $Optional<String>          // id: %336
  retain_value %195 : $Optional<String>           // id: %337
  debug_value %195 : $Optional<String>, let, name "$match" // id: %338
  %339 = string_literal utf8 "pop"                // user: %344
  %340 = integer_literal $Builtin.Word, 3         // user: %344
  %341 = integer_literal $Builtin.Int1, -1        // user: %344
  %342 = metatype $@thin String.Type              // user: %344
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %343 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %344
  %344 = apply %343(%339, %340, %341, %342) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %345
  %345 = enum $Optional<String>, #Optional.some!enumelt, %344 : $String // user: %347
  %346 = alloc_stack $Optional<String>            // users: %347, %352, %355, %354
  store %345 to %346 : $*Optional<String>         // id: %347
  %348 = alloc_stack $Optional<String>            // users: %349, %352, %353
  store %195 to %348 : $*Optional<String>         // id: %349
  %350 = metatype $@thin Optional<String>.Type    // user: %352
  // function_ref static Optional<A>.== infix(_:_:)
  %351 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %352
  %352 = apply %351<String>(%346, %348, %350) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %356
  dealloc_stack %348 : $*Optional<String>         // id: %353
  destroy_addr %346 : $*Optional<String>          // id: %354
  dealloc_stack %346 : $*Optional<String>         // id: %355
  %356 = struct_extract %352 : $Bool, #Bool._value // user: %357
  cond_br %356, bb11, bb14                        // id: %357

bb11:                                             // Preds: bb10
  release_value %195 : $Optional<String>          // id: %358
  %359 = begin_access [read] [static] %125 : $*Array<Closure> // users: %360, %362
  %360 = load %359 : $*Array<Closure>             // users: %371, %364, %361
  retain_value %360 : $Array<Closure>             // id: %361
  end_access %359 : $*Array<Closure>              // id: %362
  %363 = alloc_stack $Array<Closure>              // users: %365, %364, %375
  store %360 to %363 : $*Array<Closure>           // id: %364
  %365 = load %363 : $*Array<Closure>             // user: %367
  %366 = alloc_stack $Array<Closure>              // users: %367, %370, %369
  store %365 to %366 : $*Array<Closure>           // id: %367
  // function_ref Collection.isEmpty.getter
  %368 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %369
  %369 = apply %368<[Closure]>(%366) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %372
  dealloc_stack %366 : $*Array<Closure>           // id: %370
  release_value %360 : $Array<Closure>            // id: %371
  %372 = struct_extract %369 : $Bool, #Bool._value // user: %374
  %373 = integer_literal $Builtin.Int1, -1        // user: %374
  %374 = builtin "xor_Int1"(%372 : $Builtin.Int1, %373 : $Builtin.Int1) : $Builtin.Int1 // user: %376
  dealloc_stack %363 : $*Array<Closure>           // id: %375
  cond_br %374, bb12, bb13                        // id: %376

bb12:                                             // Preds: bb11
  %377 = alloc_stack $Closure                     // users: %382, %384, %380
  %378 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %381, %380
  // function_ref RangeReplaceableCollection<>.removeLast()
  %379 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %380
  %380 = apply %379<[Closure]>(%377, %378) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %378 : $*Array<Closure>              // id: %381
  %382 = load %377 : $*Closure                    // user: %383
  strong_release %382 : $Closure                  // id: %383
  dealloc_stack %377 : $*Closure                  // id: %384
  br bb25                                         // id: %385

bb13:                                             // Preds: bb11
  br bb15                                         // id: %386

bb14:                                             // Preds: bb10
  release_value %195 : $Optional<String>          // id: %387
  br bb15                                         // id: %388

bb15:                                             // Preds: bb13 bb14
  retain_value %195 : $Optional<String>           // id: %389
  debug_value %195 : $Optional<String>, let, name "$match" // id: %390
  %391 = string_literal utf8 "inc"                // user: %396
  %392 = integer_literal $Builtin.Word, 3         // user: %396
  %393 = integer_literal $Builtin.Int1, -1        // user: %396
  %394 = metatype $@thin String.Type              // user: %396
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %395 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %396
  %396 = apply %395(%391, %392, %393, %394) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %397
  %397 = enum $Optional<String>, #Optional.some!enumelt, %396 : $String // user: %399
  %398 = alloc_stack $Optional<String>            // users: %399, %404, %407, %406
  store %397 to %398 : $*Optional<String>         // id: %399
  %400 = alloc_stack $Optional<String>            // users: %401, %404, %405
  store %195 to %400 : $*Optional<String>         // id: %401
  %402 = metatype $@thin Optional<String>.Type    // user: %404
  // function_ref static Optional<A>.== infix(_:_:)
  %403 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %404
  %404 = apply %403<String>(%398, %400, %402) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %408
  dealloc_stack %400 : $*Optional<String>         // id: %405
  destroy_addr %398 : $*Optional<String>          // id: %406
  dealloc_stack %398 : $*Optional<String>         // id: %407
  %408 = struct_extract %404 : $Bool, #Bool._value // user: %409
  cond_br %408, bb16, bb17                        // id: %409

bb16:                                             // Preds: bb15
  release_value %195 : $Optional<String>          // id: %410
  %411 = integer_literal $Builtin.Int64, 1        // user: %416
  %412 = begin_access [modify] [dynamic] %60 : $*Int // users: %421, %413, %423
  %413 = struct_element_addr %412 : $*Int, #Int._value // user: %414
  %414 = load %413 : $*Builtin.Int64              // user: %416
  %415 = integer_literal $Builtin.Int1, -1        // user: %416
  %416 = builtin "sadd_with_overflow_Int64"(%414 : $Builtin.Int64, %411 : $Builtin.Int64, %415 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %418, %417
  %417 = tuple_extract %416 : $(Builtin.Int64, Builtin.Int1), 0 // user: %420
  %418 = tuple_extract %416 : $(Builtin.Int64, Builtin.Int1), 1 // user: %419
  cond_fail %418 : $Builtin.Int1, "arithmetic overflow" // id: %419
  %420 = struct $Int (%417 : $Builtin.Int64)      // user: %421
  store %420 to %412 : $*Int                      // id: %421
  %422 = tuple ()
  end_access %412 : $*Int                         // id: %423
  br bb25                                         // id: %424

bb17:                                             // Preds: bb15
  release_value %195 : $Optional<String>          // id: %425
  retain_value %195 : $Optional<String>           // id: %426
  debug_value %195 : $Optional<String>, let, name "$match" // id: %427
  %428 = string_literal utf8 "exec"               // user: %433
  %429 = integer_literal $Builtin.Word, 4         // user: %433
  %430 = integer_literal $Builtin.Int1, -1        // user: %433
  %431 = metatype $@thin String.Type              // user: %433
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %432 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %433
  %433 = apply %432(%428, %429, %430, %431) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %434
  %434 = enum $Optional<String>, #Optional.some!enumelt, %433 : $String // user: %436
  %435 = alloc_stack $Optional<String>            // users: %436, %441, %444, %443
  store %434 to %435 : $*Optional<String>         // id: %436
  %437 = alloc_stack $Optional<String>            // users: %438, %441, %442
  store %195 to %437 : $*Optional<String>         // id: %438
  %439 = metatype $@thin Optional<String>.Type    // user: %441
  // function_ref static Optional<A>.== infix(_:_:)
  %440 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %441
  %441 = apply %440<String>(%435, %437, %439) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %445
  dealloc_stack %437 : $*Optional<String>         // id: %442
  destroy_addr %435 : $*Optional<String>          // id: %443
  dealloc_stack %435 : $*Optional<String>         // id: %444
  %445 = struct_extract %441 : $Bool, #Bool._value // user: %446
  cond_br %445, bb18, bb22                        // id: %446

bb18:                                             // Preds: bb17
  release_value %195 : $Optional<String>          // id: %447
  %448 = begin_access [read] [static] %125 : $*Array<Closure> // users: %449, %451
  %449 = load %448 : $*Array<Closure>             // users: %462, %453, %450
  retain_value %449 : $Array<Closure>             // id: %450
  end_access %448 : $*Array<Closure>              // id: %451
  %452 = alloc_stack $Array<Closure>              // users: %454, %453, %476, %481
  store %449 to %452 : $*Array<Closure>           // id: %453
  %454 = load %452 : $*Array<Closure>             // user: %457
  %455 = alloc_stack $Optional<Closure>           // users: %461, %475, %480, %459
  %456 = alloc_stack $Array<Closure>              // users: %457, %460, %459
  store %454 to %456 : $*Array<Closure>           // id: %457
  // function_ref BidirectionalCollection.last.getter
  %458 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %459
  %459 = apply %458<[Closure]>(%455, %456) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %456 : $*Array<Closure>           // id: %460
  %461 = load %455 : $*Optional<Closure>          // user: %463
  release_value %449 : $Array<Closure>            // id: %462
  switch_enum %461 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %463

// %464                                           // users: %470, %465
bb19(%464 : $Closure):                            // Preds: bb18
  %465 = ref_element_addr %464 : $Closure, #Closure.closure // user: %466
  %466 = begin_access [read] [dynamic] %465 : $*@callee_guaranteed () -> () // users: %467, %469
  %467 = load %466 : $*@callee_guaranteed () -> () // users: %474, %471, %468
  strong_retain %467 : $@callee_guaranteed () -> () // id: %468
  end_access %466 : $*@callee_guaranteed () -> () // id: %469
  strong_release %464 : $Closure                  // id: %470
  %471 = apply %467() : $@callee_guaranteed () -> ()
  %472 = tuple ()                                 // user: %473
  %473 = enum $Optional<()>, #Optional.some!enumelt, %472 : $() // user: %477
  strong_release %467 : $@callee_guaranteed () -> () // id: %474
  dealloc_stack %455 : $*Optional<Closure>        // id: %475
  dealloc_stack %452 : $*Array<Closure>           // id: %476
  br bb20(%473 : $Optional<()>)                   // id: %477

bb20(%478 : $Optional<()>):                       // Preds: bb21 bb19
  br bb25                                         // id: %479

bb21:                                             // Preds: bb18
  dealloc_stack %455 : $*Optional<Closure>        // id: %480
  dealloc_stack %452 : $*Array<Closure>           // id: %481
  %482 = enum $Optional<()>, #Optional.none!enumelt // user: %483
  br bb20(%482 : $Optional<()>)                   // id: %483

bb22:                                             // Preds: bb17
  release_value %195 : $Optional<String>          // id: %484
  retain_value %195 : $Optional<String>           // id: %485
  debug_value %195 : $Optional<String>, let, name "$match" // id: %486
  %487 = string_literal utf8 "exit"               // user: %492
  %488 = integer_literal $Builtin.Word, 4         // user: %492
  %489 = integer_literal $Builtin.Int1, -1        // user: %492
  %490 = metatype $@thin String.Type              // user: %492
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %491 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %492
  %492 = apply %491(%487, %488, %489, %490) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %493
  %493 = enum $Optional<String>, #Optional.some!enumelt, %492 : $String // user: %495
  %494 = alloc_stack $Optional<String>            // users: %495, %500, %503, %502
  store %493 to %494 : $*Optional<String>         // id: %495
  %496 = alloc_stack $Optional<String>            // users: %497, %500, %501
  store %195 to %496 : $*Optional<String>         // id: %497
  %498 = metatype $@thin Optional<String>.Type    // user: %500
  // function_ref static Optional<A>.== infix(_:_:)
  %499 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %500
  %500 = apply %499<String>(%494, %496, %498) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %504
  dealloc_stack %496 : $*Optional<String>         // id: %501
  destroy_addr %494 : $*Optional<String>          // id: %502
  dealloc_stack %494 : $*Optional<String>         // id: %503
  %504 = struct_extract %500 : $Bool, #Bool._value // user: %505
  cond_br %504, bb23, bb24                        // id: %505

bb23:                                             // Preds: bb22
  release_value %195 : $Optional<String>          // id: %506
  %507 = integer_literal $Builtin.Int1, 0         // user: %508
  %508 = struct $Bool (%507 : $Builtin.Int1)      // user: %510
  %509 = begin_access [modify] [static] %159 : $*Bool // users: %510, %511
  store %508 to %509 : $*Bool                     // id: %510
  end_access %509 : $*Bool                        // id: %511
  br bb25                                         // id: %512

bb24:                                             // Preds: bb22
  release_value %195 : $Optional<String>          // id: %513
  %514 = integer_literal $Builtin.Word, 1         // user: %516
  // function_ref _allocateUninitializedArray<A>(_:)
  %515 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %516
  %516 = apply %515<Any>(%514) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %518, %517
  %517 = tuple_extract %516 : $(Array<Any>, Builtin.RawPointer), 0 // users: %536, %533
  %518 = tuple_extract %516 : $(Array<Any>, Builtin.RawPointer), 1 // user: %519
  %519 = pointer_to_address %518 : $Builtin.RawPointer to [strict] $*Any // user: %526
  %520 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %525
  %521 = integer_literal $Builtin.Word, 44        // user: %525
  %522 = integer_literal $Builtin.Int1, 0         // user: %525
  %523 = metatype $@thin String.Type              // user: %525
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %524 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %525
  %525 = apply %524(%520, %521, %522, %523) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %527
  %526 = init_existential_addr %519 : $*Any, $String // user: %527
  store %525 to %526 : $*String                   // id: %527
  // function_ref default argument 1 of print(_:separator:terminator:)
  %528 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %529
  %529 = apply %528() : $@convention(thin) () -> @owned String // users: %535, %533
  // function_ref default argument 2 of print(_:separator:terminator:)
  %530 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %531
  %531 = apply %530() : $@convention(thin) () -> @owned String // users: %534, %533
  // function_ref print(_:separator:terminator:)
  %532 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %533
  %533 = apply %532(%517, %529, %531) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %531 : $String                    // id: %534
  release_value %529 : $String                    // id: %535
  release_value %517 : $Array<Any>                // id: %536
  br bb25                                         // id: %537

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  release_value %195 : $Optional<String>          // id: %538
  br bb1                                          // id: %539

bb26:                                             // Preds: bb1
  %540 = integer_literal $Builtin.Word, 1         // user: %542
  // function_ref _allocateUninitializedArray<A>(_:)
  %541 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %542
  %542 = apply %541<Any>(%540) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %544, %543
  %543 = tuple_extract %542 : $(Array<Any>, Builtin.RawPointer), 0 // users: %562, %559
  %544 = tuple_extract %542 : $(Array<Any>, Builtin.RawPointer), 1 // user: %545
  %545 = pointer_to_address %544 : $Builtin.RawPointer to [strict] $*Any // user: %552
  %546 = string_literal utf8 "===== will end"     // user: %551
  %547 = integer_literal $Builtin.Word, 14        // user: %551
  %548 = integer_literal $Builtin.Int1, -1        // user: %551
  %549 = metatype $@thin String.Type              // user: %551
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %550 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %551
  %551 = apply %550(%546, %547, %548, %549) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %553
  %552 = init_existential_addr %545 : $*Any, $String // user: %553
  store %551 to %552 : $*String                   // id: %553
  // function_ref default argument 1 of print(_:separator:terminator:)
  %554 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %555
  %555 = apply %554() : $@convention(thin) () -> @owned String // users: %561, %559
  // function_ref default argument 2 of print(_:separator:terminator:)
  %556 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %557
  %557 = apply %556() : $@convention(thin) () -> @owned String // users: %560, %559
  // function_ref print(_:separator:terminator:)
  %558 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %559
  %559 = apply %558(%543, %555, %557) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %557 : $String                    // id: %560
  release_value %555 : $String                    // id: %561
  release_value %543 : $Array<Any>                // id: %562
  dealloc_stack %159 : $*Bool                     // id: %563
  destroy_addr %125 : $*Array<Closure>            // id: %564
  dealloc_stack %125 : $*Array<Closure>           // id: %565
  strong_release %98 : $@callee_guaranteed () -> () // id: %566
  strong_release %86 : $@callee_guaranteed () -> () // id: %567
  strong_release %76 : $@callee_guaranteed () -> () // id: %568
  strong_release %68 : $@callee_guaranteed () -> () // id: %569
  strong_release %59 : ${ var Int }               // id: %570
  strong_release %11 : $Number                    // id: %571
  strong_release %5 : $Empty                      // id: %572
  strong_release %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %573
  %574 = tuple ()                                 // user: %575
  return %574 : $()                               // id: %575
} // end sil function '$s4file3fooyyF'

// closure #1 in foo()
sil private @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () {
// %0 "name"                                      // users: %4, %3, %1
bb0(%0 : $String):
  debug_value %0 : $String, let, name "name", argno 1 // id: %1
  // function_ref closure #1 in closure #1 in foo()
  %2 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %4
  retain_value %0 : $String                       // id: %3
  %4 = partial_apply [callee_guaranteed] %2(%0) : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %5
  return %4 : $@callee_guaranteed (Int, Int, Int) -> () // id: %5
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_'

// closure #1 in closure #1 in foo()
sil private @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %53, %4
// %1 "weak"                                      // users: %71, %5
// %2 "unowned"                                   // users: %89, %6
// %3 "name"                                      // users: %35, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %12, %11
  %11 = tuple_extract %10 : $(Array<Any>, Builtin.RawPointer), 0 // users: %123, %120
  %12 = tuple_extract %10 : $(Array<Any>, Builtin.RawPointer), 1 // user: %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %113
  %14 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %106, %22, %109, %108, %29, %36, %47, %54, %65, %72, %83, %90, %101
  %15 = integer_literal $Builtin.Int64, 39        // user: %16
  %16 = struct $Int (%15 : $Builtin.Int64)        // user: %21
  %17 = integer_literal $Builtin.Int64, 4         // user: %18
  %18 = struct $Int (%17 : $Builtin.Int64)        // user: %21
  %19 = metatype $@thin DefaultStringInterpolation.Type // user: %21
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %20 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %21
  %21 = apply %20(%16, %18, %19) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %22
  store %21 to %14 : $*DefaultStringInterpolation // id: %22
  %23 = string_literal utf8 "Name: "              // user: %28
  %24 = integer_literal $Builtin.Word, 6          // user: %28
  %25 = integer_literal $Builtin.Int1, -1         // user: %28
  %26 = metatype $@thin String.Type               // user: %28
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %27 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %28 = apply %27(%23, %24, %25, %26) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %33, %31
  %29 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %32, %31
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %30 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %31
  %31 = apply %30(%28, %29) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %29 : $*DefaultStringInterpolation   // id: %32
  release_value %28 : $String                     // id: %33
  %34 = alloc_stack $String                       // users: %35, %40, %38
  store %3 to %34 : $*String                      // id: %35
  %36 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %39, %38
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %37 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %38
  %38 = apply %37<String>(%34, %36) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %36 : $*DefaultStringInterpolation   // id: %39
  dealloc_stack %34 : $*String                    // id: %40
  %41 = string_literal utf8 "; Strong: ("         // user: %46
  %42 = integer_literal $Builtin.Word, 11         // user: %46
  %43 = integer_literal $Builtin.Int1, -1         // user: %46
  %44 = metatype $@thin String.Type               // user: %46
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %45 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %46
  %46 = apply %45(%41, %42, %43, %44) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %51, %49
  %47 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %50, %49
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %48 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %49
  %49 = apply %48(%46, %47) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %47 : $*DefaultStringInterpolation   // id: %50
  release_value %46 : $String                     // id: %51
  %52 = alloc_stack $Int                          // users: %53, %58, %56
  store %0 to %52 : $*Int                         // id: %53
  %54 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 "); Weak: ("          // user: %64
  %60 = integer_literal $Builtin.Word, 10         // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  release_value %64 : $String                     // id: %69
  %70 = alloc_stack $Int                          // users: %71, %76, %74
  store %1 to %70 : $*Int                         // id: %71
  %72 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %75, %74
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %73 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %74
  %74 = apply %73<Int>(%70, %72) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %72 : $*DefaultStringInterpolation   // id: %75
  dealloc_stack %70 : $*Int                       // id: %76
  %77 = string_literal utf8 "); Unowned("         // user: %82
  %78 = integer_literal $Builtin.Word, 11         // user: %82
  %79 = integer_literal $Builtin.Int1, -1         // user: %82
  %80 = metatype $@thin String.Type               // user: %82
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %81 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %82
  %82 = apply %81(%77, %78, %79, %80) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %87, %85
  %83 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %86, %85
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %84 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %85
  %85 = apply %84(%82, %83) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %83 : $*DefaultStringInterpolation   // id: %86
  release_value %82 : $String                     // id: %87
  %88 = alloc_stack $Int                          // users: %89, %94, %92
  store %2 to %88 : $*Int                         // id: %89
  %90 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %93, %92
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %91 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %92
  %92 = apply %91<Int>(%88, %90) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %90 : $*DefaultStringInterpolation   // id: %93
  dealloc_stack %88 : $*Int                       // id: %94
  %95 = string_literal utf8 ")"                   // user: %100
  %96 = integer_literal $Builtin.Word, 1          // user: %100
  %97 = integer_literal $Builtin.Int1, -1         // user: %100
  %98 = metatype $@thin String.Type               // user: %100
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %99 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %100
  %100 = apply %99(%95, %96, %97, %98) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %105, %103
  %101 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %104, %103
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %102 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %103
  %103 = apply %102(%100, %101) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %101 : $*DefaultStringInterpolation  // id: %104
  release_value %100 : $String                    // id: %105
  %106 = load %14 : $*DefaultStringInterpolation  // users: %112, %107
  retain_value %106 : $DefaultStringInterpolation // id: %107
  destroy_addr %14 : $*DefaultStringInterpolation // id: %108
  dealloc_stack %14 : $*DefaultStringInterpolation // id: %109
  %110 = metatype $@thin String.Type              // user: %112
  // function_ref String.init(stringInterpolation:)
  %111 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %112
  %112 = apply %111(%106, %110) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %114
  %113 = init_existential_addr %13 : $*Any, $String // user: %114
  store %112 to %113 : $*String                   // id: %114
  // function_ref default argument 1 of print(_:separator:terminator:)
  %115 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %116
  %116 = apply %115() : $@convention(thin) () -> @owned String // users: %122, %120
  // function_ref default argument 2 of print(_:separator:terminator:)
  %117 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %118
  %118 = apply %117() : $@convention(thin) () -> @owned String // users: %121, %120
  // function_ref print(_:separator:terminator:)
  %119 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %120
  %120 = apply %119(%11, %116, %118) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %118 : $String                    // id: %121
  release_value %116 : $String                    // id: %122
  release_value %11 : $Array<Any>                 // id: %123
  %124 = tuple ()                                 // user: %125
  return %124 : $()                               // id: %125
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] [_semantics "array.uninitialized_intrinsic"] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer)

// Int.init(_builtinIntegerLiteral:)
sil public_external [transparent] [serialized] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int {
// %0                                             // user: %2
bb0(%0 : $Builtin.IntLiteral, %1 : $@thin Int.Type):
  %2 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%0 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %3
  %3 = tuple_extract %2 : $(Builtin.Int64, Builtin.Int1), 0 // user: %4
  %4 = struct $Int (%3 : $Builtin.Int64)          // user: %5
  return %4 : $Int                                // id: %5
} // end sil function '$sSi22_builtinIntegerLiteralSiBI_tcfC'

// DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
sil [serialized] @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// DefaultStringInterpolation.appendLiteral(_:)
sil [serialized] @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// String.init(stringInterpolation:)
sil [serialized] [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String

// default argument 1 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 " "                    // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA0_'

// default argument 2 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 "\n"                   // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA1_'

// print(_:separator:terminator:)
sil @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()

// closure #2 in foo()
sil private @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () {
// %0 "number"                                    // users: %3, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %1
  %2 = integer_literal $Builtin.Int64, 1          // user: %8
  %3 = ref_element_addr %0 : $Number, #Number.number // user: %4
  %4 = begin_access [modify] [dynamic] %3 : $*Int // users: %13, %5, %15
  %5 = struct_element_addr %4 : $*Int, #Int._value // user: %6
  %6 = load %5 : $*Builtin.Int64                  // user: %8
  %7 = integer_literal $Builtin.Int1, -1          // user: %8
  %8 = builtin "sadd_with_overflow_Int64"(%6 : $Builtin.Int64, %2 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %10, %9
  %9 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 0 // user: %12
  %10 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 1 // user: %11
  cond_fail %10 : $Builtin.Int1, "arithmetic overflow" // id: %11
  %12 = struct $Int (%9 : $Builtin.Int64)         // user: %13
  store %12 to %4 : $*Int                         // id: %13
  %14 = tuple ()
  end_access %4 : $*Int                           // id: %15
  %16 = tuple ()                                  // user: %17
  return %16 : $()                                // id: %17
} // end sil function '$s4file3fooyyFyycfU0_'

// static Int.+= infix(_:_:)
sil public_external [transparent] [serialized] @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () {
// %0                                             // users: %14, %3
// %1                                             // user: %5
bb0(%0 : $*Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_element_addr %0 : $*Int, #Int._value // user: %4
  %4 = load %3 : $*Builtin.Int64                  // user: %7
  %5 = struct_extract %1 : $Int, #Int._value      // user: %7
  %6 = integer_literal $Builtin.Int1, -1          // user: %7
  %7 = builtin "sadd_with_overflow_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %9, %8
  %8 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 0 // user: %13
  %9 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 1 // user: %12
  br bb1                                          // id: %10

bb1:                                              // Preds: bb0
  br bb2                                          // id: %11

bb2:                                              // Preds: bb1
  cond_fail %9 : $Builtin.Int1, "arithmetic overflow" // id: %12
  %13 = struct $Int (%8 : $Builtin.Int64)         // user: %14
  store %13 to %0 : $*Int                         // id: %14
  %15 = tuple ()                                  // user: %16
  return %15 : $()                                // id: %16
} // end sil function '$sSi2peoiyySiz_SitFZ'

// closure #3 in foo()
sil private @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %6, %2
// %1 "value"                                     // user: %3
bb0(%0 : $Number, %1 : ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %45, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = integer_literal $Builtin.Int64, 1          // user: %11
  %6 = ref_element_addr %0 : $Number, #Number.number // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*Int // users: %16, %8, %18
  %8 = struct_element_addr %7 : $*Int, #Int._value // user: %9
  %9 = load %8 : $*Builtin.Int64                  // user: %11
  %10 = integer_literal $Builtin.Int1, -1         // user: %11
  %11 = builtin "sadd_with_overflow_Int64"(%9 : $Builtin.Int64, %5 : $Builtin.Int64, %10 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %13, %12
  %12 = tuple_extract %11 : $(Builtin.Int64, Builtin.Int1), 0 // user: %15
  %13 = tuple_extract %11 : $(Builtin.Int64, Builtin.Int1), 1 // user: %14
  cond_fail %13 : $Builtin.Int1, "arithmetic overflow" // id: %14
  %15 = struct $Int (%12 : $Builtin.Int64)        // user: %16
  store %15 to %7 : $*Int                         // id: %16
  %17 = tuple ()
  end_access %7 : $*Int                           // id: %18
  %19 = integer_literal $Builtin.Word, 1          // user: %21
  // function_ref _allocateUninitializedArray<A>(_:)
  %20 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %21
  %21 = apply %20<Any>(%19) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %23, %22
  %22 = tuple_extract %21 : $(Array<Any>, Builtin.RawPointer), 0 // users: %83, %80
  %23 = tuple_extract %21 : $(Array<Any>, Builtin.RawPointer), 1 // user: %24
  %24 = pointer_to_address %23 : $Builtin.RawPointer to [strict] $*Any // user: %73
  %25 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %66, %33, %69, %68, %40, %50, %61
  %26 = integer_literal $Builtin.Int64, 3         // user: %27
  %27 = struct $Int (%26 : $Builtin.Int64)        // user: %32
  %28 = integer_literal $Builtin.Int64, 1         // user: %29
  %29 = struct $Int (%28 : $Builtin.Int64)        // user: %32
  %30 = metatype $@thin DefaultStringInterpolation.Type // user: %32
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %31 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %32
  %32 = apply %31(%27, %29, %30) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %33
  store %32 to %25 : $*DefaultStringInterpolation // id: %33
  %34 = string_literal utf8 "v: "                 // user: %39
  %35 = integer_literal $Builtin.Word, 3          // user: %39
  %36 = integer_literal $Builtin.Int1, -1         // user: %39
  %37 = metatype $@thin String.Type               // user: %39
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %38 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %39
  %39 = apply %38(%34, %35, %36, %37) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %44, %42
  %40 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %43, %42
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %41 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %42
  %42 = apply %41(%39, %40) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %40 : $*DefaultStringInterpolation   // id: %43
  release_value %39 : $String                     // id: %44
  %45 = begin_access [read] [dynamic] %3 : $*Int  // users: %46, %47
  %46 = load %45 : $*Int                          // user: %49
  end_access %45 : $*Int                          // id: %47
  %48 = alloc_stack $Int                          // users: %49, %54, %52
  store %46 to %48 : $*Int                        // id: %49
  %50 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %53, %52
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %51 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %52
  %52 = apply %51<Int>(%48, %50) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %50 : $*DefaultStringInterpolation   // id: %53
  dealloc_stack %48 : $*Int                       // id: %54
  %55 = string_literal utf8 ""                    // user: %60
  %56 = integer_literal $Builtin.Word, 0          // user: %60
  %57 = integer_literal $Builtin.Int1, -1         // user: %60
  %58 = metatype $@thin String.Type               // user: %60
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %59 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %60
  %60 = apply %59(%55, %56, %57, %58) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %65, %63
  %61 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %64, %63
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %62 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %63
  %63 = apply %62(%60, %61) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %61 : $*DefaultStringInterpolation   // id: %64
  release_value %60 : $String                     // id: %65
  %66 = load %25 : $*DefaultStringInterpolation   // users: %72, %67
  retain_value %66 : $DefaultStringInterpolation  // id: %67
  destroy_addr %25 : $*DefaultStringInterpolation // id: %68
  dealloc_stack %25 : $*DefaultStringInterpolation // id: %69
  %70 = metatype $@thin String.Type               // user: %72
  // function_ref String.init(stringInterpolation:)
  %71 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %72
  %72 = apply %71(%66, %70) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %74
  %73 = init_existential_addr %24 : $*Any, $String // user: %74
  store %72 to %73 : $*String                     // id: %74
  // function_ref default argument 1 of print(_:separator:terminator:)
  %75 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %76
  %76 = apply %75() : $@convention(thin) () -> @owned String // users: %82, %80
  // function_ref default argument 2 of print(_:separator:terminator:)
  %77 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %78
  %78 = apply %77() : $@convention(thin) () -> @owned String // users: %81, %80
  // function_ref print(_:separator:terminator:)
  %79 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %80
  %80 = apply %79(%22, %76, %78) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %78 : $String                     // id: %81
  release_value %76 : $String                     // id: %82
  release_value %22 : $Array<Any>                 // id: %83
  %84 = tuple ()                                  // user: %85
  return %84 : $()                                // id: %85
} // end sil function '$s4file3fooyyFyycfU1_'

// closure #4 in foo()
sil private @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () {
// %0 "number"                                    // users: %5, %2
// %1 "empty"                                     // users: %19, %3
bb0(%0 : $Number, %1 : $Empty):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %3
  %4 = integer_literal $Builtin.Int64, 1          // user: %10
  %5 = ref_element_addr %0 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %15, %7, %17
  %7 = struct_element_addr %6 : $*Int, #Int._value // user: %8
  %8 = load %7 : $*Builtin.Int64                  // user: %10
  %9 = integer_literal $Builtin.Int1, -1          // user: %10
  %10 = builtin "sadd_with_overflow_Int64"(%8 : $Builtin.Int64, %4 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %12, %11
  %11 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 0 // user: %14
  %12 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 1 // user: %13
  cond_fail %12 : $Builtin.Int1, "arithmetic overflow" // id: %13
  %14 = struct $Int (%11 : $Builtin.Int64)        // user: %15
  store %14 to %6 : $*Int                         // id: %15
  %16 = tuple ()
  end_access %6 : $*Int                           // id: %17
  // function_ref Empty.foo()
  %18 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %19
  %19 = apply %18(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %20 = tuple ()                                  // user: %21
  return %20 : $()                                // id: %21
} // end sil function '$s4file3fooyyFyycfU2_'

// closure #5 in foo()
sil private @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %8, %3
// %1 "empty"                                     // users: %22, %4
// %2 "value"                                     // user: %5
bb0(%0 : $Number, %1 : $Empty, %2 : ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %49, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = integer_literal $Builtin.Int64, 1          // user: %13
  %8 = ref_element_addr %0 : $Number, #Number.number // user: %9
  %9 = begin_access [modify] [dynamic] %8 : $*Int // users: %18, %10, %20
  %10 = struct_element_addr %9 : $*Int, #Int._value // user: %11
  %11 = load %10 : $*Builtin.Int64                // user: %13
  %12 = integer_literal $Builtin.Int1, -1         // user: %13
  %13 = builtin "sadd_with_overflow_Int64"(%11 : $Builtin.Int64, %7 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %15, %14
  %14 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 0 // user: %17
  %15 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 1 // user: %16
  cond_fail %15 : $Builtin.Int1, "arithmetic overflow" // id: %16
  %17 = struct $Int (%14 : $Builtin.Int64)        // user: %18
  store %17 to %9 : $*Int                         // id: %18
  %19 = tuple ()
  end_access %9 : $*Int                           // id: %20
  // function_ref Empty.foo()
  %21 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %22
  %22 = apply %21(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %23 = integer_literal $Builtin.Word, 1          // user: %25
  // function_ref _allocateUninitializedArray<A>(_:)
  %24 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %25
  %25 = apply %24<Any>(%23) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %27, %26
  %26 = tuple_extract %25 : $(Array<Any>, Builtin.RawPointer), 0 // users: %87, %84
  %27 = tuple_extract %25 : $(Array<Any>, Builtin.RawPointer), 1 // user: %28
  %28 = pointer_to_address %27 : $Builtin.RawPointer to [strict] $*Any // user: %77
  %29 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %70, %37, %73, %72, %44, %54, %65
  %30 = integer_literal $Builtin.Int64, 3         // user: %31
  %31 = struct $Int (%30 : $Builtin.Int64)        // user: %36
  %32 = integer_literal $Builtin.Int64, 1         // user: %33
  %33 = struct $Int (%32 : $Builtin.Int64)        // user: %36
  %34 = metatype $@thin DefaultStringInterpolation.Type // user: %36
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %35 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %36
  %36 = apply %35(%31, %33, %34) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %37
  store %36 to %29 : $*DefaultStringInterpolation // id: %37
  %38 = string_literal utf8 "v: "                 // user: %43
  %39 = integer_literal $Builtin.Word, 3          // user: %43
  %40 = integer_literal $Builtin.Int1, -1         // user: %43
  %41 = metatype $@thin String.Type               // user: %43
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %42 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %43
  %43 = apply %42(%38, %39, %40, %41) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %48, %46
  %44 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %47, %46
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %45 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %46
  %46 = apply %45(%43, %44) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %44 : $*DefaultStringInterpolation   // id: %47
  release_value %43 : $String                     // id: %48
  %49 = begin_access [read] [dynamic] %5 : $*Int  // users: %50, %51
  %50 = load %49 : $*Int                          // user: %53
  end_access %49 : $*Int                          // id: %51
  %52 = alloc_stack $Int                          // users: %53, %58, %56
  store %50 to %52 : $*Int                        // id: %53
  %54 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 ""                    // user: %64
  %60 = integer_literal $Builtin.Word, 0          // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  release_value %64 : $String                     // id: %69
  %70 = load %29 : $*DefaultStringInterpolation   // users: %76, %71
  retain_value %70 : $DefaultStringInterpolation  // id: %71
  destroy_addr %29 : $*DefaultStringInterpolation // id: %72
  dealloc_stack %29 : $*DefaultStringInterpolation // id: %73
  %74 = metatype $@thin String.Type               // user: %76
  // function_ref String.init(stringInterpolation:)
  %75 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %76
  %76 = apply %75(%70, %74) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %78
  %77 = init_existential_addr %28 : $*Any, $String // user: %78
  store %76 to %77 : $*String                     // id: %78
  // function_ref default argument 1 of print(_:separator:terminator:)
  %79 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %80
  %80 = apply %79() : $@convention(thin) () -> @owned String // users: %86, %84
  // function_ref default argument 2 of print(_:separator:terminator:)
  %81 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %82
  %82 = apply %81() : $@convention(thin) () -> @owned String // users: %85, %84
  // function_ref print(_:separator:terminator:)
  %83 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %84
  %84 = apply %83(%26, %80, %82) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %82 : $String                     // id: %85
  release_value %80 : $String                     // id: %86
  release_value %26 : $Array<Any>                 // id: %87
  %88 = tuple ()                                  // user: %89
  return %88 : $()                                // id: %89
} // end sil function '$s4file3fooyyFyycfU3_'

// Array.init()
sil [serialized] [_semantics "array.init.empty"] @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>

// Array.reserveCapacity(_:)
sil [serialized] [_semantics "array.mutate_unknown"] @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()

// Bool.init(_builtinBooleanLiteral:)
sil public_external [transparent] [serialized] @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Builtin.Int1, %1 : $@thin Bool.Type):
  %2 = struct $Bool (%0 : $Builtin.Int1)          // user: %3
  return %2 : $Bool                               // id: %3
} // end sil function '$sSb22_builtinBooleanLiteralSbBi1__tcfC'

// default argument 0 of readLine(strippingNewline:)
sil shared_external [serialized] @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool {
bb0:
  %0 = integer_literal $Builtin.Int1, -1          // user: %1
  %1 = struct $Bool (%0 : $Builtin.Int1)          // user: %2
  return %1 : $Bool                               // id: %2
} // end sil function '$ss8readLine16strippingNewlineSSSgSb_tFfA_'

// readLine(strippingNewline:)
sil @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String>

// ~= infix<A>(_:_:)
sil public_external [transparent] [serialized] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <T where T : Equatable> (@in_guaranteed T, @in_guaranteed T) -> Bool {
// %0                                             // user: %4
// %1                                             // user: %4
bb0(%0 : $*T, %1 : $*T):
  %2 = metatype $@thick T.Type                    // user: %4
  %3 = witness_method $T, #Equatable."==" : <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %4
  %4 = apply %3<T>(%0, %1, %2) : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %5
  return %4 : $Bool                               // id: %5
} // end sil function '$ss2teoiySbx_xtSQRzlF'

// Array.append(_:)
sil [serialized] [_semantics "array.append_element"] @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()

// Collection.isEmpty.getter
sil [serialized] @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool

// static Bool.! prefix(_:)
sil public_external [transparent] [serialized] @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Bool, %1 : $@thin Bool.Type):
  %2 = struct_extract %0 : $Bool, #Bool._value    // user: %4
  %3 = integer_literal $Builtin.Int1, -1          // user: %4
  %4 = builtin "xor_Int1"(%2 : $Builtin.Int1, %3 : $Builtin.Int1) : $Builtin.Int1 // user: %5
  %5 = struct $Bool (%4 : $Builtin.Int1)          // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sSb1nopyS2bFZ'

// RangeReplaceableCollection<>.removeLast()
sil [serialized] @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element

// BidirectionalCollection.last.getter
sil [serialized] @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>

// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
sil shared_external [transparent] [serialized] [thunk] @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thick Optional<τ_0_0>.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Optional<τ_0_0>, %1 : $*Optional<τ_0_0>, %2 : $@thick Optional<τ_0_0>.Type):
  %3 = metatype $@thin Optional<τ_0_0>.Type      // user: %5
  // function_ref static Optional<A>.== infix(_:_:)
  %4 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %5
  %5 = apply %4<τ_0_0>(%0, %1, %3) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW'

// static Optional<A>.== infix(_:_:)
sil [serialized] @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool

sil_vtable Empty {
  #Empty.init!allocator: (Empty.Type) -> () -> Empty : @$s4file5EmptyCACycfC	// Empty.__allocating_init()
  #Empty.deinit!deallocator: @$s4file5EmptyCfD	// Empty.__deallocating_deinit
}

sil_vtable Number {
  #Number.init!allocator: (Number.Type) -> (Int) -> Number : @$s4file6NumberC6numberACSi_tcfC	// Number.__allocating_init(number:)
  #Number.deinit!deallocator: @$s4file6NumberCfD	// Number.__deallocating_deinit
}

sil_vtable Closure {
  #Closure.init!allocator: (Closure.Type) -> (@escaping () -> ()) -> Closure : @$s4file7ClosureCyACyyccfC	// Closure.__allocating_init(_:)
  #Closure.deinit!deallocator: @$s4file7ClosureCfD	// Closure.__deallocating_deinit
}

sil_witness_table public_external [serialized] <Wrapped where Wrapped : Equatable> Optional<Wrapped>: Equatable module Swift {
  method #Equatable."==": <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW	// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
  conditional_conformance (Wrapped: Equatable): dependent
}



*** SIL module before Address Lowering ***
sil_stage canonical

import Builtin
import Swift
import SwiftShims

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

// Empty.foo()
sil hidden @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4file5EmptyC3fooyyF'

// Empty.deinit
sil hidden @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Empty to $Builtin.NativeObject // user: %3
  return %2 : $Builtin.NativeObject               // id: %3
} // end sil function '$s4file5EmptyCfd'

// Empty.__deallocating_deinit
sil hidden @$s4file5EmptyCfD : $@convention(method) (@owned Empty) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  // function_ref Empty.deinit
  %2 = function_ref @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Empty // user: %5
  dealloc_ref %4 : $Empty                         // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4file5EmptyCfD'

// Empty.__allocating_init()
sil hidden [exact_self_class] @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty {
// %0 "$metatype"
bb0(%0 : $@thick Empty.Type):
  %1 = alloc_ref $Empty                           // user: %3
  // function_ref Empty.init()
  %2 = function_ref @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Empty) -> @owned Empty // user: %4
  return %3 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfC'

// Empty.init()
sil hidden @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  return %0 : $Empty                              // id: %2
} // end sil function '$s4file5EmptyCACycfc'

// Number.number.getter
sil hidden [transparent] @$s4file6NumberC6numberSivg : $@convention(method) (@guaranteed Number) -> Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*Int   // users: %4, %5
  %4 = load %3 : $*Int                            // user: %6
  end_access %3 : $*Int                           // id: %5
  return %4 : $Int                                // id: %6
} // end sil function '$s4file6NumberC6numberSivg'

// Number.number.setter
sil hidden [transparent] @$s4file6NumberC6numberSivs : $@convention(method) (Int, @guaranteed Number) -> () {
// %0 "value"                                     // users: %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : $Number):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to %5 : $*Int                          // id: %6
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9
} // end sil function '$s4file6NumberC6numberSivs'

// Number.number.modify
sil hidden [transparent] @$s4file6NumberC6numberSivM : $@yield_once @convention(method) (@guaranteed Number) -> @yields @inout Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*Int // users: %5, %8, %4
  yield %3 : $*Int, resume bb1, unwind bb2        // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file6NumberC6numberSivM'

// Number.__allocating_init(number:)
sil hidden [exact_self_class] @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number {
// %0 "number"                                    // user: %4
// %1 "$metatype"
bb0(%0 : $Int, %1 : $@thick Number.Type):
  %2 = alloc_ref $Number                          // user: %4
  // function_ref Number.init(number:)
  %3 = function_ref @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (Int, @owned Number) -> @owned Number // user: %5
  return %4 : $Number                             // id: %5
} // end sil function '$s4file6NumberC6numberACSi_tcfC'

// Number.init(number:)
sil hidden @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %6, %2
// %1 "self"                                      // users: %8, %4, %3
bb0(%0 : $Int, %1 : $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to %5 : $*Int                          // id: %6
  end_access %5 : $*Int                           // id: %7
  return %1 : $Number                             // id: %8
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

// Number.deinit
sil hidden @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Number to $Builtin.NativeObject // user: %3
  return %2 : $Builtin.NativeObject               // id: %3
} // end sil function '$s4file6NumberCfd'

// Number.__deallocating_deinit
sil hidden @$s4file6NumberCfD : $@convention(method) (@owned Number) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  // function_ref Number.deinit
  %2 = function_ref @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Number // user: %5
  dealloc_ref %4 : $Number                        // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4file6NumberCfD'

// Closure.closure.getter
sil hidden [transparent] @$s4file7ClosureC7closureyycvg : $@convention(method) (@guaranteed Closure) -> @owned @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %4, %6
  %4 = load %3 : $*@callee_guaranteed () -> ()    // users: %7, %5
  strong_retain %4 : $@callee_guaranteed () -> () // id: %5
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %6
  return %4 : $@callee_guaranteed () -> ()        // id: %7
} // end sil function '$s4file7ClosureC7closureyycvg'

// Closure.closure.setter
sil hidden [transparent] @$s4file7ClosureC7closureyycvs : $@convention(method) (@owned @callee_guaranteed () -> (), @guaranteed Closure) -> () {
// %0 "value"                                     // users: %11, %8, %4, %2
// %1 "self"                                      // users: %5, %3
bb0(%0 : $@callee_guaranteed () -> (), %1 : $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "value", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  strong_retain %0 : $@callee_guaranteed () -> () // id: %4
  %5 = ref_element_addr %1 : $Closure, #Closure.closure // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*@callee_guaranteed () -> () // users: %8, %7, %10
  %7 = load %6 : $*@callee_guaranteed () -> ()    // user: %9
  store %0 to %6 : $*@callee_guaranteed () -> ()  // id: %8
  strong_release %7 : $@callee_guaranteed () -> () // id: %9
  end_access %6 : $*@callee_guaranteed () -> ()   // id: %10
  strong_release %0 : $@callee_guaranteed () -> () // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file7ClosureC7closureyycvs'

// Closure.closure.modify
sil hidden [transparent] @$s4file7ClosureC7closureyycvM : $@yield_once @convention(method) (@guaranteed Closure) -> @yields @inout @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %8, %4
  yield %3 : $*@callee_guaranteed () -> (), resume bb1, unwind bb2 // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file7ClosureC7closureyycvM'

// Closure.__allocating_init(_:)
sil hidden [exact_self_class] @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure {
// %0 "block"                                     // user: %4
// %1 "$metatype"
bb0(%0 : $@callee_guaranteed () -> (), %1 : $@thick Closure.Type):
  %2 = alloc_ref $Closure                         // user: %4
  // function_ref Closure.init(_:)
  %3 = function_ref @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %5
  return %4 : $Closure                            // id: %5
} // end sil function '$s4file7ClosureCyACyyccfC'

// Closure.init(_:)
sil hidden @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %9, %7, %4, %2
// %1 "self"                                      // users: %10, %5, %3
bb0(%0 : $@callee_guaranteed () -> (), %1 : $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  strong_retain %0 : $@callee_guaranteed () -> () // id: %4
  %5 = ref_element_addr %1 : $Closure, #Closure.closure // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*@callee_guaranteed () -> () // users: %7, %8
  store %0 to %6 : $*@callee_guaranteed () -> ()  // id: %7
  end_access %6 : $*@callee_guaranteed () -> ()   // id: %8
  strong_release %0 : $@callee_guaranteed () -> () // id: %9
  return %1 : $Closure                            // id: %10
} // end sil function '$s4file7ClosureCyACyyccfc'

// Closure.deinit
sil hidden @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %6, %2, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [deinit] [static] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  destroy_addr %3 : $*@callee_guaranteed () -> () // id: %4
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = unchecked_ref_cast %0 : $Closure to $Builtin.NativeObject // user: %7
  return %6 : $Builtin.NativeObject               // id: %7
} // end sil function '$s4file7ClosureCfd'

// Closure.__deallocating_deinit
sil hidden @$s4file7ClosureCfD : $@convention(method) (@owned Closure) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  // function_ref Closure.deinit
  %2 = function_ref @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Closure // user: %5
  dealloc_ref %4 : $Closure                       // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4file7ClosureCfD'

// foo()
sil hidden @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %573, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %572, %100, %98, %96, %93, %92, %88, %86, %85, %82, %81, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %11
  %8 = integer_literal $Builtin.Int64, 0          // user: %9
  %9 = struct $Int (%8 : $Builtin.Int64)          // user: %11
  // function_ref Number.__allocating_init(number:)
  %10 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %11
  %11 = apply %10(%9, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %571, %101, %98, %95, %91, %90, %89, %86, %84, %80, %79, %78, %76, %74, %72, %71, %70, %68, %67, %65, %64, %12
  debug_value %11 : $Number, let, name "number"   // id: %12
  %13 = integer_literal $Builtin.Word, 1          // user: %15
  // function_ref _allocateUninitializedArray<A>(_:)
  %14 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %15
  %15 = apply %14<Any>(%13) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %17, %16
  %16 = tuple_extract %15 : $(Array<Any>, Builtin.RawPointer), 0 // users: %35, %32
  %17 = tuple_extract %15 : $(Array<Any>, Builtin.RawPointer), 1 // user: %18
  %18 = pointer_to_address %17 : $Builtin.RawPointer to [strict] $*Any // user: %25
  %19 = string_literal utf8 "===== Did init"      // user: %24
  %20 = integer_literal $Builtin.Word, 14         // user: %24
  %21 = integer_literal $Builtin.Int1, -1         // user: %24
  %22 = metatype $@thin String.Type               // user: %24
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %23 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %24
  %24 = apply %23(%19, %20, %21, %22) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %25 = init_existential_addr %18 : $*Any, $String // user: %26
  store %24 to %25 : $*String                     // id: %26
  // function_ref default argument 1 of print(_:separator:terminator:)
  %27 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %28
  %28 = apply %27() : $@convention(thin) () -> @owned String // users: %34, %32
  // function_ref default argument 2 of print(_:separator:terminator:)
  %29 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %30
  %30 = apply %29() : $@convention(thin) () -> @owned String // users: %33, %32
  // function_ref print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %32
  %32 = apply %31(%16, %28, %30) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %30 : $String                     // id: %33
  release_value %28 : $String                     // id: %34
  release_value %16 : $Array<Any>                 // id: %35
  %36 = integer_literal $Builtin.Word, 1          // user: %38
  // function_ref _allocateUninitializedArray<A>(_:)
  %37 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %38
  %38 = apply %37<Any>(%36) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %40, %39
  %39 = tuple_extract %38 : $(Array<Any>, Builtin.RawPointer), 0 // users: %58, %55
  %40 = tuple_extract %38 : $(Array<Any>, Builtin.RawPointer), 1 // user: %41
  %41 = pointer_to_address %40 : $Builtin.RawPointer to [strict] $*Any // user: %48
  %42 = string_literal utf8 "===== Did hook"      // user: %47
  %43 = integer_literal $Builtin.Word, 14         // user: %47
  %44 = integer_literal $Builtin.Int1, -1         // user: %47
  %45 = metatype $@thin String.Type               // user: %47
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %46 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %47
  %47 = apply %46(%42, %43, %44, %45) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %49
  %48 = init_existential_addr %41 : $*Any, $String // user: %49
  store %47 to %48 : $*String                     // id: %49
  // function_ref default argument 1 of print(_:separator:terminator:)
  %50 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %51
  %51 = apply %50() : $@convention(thin) () -> @owned String // users: %57, %55
  // function_ref default argument 2 of print(_:separator:terminator:)
  %52 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %53
  %53 = apply %52() : $@convention(thin) () -> @owned String // users: %56, %55
  // function_ref print(_:separator:terminator:)
  %54 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %55
  %55 = apply %54(%39, %51, %53) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %53 : $String                     // id: %56
  release_value %51 : $String                     // id: %57
  release_value %39 : $Array<Any>                 // id: %58
  %59 = alloc_box ${ var Int }, var, name "value" // users: %570, %98, %97, %76, %75, %60
  %60 = project_box %59 : ${ var Int }, 0         // users: %63, %412
  %61 = integer_literal $Builtin.Int64, 0         // user: %62
  %62 = struct $Int (%61 : $Builtin.Int64)        // user: %63
  store %62 to %60 : $*Int                        // id: %63
  strong_retain %11 : $Number                     // id: %64
  debug_value %11 : $Number, let, name "number"   // id: %65
  // function_ref closure #2 in foo()
  %66 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %68
  strong_retain %11 : $Number                     // id: %67
  %68 = partial_apply [callee_guaranteed] %66(%11) : $@convention(thin) (@guaranteed Number) -> () // users: %569, %222, %220, %69
  debug_value %68 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %69
  strong_release %11 : $Number                    // id: %70
  strong_retain %11 : $Number                     // id: %71
  debug_value %11 : $Number, let, name "number"   // id: %72
  // function_ref closure #3 in foo()
  %73 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %76
  strong_retain %11 : $Number                     // id: %74
  strong_retain %59 : ${ var Int }                // id: %75
  %76 = partial_apply [callee_guaranteed] %73(%11, %59) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %568, %257, %255, %77
  debug_value %76 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %77
  strong_release %11 : $Number                    // id: %78
  strong_retain %11 : $Number                     // id: %79
  debug_value %11 : $Number, let, name "number"   // id: %80
  strong_retain %5 : $Empty                       // id: %81
  debug_value %5 : $Empty, let, name "empty"      // id: %82
  // function_ref closure #4 in foo()
  %83 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %86
  strong_retain %11 : $Number                     // id: %84
  strong_retain %5 : $Empty                       // id: %85
  %86 = partial_apply [callee_guaranteed] %83(%11, %5) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %567, %292, %290, %87
  debug_value %86 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %87
  strong_release %5 : $Empty                      // id: %88
  strong_release %11 : $Number                    // id: %89
  strong_retain %11 : $Number                     // id: %90
  debug_value %11 : $Number, let, name "number"   // id: %91
  strong_retain %5 : $Empty                       // id: %92
  debug_value %5 : $Empty, let, name "empty"      // id: %93
  // function_ref closure #5 in foo()
  %94 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %98
  strong_retain %11 : $Number                     // id: %95
  strong_retain %5 : $Empty                       // id: %96
  strong_retain %59 : ${ var Int }                // id: %97
  %98 = partial_apply [callee_guaranteed] %94(%11, %5, %59) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %566, %327, %325, %99
  debug_value %98 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %99
  strong_release %5 : $Empty                      // id: %100
  strong_release %11 : $Number                    // id: %101
  %102 = integer_literal $Builtin.Word, 1         // user: %104
  // function_ref _allocateUninitializedArray<A>(_:)
  %103 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %104
  %104 = apply %103<Any>(%102) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %106, %105
  %105 = tuple_extract %104 : $(Array<Any>, Builtin.RawPointer), 0 // users: %124, %121
  %106 = tuple_extract %104 : $(Array<Any>, Builtin.RawPointer), 1 // user: %107
  %107 = pointer_to_address %106 : $Builtin.RawPointer to [strict] $*Any // user: %114
  %108 = string_literal utf8 "===== Did init closures" // user: %113
  %109 = integer_literal $Builtin.Word, 23        // user: %113
  %110 = integer_literal $Builtin.Int1, -1        // user: %113
  %111 = metatype $@thin String.Type              // user: %113
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %112 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %113
  %113 = apply %112(%108, %109, %110, %111) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %115
  %114 = init_existential_addr %107 : $*Any, $String // user: %115
  store %113 to %114 : $*String                   // id: %115
  // function_ref default argument 1 of print(_:separator:terminator:)
  %116 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %117
  %117 = apply %116() : $@convention(thin) () -> @owned String // users: %123, %121
  // function_ref default argument 2 of print(_:separator:terminator:)
  %118 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %119
  %119 = apply %118() : $@convention(thin) () -> @owned String // users: %122, %121
  // function_ref print(_:separator:terminator:)
  %120 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %121
  %121 = apply %120(%105, %117, %119) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %119 : $String                    // id: %122
  release_value %117 : $String                    // id: %123
  release_value %105 : $Array<Any>                // id: %124
  %125 = alloc_stack $Array<Closure>, var, name "storage" // users: %129, %565, %564, %132, %225, %260, %295, %330, %359, %378, %448
  %126 = metatype $@thin Array<Closure>.Type      // user: %128
  // function_ref Array.init()
  %127 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %128
  %128 = apply %127<Closure>(%126) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %129
  store %128 to %125 : $*Array<Closure>           // id: %129
  %130 = integer_literal $Builtin.Int64, 100      // user: %131
  %131 = struct $Int (%130 : $Builtin.Int64)      // user: %134
  %132 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %135, %134
  // function_ref Array.reserveCapacity(_:)
  %133 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %134
  %134 = apply %133<Closure>(%131, %132) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %132 : $*Array<Closure>              // id: %135
  %136 = integer_literal $Builtin.Word, 1         // user: %138
  // function_ref _allocateUninitializedArray<A>(_:)
  %137 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %138
  %138 = apply %137<Any>(%136) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %140, %139
  %139 = tuple_extract %138 : $(Array<Any>, Builtin.RawPointer), 0 // users: %158, %155
  %140 = tuple_extract %138 : $(Array<Any>, Builtin.RawPointer), 1 // user: %141
  %141 = pointer_to_address %140 : $Builtin.RawPointer to [strict] $*Any // user: %148
  %142 = string_literal utf8 "===== Did init array" // user: %147
  %143 = integer_literal $Builtin.Word, 20        // user: %147
  %144 = integer_literal $Builtin.Int1, -1        // user: %147
  %145 = metatype $@thin String.Type              // user: %147
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %146 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %147
  %147 = apply %146(%142, %143, %144, %145) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %149
  %148 = init_existential_addr %141 : $*Any, $String // user: %149
  store %147 to %148 : $*String                   // id: %149
  // function_ref default argument 1 of print(_:separator:terminator:)
  %150 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %151
  %151 = apply %150() : $@convention(thin) () -> @owned String // users: %157, %155
  // function_ref default argument 2 of print(_:separator:terminator:)
  %152 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %153
  %153 = apply %152() : $@convention(thin) () -> @owned String // users: %156, %155
  // function_ref print(_:separator:terminator:)
  %154 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %155
  %155 = apply %154(%139, %151, %153) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %153 : $String                    // id: %156
  release_value %151 : $String                    // id: %157
  release_value %139 : $Array<Any>                // id: %158
  %159 = alloc_stack $Bool, var, name "run"       // users: %162, %563, %164, %509
  %160 = integer_literal $Builtin.Int1, -1        // user: %161
  %161 = struct $Bool (%160 : $Builtin.Int1)      // user: %162
  store %161 to %159 : $*Bool                     // id: %162
  br bb1                                          // id: %163

bb1:                                              // Preds: bb25 bb0
  %164 = begin_access [read] [static] %159 : $*Bool // users: %165, %167
  %165 = struct_element_addr %164 : $*Bool, #Bool._value // user: %166
  %166 = load %165 : $*Builtin.Int1               // user: %168
  end_access %164 : $*Bool                        // id: %167
  cond_br %166, bb2, bb26                         // id: %168

bb2:                                              // Preds: bb1
  %169 = integer_literal $Builtin.Word, 1         // user: %171
  // function_ref _allocateUninitializedArray<A>(_:)
  %170 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %171
  %171 = apply %170<Any>(%169) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %173, %172
  %172 = tuple_extract %171 : $(Array<Any>, Builtin.RawPointer), 0 // users: %191, %188
  %173 = tuple_extract %171 : $(Array<Any>, Builtin.RawPointer), 1 // user: %174
  %174 = pointer_to_address %173 : $Builtin.RawPointer to [strict] $*Any // user: %181
  %175 = string_literal utf8 "===== Ask"          // user: %180
  %176 = integer_literal $Builtin.Word, 9         // user: %180
  %177 = integer_literal $Builtin.Int1, -1        // user: %180
  %178 = metatype $@thin String.Type              // user: %180
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %179 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %180
  %180 = apply %179(%175, %176, %177, %178) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %182
  %181 = init_existential_addr %174 : $*Any, $String // user: %182
  store %180 to %181 : $*String                   // id: %182
  // function_ref default argument 1 of print(_:separator:terminator:)
  %183 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %184
  %184 = apply %183() : $@convention(thin) () -> @owned String // users: %190, %188
  // function_ref default argument 2 of print(_:separator:terminator:)
  %185 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %186
  %186 = apply %185() : $@convention(thin) () -> @owned String // users: %189, %188
  // function_ref print(_:separator:terminator:)
  %187 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %188
  %188 = apply %187(%172, %184, %186) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %186 : $String                    // id: %189
  release_value %184 : $String                    // id: %190
  release_value %172 : $Array<Any>                // id: %191
  // function_ref default argument 0 of readLine(strippingNewline:)
  %192 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %193
  %193 = apply %192() : $@convention(thin) () -> Bool // user: %195
  // function_ref readLine(strippingNewline:)
  %194 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %195
  %195 = apply %194(%193) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %538, %513, %506, %497, %486, %485, %484, %447, %438, %427, %426, %425, %410, %401, %390, %389, %387, %358, %349, %338, %337, %336, %323, %314, %303, %302, %301, %288, %279, %268, %267, %266, %253, %244, %233, %232, %231, %218, %209, %198, %197, %196
  debug_value %195 : $Optional<String>, let, name "line" // id: %196
  retain_value %195 : $Optional<String>           // id: %197
  debug_value %195 : $Optional<String>, let, name "$match" // id: %198
  %199 = string_literal utf8 "push1"              // user: %204
  %200 = integer_literal $Builtin.Word, 5         // user: %204
  %201 = integer_literal $Builtin.Int1, -1        // user: %204
  %202 = metatype $@thin String.Type              // user: %204
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %203 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %204
  %204 = apply %203(%199, %200, %201, %202) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %205
  %205 = enum $Optional<String>, #Optional.some!enumelt, %204 : $String // user: %207
  %206 = alloc_stack $Optional<String>            // users: %207, %212, %215, %214
  store %205 to %206 : $*Optional<String>         // id: %207
  %208 = alloc_stack $Optional<String>            // users: %209, %212, %213
  store %195 to %208 : $*Optional<String>         // id: %209
  %210 = metatype $@thin Optional<String>.Type    // user: %212
  // function_ref static Optional<A>.== infix(_:_:)
  %211 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %212
  %212 = apply %211<String>(%206, %208, %210) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %216
  dealloc_stack %208 : $*Optional<String>         // id: %213
  destroy_addr %206 : $*Optional<String>          // id: %214
  dealloc_stack %206 : $*Optional<String>         // id: %215
  %216 = struct_extract %212 : $Bool, #Bool._value // user: %217
  cond_br %216, bb3, bb4                          // id: %217

bb3:                                              // Preds: bb2
  release_value %195 : $Optional<String>          // id: %218
  %219 = metatype $@thick Closure.Type            // user: %222
  strong_retain %68 : $@callee_guaranteed () -> () // id: %220
  // function_ref Closure.__allocating_init(_:)
  %221 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %222
  %222 = apply %221(%68, %219) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %224
  %223 = alloc_stack $Closure                     // users: %224, %229, %227
  store %222 to %223 : $*Closure                  // id: %224
  %225 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %228, %227
  // function_ref Array.append(_:)
  %226 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %227
  %227 = apply %226<Closure>(%223, %225) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %225 : $*Array<Closure>              // id: %228
  dealloc_stack %223 : $*Closure                  // id: %229
  br bb25                                         // id: %230

bb4:                                              // Preds: bb2
  release_value %195 : $Optional<String>          // id: %231
  retain_value %195 : $Optional<String>           // id: %232
  debug_value %195 : $Optional<String>, let, name "$match" // id: %233
  %234 = string_literal utf8 "push1_1"            // user: %239
  %235 = integer_literal $Builtin.Word, 7         // user: %239
  %236 = integer_literal $Builtin.Int1, -1        // user: %239
  %237 = metatype $@thin String.Type              // user: %239
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %238 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %239
  %239 = apply %238(%234, %235, %236, %237) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %240
  %240 = enum $Optional<String>, #Optional.some!enumelt, %239 : $String // user: %242
  %241 = alloc_stack $Optional<String>            // users: %242, %247, %250, %249
  store %240 to %241 : $*Optional<String>         // id: %242
  %243 = alloc_stack $Optional<String>            // users: %244, %247, %248
  store %195 to %243 : $*Optional<String>         // id: %244
  %245 = metatype $@thin Optional<String>.Type    // user: %247
  // function_ref static Optional<A>.== infix(_:_:)
  %246 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %247
  %247 = apply %246<String>(%241, %243, %245) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %251
  dealloc_stack %243 : $*Optional<String>         // id: %248
  destroy_addr %241 : $*Optional<String>          // id: %249
  dealloc_stack %241 : $*Optional<String>         // id: %250
  %251 = struct_extract %247 : $Bool, #Bool._value // user: %252
  cond_br %251, bb5, bb6                          // id: %252

bb5:                                              // Preds: bb4
  release_value %195 : $Optional<String>          // id: %253
  %254 = metatype $@thick Closure.Type            // user: %257
  strong_retain %76 : $@callee_guaranteed () -> () // id: %255
  // function_ref Closure.__allocating_init(_:)
  %256 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %257
  %257 = apply %256(%76, %254) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %259
  %258 = alloc_stack $Closure                     // users: %259, %264, %262
  store %257 to %258 : $*Closure                  // id: %259
  %260 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %263, %262
  // function_ref Array.append(_:)
  %261 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %262
  %262 = apply %261<Closure>(%258, %260) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %260 : $*Array<Closure>              // id: %263
  dealloc_stack %258 : $*Closure                  // id: %264
  br bb25                                         // id: %265

bb6:                                              // Preds: bb4
  release_value %195 : $Optional<String>          // id: %266
  retain_value %195 : $Optional<String>           // id: %267
  debug_value %195 : $Optional<String>, let, name "$match" // id: %268
  %269 = string_literal utf8 "push2"              // user: %274
  %270 = integer_literal $Builtin.Word, 5         // user: %274
  %271 = integer_literal $Builtin.Int1, -1        // user: %274
  %272 = metatype $@thin String.Type              // user: %274
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %273 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %274
  %274 = apply %273(%269, %270, %271, %272) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %275
  %275 = enum $Optional<String>, #Optional.some!enumelt, %274 : $String // user: %277
  %276 = alloc_stack $Optional<String>            // users: %277, %282, %285, %284
  store %275 to %276 : $*Optional<String>         // id: %277
  %278 = alloc_stack $Optional<String>            // users: %279, %282, %283
  store %195 to %278 : $*Optional<String>         // id: %279
  %280 = metatype $@thin Optional<String>.Type    // user: %282
  // function_ref static Optional<A>.== infix(_:_:)
  %281 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %282
  %282 = apply %281<String>(%276, %278, %280) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %286
  dealloc_stack %278 : $*Optional<String>         // id: %283
  destroy_addr %276 : $*Optional<String>          // id: %284
  dealloc_stack %276 : $*Optional<String>         // id: %285
  %286 = struct_extract %282 : $Bool, #Bool._value // user: %287
  cond_br %286, bb7, bb8                          // id: %287

bb7:                                              // Preds: bb6
  release_value %195 : $Optional<String>          // id: %288
  %289 = metatype $@thick Closure.Type            // user: %292
  strong_retain %86 : $@callee_guaranteed () -> () // id: %290
  // function_ref Closure.__allocating_init(_:)
  %291 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %292
  %292 = apply %291(%86, %289) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %294
  %293 = alloc_stack $Closure                     // users: %294, %299, %297
  store %292 to %293 : $*Closure                  // id: %294
  %295 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %298, %297
  // function_ref Array.append(_:)
  %296 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %297
  %297 = apply %296<Closure>(%293, %295) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %295 : $*Array<Closure>              // id: %298
  dealloc_stack %293 : $*Closure                  // id: %299
  br bb25                                         // id: %300

bb8:                                              // Preds: bb6
  release_value %195 : $Optional<String>          // id: %301
  retain_value %195 : $Optional<String>           // id: %302
  debug_value %195 : $Optional<String>, let, name "$match" // id: %303
  %304 = string_literal utf8 "push2_1"            // user: %309
  %305 = integer_literal $Builtin.Word, 7         // user: %309
  %306 = integer_literal $Builtin.Int1, -1        // user: %309
  %307 = metatype $@thin String.Type              // user: %309
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %308 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %309
  %309 = apply %308(%304, %305, %306, %307) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %310
  %310 = enum $Optional<String>, #Optional.some!enumelt, %309 : $String // user: %312
  %311 = alloc_stack $Optional<String>            // users: %312, %317, %320, %319
  store %310 to %311 : $*Optional<String>         // id: %312
  %313 = alloc_stack $Optional<String>            // users: %314, %317, %318
  store %195 to %313 : $*Optional<String>         // id: %314
  %315 = metatype $@thin Optional<String>.Type    // user: %317
  // function_ref static Optional<A>.== infix(_:_:)
  %316 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %317
  %317 = apply %316<String>(%311, %313, %315) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %321
  dealloc_stack %313 : $*Optional<String>         // id: %318
  destroy_addr %311 : $*Optional<String>          // id: %319
  dealloc_stack %311 : $*Optional<String>         // id: %320
  %321 = struct_extract %317 : $Bool, #Bool._value // user: %322
  cond_br %321, bb9, bb10                         // id: %322

bb9:                                              // Preds: bb8
  release_value %195 : $Optional<String>          // id: %323
  %324 = metatype $@thick Closure.Type            // user: %327
  strong_retain %98 : $@callee_guaranteed () -> () // id: %325
  // function_ref Closure.__allocating_init(_:)
  %326 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %327
  %327 = apply %326(%98, %324) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %329
  %328 = alloc_stack $Closure                     // users: %329, %334, %332
  store %327 to %328 : $*Closure                  // id: %329
  %330 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %333, %332
  // function_ref Array.append(_:)
  %331 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %332
  %332 = apply %331<Closure>(%328, %330) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %330 : $*Array<Closure>              // id: %333
  dealloc_stack %328 : $*Closure                  // id: %334
  br bb25                                         // id: %335

bb10:                                             // Preds: bb8
  release_value %195 : $Optional<String>          // id: %336
  retain_value %195 : $Optional<String>           // id: %337
  debug_value %195 : $Optional<String>, let, name "$match" // id: %338
  %339 = string_literal utf8 "pop"                // user: %344
  %340 = integer_literal $Builtin.Word, 3         // user: %344
  %341 = integer_literal $Builtin.Int1, -1        // user: %344
  %342 = metatype $@thin String.Type              // user: %344
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %343 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %344
  %344 = apply %343(%339, %340, %341, %342) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %345
  %345 = enum $Optional<String>, #Optional.some!enumelt, %344 : $String // user: %347
  %346 = alloc_stack $Optional<String>            // users: %347, %352, %355, %354
  store %345 to %346 : $*Optional<String>         // id: %347
  %348 = alloc_stack $Optional<String>            // users: %349, %352, %353
  store %195 to %348 : $*Optional<String>         // id: %349
  %350 = metatype $@thin Optional<String>.Type    // user: %352
  // function_ref static Optional<A>.== infix(_:_:)
  %351 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %352
  %352 = apply %351<String>(%346, %348, %350) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %356
  dealloc_stack %348 : $*Optional<String>         // id: %353
  destroy_addr %346 : $*Optional<String>          // id: %354
  dealloc_stack %346 : $*Optional<String>         // id: %355
  %356 = struct_extract %352 : $Bool, #Bool._value // user: %357
  cond_br %356, bb11, bb14                        // id: %357

bb11:                                             // Preds: bb10
  release_value %195 : $Optional<String>          // id: %358
  %359 = begin_access [read] [static] %125 : $*Array<Closure> // users: %360, %362
  %360 = load %359 : $*Array<Closure>             // users: %371, %364, %361
  retain_value %360 : $Array<Closure>             // id: %361
  end_access %359 : $*Array<Closure>              // id: %362
  %363 = alloc_stack $Array<Closure>              // users: %365, %364, %375
  store %360 to %363 : $*Array<Closure>           // id: %364
  %365 = load %363 : $*Array<Closure>             // user: %367
  %366 = alloc_stack $Array<Closure>              // users: %367, %370, %369
  store %365 to %366 : $*Array<Closure>           // id: %367
  // function_ref Collection.isEmpty.getter
  %368 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %369
  %369 = apply %368<[Closure]>(%366) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %372
  dealloc_stack %366 : $*Array<Closure>           // id: %370
  release_value %360 : $Array<Closure>            // id: %371
  %372 = struct_extract %369 : $Bool, #Bool._value // user: %374
  %373 = integer_literal $Builtin.Int1, -1        // user: %374
  %374 = builtin "xor_Int1"(%372 : $Builtin.Int1, %373 : $Builtin.Int1) : $Builtin.Int1 // user: %376
  dealloc_stack %363 : $*Array<Closure>           // id: %375
  cond_br %374, bb12, bb13                        // id: %376

bb12:                                             // Preds: bb11
  %377 = alloc_stack $Closure                     // users: %382, %384, %380
  %378 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %381, %380
  // function_ref RangeReplaceableCollection<>.removeLast()
  %379 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %380
  %380 = apply %379<[Closure]>(%377, %378) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %378 : $*Array<Closure>              // id: %381
  %382 = load %377 : $*Closure                    // user: %383
  strong_release %382 : $Closure                  // id: %383
  dealloc_stack %377 : $*Closure                  // id: %384
  br bb25                                         // id: %385

bb13:                                             // Preds: bb11
  br bb15                                         // id: %386

bb14:                                             // Preds: bb10
  release_value %195 : $Optional<String>          // id: %387
  br bb15                                         // id: %388

bb15:                                             // Preds: bb13 bb14
  retain_value %195 : $Optional<String>           // id: %389
  debug_value %195 : $Optional<String>, let, name "$match" // id: %390
  %391 = string_literal utf8 "inc"                // user: %396
  %392 = integer_literal $Builtin.Word, 3         // user: %396
  %393 = integer_literal $Builtin.Int1, -1        // user: %396
  %394 = metatype $@thin String.Type              // user: %396
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %395 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %396
  %396 = apply %395(%391, %392, %393, %394) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %397
  %397 = enum $Optional<String>, #Optional.some!enumelt, %396 : $String // user: %399
  %398 = alloc_stack $Optional<String>            // users: %399, %404, %407, %406
  store %397 to %398 : $*Optional<String>         // id: %399
  %400 = alloc_stack $Optional<String>            // users: %401, %404, %405
  store %195 to %400 : $*Optional<String>         // id: %401
  %402 = metatype $@thin Optional<String>.Type    // user: %404
  // function_ref static Optional<A>.== infix(_:_:)
  %403 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %404
  %404 = apply %403<String>(%398, %400, %402) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %408
  dealloc_stack %400 : $*Optional<String>         // id: %405
  destroy_addr %398 : $*Optional<String>          // id: %406
  dealloc_stack %398 : $*Optional<String>         // id: %407
  %408 = struct_extract %404 : $Bool, #Bool._value // user: %409
  cond_br %408, bb16, bb17                        // id: %409

bb16:                                             // Preds: bb15
  release_value %195 : $Optional<String>          // id: %410
  %411 = integer_literal $Builtin.Int64, 1        // user: %416
  %412 = begin_access [modify] [dynamic] %60 : $*Int // users: %421, %413, %423
  %413 = struct_element_addr %412 : $*Int, #Int._value // user: %414
  %414 = load %413 : $*Builtin.Int64              // user: %416
  %415 = integer_literal $Builtin.Int1, -1        // user: %416
  %416 = builtin "sadd_with_overflow_Int64"(%414 : $Builtin.Int64, %411 : $Builtin.Int64, %415 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %418, %417
  %417 = tuple_extract %416 : $(Builtin.Int64, Builtin.Int1), 0 // user: %420
  %418 = tuple_extract %416 : $(Builtin.Int64, Builtin.Int1), 1 // user: %419
  cond_fail %418 : $Builtin.Int1, "arithmetic overflow" // id: %419
  %420 = struct $Int (%417 : $Builtin.Int64)      // user: %421
  store %420 to %412 : $*Int                      // id: %421
  %422 = tuple ()
  end_access %412 : $*Int                         // id: %423
  br bb25                                         // id: %424

bb17:                                             // Preds: bb15
  release_value %195 : $Optional<String>          // id: %425
  retain_value %195 : $Optional<String>           // id: %426
  debug_value %195 : $Optional<String>, let, name "$match" // id: %427
  %428 = string_literal utf8 "exec"               // user: %433
  %429 = integer_literal $Builtin.Word, 4         // user: %433
  %430 = integer_literal $Builtin.Int1, -1        // user: %433
  %431 = metatype $@thin String.Type              // user: %433
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %432 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %433
  %433 = apply %432(%428, %429, %430, %431) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %434
  %434 = enum $Optional<String>, #Optional.some!enumelt, %433 : $String // user: %436
  %435 = alloc_stack $Optional<String>            // users: %436, %441, %444, %443
  store %434 to %435 : $*Optional<String>         // id: %436
  %437 = alloc_stack $Optional<String>            // users: %438, %441, %442
  store %195 to %437 : $*Optional<String>         // id: %438
  %439 = metatype $@thin Optional<String>.Type    // user: %441
  // function_ref static Optional<A>.== infix(_:_:)
  %440 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %441
  %441 = apply %440<String>(%435, %437, %439) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %445
  dealloc_stack %437 : $*Optional<String>         // id: %442
  destroy_addr %435 : $*Optional<String>          // id: %443
  dealloc_stack %435 : $*Optional<String>         // id: %444
  %445 = struct_extract %441 : $Bool, #Bool._value // user: %446
  cond_br %445, bb18, bb22                        // id: %446

bb18:                                             // Preds: bb17
  release_value %195 : $Optional<String>          // id: %447
  %448 = begin_access [read] [static] %125 : $*Array<Closure> // users: %449, %451
  %449 = load %448 : $*Array<Closure>             // users: %462, %453, %450
  retain_value %449 : $Array<Closure>             // id: %450
  end_access %448 : $*Array<Closure>              // id: %451
  %452 = alloc_stack $Array<Closure>              // users: %454, %453, %476, %481
  store %449 to %452 : $*Array<Closure>           // id: %453
  %454 = load %452 : $*Array<Closure>             // user: %457
  %455 = alloc_stack $Optional<Closure>           // users: %461, %475, %480, %459
  %456 = alloc_stack $Array<Closure>              // users: %457, %460, %459
  store %454 to %456 : $*Array<Closure>           // id: %457
  // function_ref BidirectionalCollection.last.getter
  %458 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %459
  %459 = apply %458<[Closure]>(%455, %456) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %456 : $*Array<Closure>           // id: %460
  %461 = load %455 : $*Optional<Closure>          // user: %463
  release_value %449 : $Array<Closure>            // id: %462
  switch_enum %461 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %463

// %464                                           // users: %470, %465
bb19(%464 : $Closure):                            // Preds: bb18
  %465 = ref_element_addr %464 : $Closure, #Closure.closure // user: %466
  %466 = begin_access [read] [dynamic] %465 : $*@callee_guaranteed () -> () // users: %467, %469
  %467 = load %466 : $*@callee_guaranteed () -> () // users: %474, %471, %468
  strong_retain %467 : $@callee_guaranteed () -> () // id: %468
  end_access %466 : $*@callee_guaranteed () -> () // id: %469
  strong_release %464 : $Closure                  // id: %470
  %471 = apply %467() : $@callee_guaranteed () -> ()
  %472 = tuple ()                                 // user: %473
  %473 = enum $Optional<()>, #Optional.some!enumelt, %472 : $() // user: %477
  strong_release %467 : $@callee_guaranteed () -> () // id: %474
  dealloc_stack %455 : $*Optional<Closure>        // id: %475
  dealloc_stack %452 : $*Array<Closure>           // id: %476
  br bb20(%473 : $Optional<()>)                   // id: %477

bb20(%478 : $Optional<()>):                       // Preds: bb21 bb19
  br bb25                                         // id: %479

bb21:                                             // Preds: bb18
  dealloc_stack %455 : $*Optional<Closure>        // id: %480
  dealloc_stack %452 : $*Array<Closure>           // id: %481
  %482 = enum $Optional<()>, #Optional.none!enumelt // user: %483
  br bb20(%482 : $Optional<()>)                   // id: %483

bb22:                                             // Preds: bb17
  release_value %195 : $Optional<String>          // id: %484
  retain_value %195 : $Optional<String>           // id: %485
  debug_value %195 : $Optional<String>, let, name "$match" // id: %486
  %487 = string_literal utf8 "exit"               // user: %492
  %488 = integer_literal $Builtin.Word, 4         // user: %492
  %489 = integer_literal $Builtin.Int1, -1        // user: %492
  %490 = metatype $@thin String.Type              // user: %492
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %491 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %492
  %492 = apply %491(%487, %488, %489, %490) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %493
  %493 = enum $Optional<String>, #Optional.some!enumelt, %492 : $String // user: %495
  %494 = alloc_stack $Optional<String>            // users: %495, %500, %503, %502
  store %493 to %494 : $*Optional<String>         // id: %495
  %496 = alloc_stack $Optional<String>            // users: %497, %500, %501
  store %195 to %496 : $*Optional<String>         // id: %497
  %498 = metatype $@thin Optional<String>.Type    // user: %500
  // function_ref static Optional<A>.== infix(_:_:)
  %499 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %500
  %500 = apply %499<String>(%494, %496, %498) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %504
  dealloc_stack %496 : $*Optional<String>         // id: %501
  destroy_addr %494 : $*Optional<String>          // id: %502
  dealloc_stack %494 : $*Optional<String>         // id: %503
  %504 = struct_extract %500 : $Bool, #Bool._value // user: %505
  cond_br %504, bb23, bb24                        // id: %505

bb23:                                             // Preds: bb22
  release_value %195 : $Optional<String>          // id: %506
  %507 = integer_literal $Builtin.Int1, 0         // user: %508
  %508 = struct $Bool (%507 : $Builtin.Int1)      // user: %510
  %509 = begin_access [modify] [static] %159 : $*Bool // users: %510, %511
  store %508 to %509 : $*Bool                     // id: %510
  end_access %509 : $*Bool                        // id: %511
  br bb25                                         // id: %512

bb24:                                             // Preds: bb22
  release_value %195 : $Optional<String>          // id: %513
  %514 = integer_literal $Builtin.Word, 1         // user: %516
  // function_ref _allocateUninitializedArray<A>(_:)
  %515 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %516
  %516 = apply %515<Any>(%514) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %518, %517
  %517 = tuple_extract %516 : $(Array<Any>, Builtin.RawPointer), 0 // users: %536, %533
  %518 = tuple_extract %516 : $(Array<Any>, Builtin.RawPointer), 1 // user: %519
  %519 = pointer_to_address %518 : $Builtin.RawPointer to [strict] $*Any // user: %526
  %520 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %525
  %521 = integer_literal $Builtin.Word, 44        // user: %525
  %522 = integer_literal $Builtin.Int1, 0         // user: %525
  %523 = metatype $@thin String.Type              // user: %525
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %524 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %525
  %525 = apply %524(%520, %521, %522, %523) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %527
  %526 = init_existential_addr %519 : $*Any, $String // user: %527
  store %525 to %526 : $*String                   // id: %527
  // function_ref default argument 1 of print(_:separator:terminator:)
  %528 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %529
  %529 = apply %528() : $@convention(thin) () -> @owned String // users: %535, %533
  // function_ref default argument 2 of print(_:separator:terminator:)
  %530 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %531
  %531 = apply %530() : $@convention(thin) () -> @owned String // users: %534, %533
  // function_ref print(_:separator:terminator:)
  %532 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %533
  %533 = apply %532(%517, %529, %531) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %531 : $String                    // id: %534
  release_value %529 : $String                    // id: %535
  release_value %517 : $Array<Any>                // id: %536
  br bb25                                         // id: %537

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  release_value %195 : $Optional<String>          // id: %538
  br bb1                                          // id: %539

bb26:                                             // Preds: bb1
  %540 = integer_literal $Builtin.Word, 1         // user: %542
  // function_ref _allocateUninitializedArray<A>(_:)
  %541 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %542
  %542 = apply %541<Any>(%540) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %544, %543
  %543 = tuple_extract %542 : $(Array<Any>, Builtin.RawPointer), 0 // users: %562, %559
  %544 = tuple_extract %542 : $(Array<Any>, Builtin.RawPointer), 1 // user: %545
  %545 = pointer_to_address %544 : $Builtin.RawPointer to [strict] $*Any // user: %552
  %546 = string_literal utf8 "===== will end"     // user: %551
  %547 = integer_literal $Builtin.Word, 14        // user: %551
  %548 = integer_literal $Builtin.Int1, -1        // user: %551
  %549 = metatype $@thin String.Type              // user: %551
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %550 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %551
  %551 = apply %550(%546, %547, %548, %549) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %553
  %552 = init_existential_addr %545 : $*Any, $String // user: %553
  store %551 to %552 : $*String                   // id: %553
  // function_ref default argument 1 of print(_:separator:terminator:)
  %554 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %555
  %555 = apply %554() : $@convention(thin) () -> @owned String // users: %561, %559
  // function_ref default argument 2 of print(_:separator:terminator:)
  %556 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %557
  %557 = apply %556() : $@convention(thin) () -> @owned String // users: %560, %559
  // function_ref print(_:separator:terminator:)
  %558 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %559
  %559 = apply %558(%543, %555, %557) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %557 : $String                    // id: %560
  release_value %555 : $String                    // id: %561
  release_value %543 : $Array<Any>                // id: %562
  dealloc_stack %159 : $*Bool                     // id: %563
  destroy_addr %125 : $*Array<Closure>            // id: %564
  dealloc_stack %125 : $*Array<Closure>           // id: %565
  strong_release %98 : $@callee_guaranteed () -> () // id: %566
  strong_release %86 : $@callee_guaranteed () -> () // id: %567
  strong_release %76 : $@callee_guaranteed () -> () // id: %568
  strong_release %68 : $@callee_guaranteed () -> () // id: %569
  strong_release %59 : ${ var Int }               // id: %570
  strong_release %11 : $Number                    // id: %571
  strong_release %5 : $Empty                      // id: %572
  strong_release %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %573
  %574 = tuple ()                                 // user: %575
  return %574 : $()                               // id: %575
} // end sil function '$s4file3fooyyF'

// closure #1 in foo()
sil private @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () {
// %0 "name"                                      // users: %4, %3, %1
bb0(%0 : $String):
  debug_value %0 : $String, let, name "name", argno 1 // id: %1
  // function_ref closure #1 in closure #1 in foo()
  %2 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %4
  retain_value %0 : $String                       // id: %3
  %4 = partial_apply [callee_guaranteed] %2(%0) : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %5
  return %4 : $@callee_guaranteed (Int, Int, Int) -> () // id: %5
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_'

// closure #1 in closure #1 in foo()
sil private @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %53, %4
// %1 "weak"                                      // users: %71, %5
// %2 "unowned"                                   // users: %89, %6
// %3 "name"                                      // users: %35, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %12, %11
  %11 = tuple_extract %10 : $(Array<Any>, Builtin.RawPointer), 0 // users: %123, %120
  %12 = tuple_extract %10 : $(Array<Any>, Builtin.RawPointer), 1 // user: %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %113
  %14 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %106, %22, %109, %108, %29, %36, %47, %54, %65, %72, %83, %90, %101
  %15 = integer_literal $Builtin.Int64, 39        // user: %16
  %16 = struct $Int (%15 : $Builtin.Int64)        // user: %21
  %17 = integer_literal $Builtin.Int64, 4         // user: %18
  %18 = struct $Int (%17 : $Builtin.Int64)        // user: %21
  %19 = metatype $@thin DefaultStringInterpolation.Type // user: %21
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %20 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %21
  %21 = apply %20(%16, %18, %19) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %22
  store %21 to %14 : $*DefaultStringInterpolation // id: %22
  %23 = string_literal utf8 "Name: "              // user: %28
  %24 = integer_literal $Builtin.Word, 6          // user: %28
  %25 = integer_literal $Builtin.Int1, -1         // user: %28
  %26 = metatype $@thin String.Type               // user: %28
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %27 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %28 = apply %27(%23, %24, %25, %26) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %33, %31
  %29 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %32, %31
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %30 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %31
  %31 = apply %30(%28, %29) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %29 : $*DefaultStringInterpolation   // id: %32
  release_value %28 : $String                     // id: %33
  %34 = alloc_stack $String                       // users: %35, %40, %38
  store %3 to %34 : $*String                      // id: %35
  %36 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %39, %38
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %37 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %38
  %38 = apply %37<String>(%34, %36) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %36 : $*DefaultStringInterpolation   // id: %39
  dealloc_stack %34 : $*String                    // id: %40
  %41 = string_literal utf8 "; Strong: ("         // user: %46
  %42 = integer_literal $Builtin.Word, 11         // user: %46
  %43 = integer_literal $Builtin.Int1, -1         // user: %46
  %44 = metatype $@thin String.Type               // user: %46
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %45 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %46
  %46 = apply %45(%41, %42, %43, %44) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %51, %49
  %47 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %50, %49
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %48 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %49
  %49 = apply %48(%46, %47) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %47 : $*DefaultStringInterpolation   // id: %50
  release_value %46 : $String                     // id: %51
  %52 = alloc_stack $Int                          // users: %53, %58, %56
  store %0 to %52 : $*Int                         // id: %53
  %54 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 "); Weak: ("          // user: %64
  %60 = integer_literal $Builtin.Word, 10         // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  release_value %64 : $String                     // id: %69
  %70 = alloc_stack $Int                          // users: %71, %76, %74
  store %1 to %70 : $*Int                         // id: %71
  %72 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %75, %74
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %73 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %74
  %74 = apply %73<Int>(%70, %72) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %72 : $*DefaultStringInterpolation   // id: %75
  dealloc_stack %70 : $*Int                       // id: %76
  %77 = string_literal utf8 "); Unowned("         // user: %82
  %78 = integer_literal $Builtin.Word, 11         // user: %82
  %79 = integer_literal $Builtin.Int1, -1         // user: %82
  %80 = metatype $@thin String.Type               // user: %82
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %81 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %82
  %82 = apply %81(%77, %78, %79, %80) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %87, %85
  %83 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %86, %85
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %84 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %85
  %85 = apply %84(%82, %83) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %83 : $*DefaultStringInterpolation   // id: %86
  release_value %82 : $String                     // id: %87
  %88 = alloc_stack $Int                          // users: %89, %94, %92
  store %2 to %88 : $*Int                         // id: %89
  %90 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %93, %92
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %91 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %92
  %92 = apply %91<Int>(%88, %90) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %90 : $*DefaultStringInterpolation   // id: %93
  dealloc_stack %88 : $*Int                       // id: %94
  %95 = string_literal utf8 ")"                   // user: %100
  %96 = integer_literal $Builtin.Word, 1          // user: %100
  %97 = integer_literal $Builtin.Int1, -1         // user: %100
  %98 = metatype $@thin String.Type               // user: %100
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %99 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %100
  %100 = apply %99(%95, %96, %97, %98) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %105, %103
  %101 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %104, %103
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %102 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %103
  %103 = apply %102(%100, %101) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %101 : $*DefaultStringInterpolation  // id: %104
  release_value %100 : $String                    // id: %105
  %106 = load %14 : $*DefaultStringInterpolation  // users: %112, %107
  retain_value %106 : $DefaultStringInterpolation // id: %107
  destroy_addr %14 : $*DefaultStringInterpolation // id: %108
  dealloc_stack %14 : $*DefaultStringInterpolation // id: %109
  %110 = metatype $@thin String.Type              // user: %112
  // function_ref String.init(stringInterpolation:)
  %111 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %112
  %112 = apply %111(%106, %110) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %114
  %113 = init_existential_addr %13 : $*Any, $String // user: %114
  store %112 to %113 : $*String                   // id: %114
  // function_ref default argument 1 of print(_:separator:terminator:)
  %115 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %116
  %116 = apply %115() : $@convention(thin) () -> @owned String // users: %122, %120
  // function_ref default argument 2 of print(_:separator:terminator:)
  %117 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %118
  %118 = apply %117() : $@convention(thin) () -> @owned String // users: %121, %120
  // function_ref print(_:separator:terminator:)
  %119 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %120
  %120 = apply %119(%11, %116, %118) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %118 : $String                    // id: %121
  release_value %116 : $String                    // id: %122
  release_value %11 : $Array<Any>                 // id: %123
  %124 = tuple ()                                 // user: %125
  return %124 : $()                               // id: %125
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] [_semantics "array.uninitialized_intrinsic"] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer)

// Int.init(_builtinIntegerLiteral:)
sil public_external [transparent] [serialized] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int {
// %0                                             // user: %2
bb0(%0 : $Builtin.IntLiteral, %1 : $@thin Int.Type):
  %2 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%0 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %3
  %3 = tuple_extract %2 : $(Builtin.Int64, Builtin.Int1), 0 // user: %4
  %4 = struct $Int (%3 : $Builtin.Int64)          // user: %5
  return %4 : $Int                                // id: %5
} // end sil function '$sSi22_builtinIntegerLiteralSiBI_tcfC'

// DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
sil [serialized] @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// DefaultStringInterpolation.appendLiteral(_:)
sil [serialized] @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// String.init(stringInterpolation:)
sil [serialized] [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String

// default argument 1 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 " "                    // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA0_'

// default argument 2 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 "\n"                   // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA1_'

// print(_:separator:terminator:)
sil @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()

// closure #2 in foo()
sil private @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () {
// %0 "number"                                    // users: %3, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %1
  %2 = integer_literal $Builtin.Int64, 1          // user: %8
  %3 = ref_element_addr %0 : $Number, #Number.number // user: %4
  %4 = begin_access [modify] [dynamic] %3 : $*Int // users: %13, %5, %15
  %5 = struct_element_addr %4 : $*Int, #Int._value // user: %6
  %6 = load %5 : $*Builtin.Int64                  // user: %8
  %7 = integer_literal $Builtin.Int1, -1          // user: %8
  %8 = builtin "sadd_with_overflow_Int64"(%6 : $Builtin.Int64, %2 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %10, %9
  %9 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 0 // user: %12
  %10 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 1 // user: %11
  cond_fail %10 : $Builtin.Int1, "arithmetic overflow" // id: %11
  %12 = struct $Int (%9 : $Builtin.Int64)         // user: %13
  store %12 to %4 : $*Int                         // id: %13
  %14 = tuple ()
  end_access %4 : $*Int                           // id: %15
  %16 = tuple ()                                  // user: %17
  return %16 : $()                                // id: %17
} // end sil function '$s4file3fooyyFyycfU0_'

// static Int.+= infix(_:_:)
sil public_external [transparent] [serialized] @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () {
// %0                                             // users: %14, %3
// %1                                             // user: %5
bb0(%0 : $*Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_element_addr %0 : $*Int, #Int._value // user: %4
  %4 = load %3 : $*Builtin.Int64                  // user: %7
  %5 = struct_extract %1 : $Int, #Int._value      // user: %7
  %6 = integer_literal $Builtin.Int1, -1          // user: %7
  %7 = builtin "sadd_with_overflow_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %9, %8
  %8 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 0 // user: %13
  %9 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 1 // user: %12
  br bb1                                          // id: %10

bb1:                                              // Preds: bb0
  br bb2                                          // id: %11

bb2:                                              // Preds: bb1
  cond_fail %9 : $Builtin.Int1, "arithmetic overflow" // id: %12
  %13 = struct $Int (%8 : $Builtin.Int64)         // user: %14
  store %13 to %0 : $*Int                         // id: %14
  %15 = tuple ()                                  // user: %16
  return %15 : $()                                // id: %16
} // end sil function '$sSi2peoiyySiz_SitFZ'

// closure #3 in foo()
sil private @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %6, %2
// %1 "value"                                     // user: %3
bb0(%0 : $Number, %1 : ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %45, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = integer_literal $Builtin.Int64, 1          // user: %11
  %6 = ref_element_addr %0 : $Number, #Number.number // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*Int // users: %16, %8, %18
  %8 = struct_element_addr %7 : $*Int, #Int._value // user: %9
  %9 = load %8 : $*Builtin.Int64                  // user: %11
  %10 = integer_literal $Builtin.Int1, -1         // user: %11
  %11 = builtin "sadd_with_overflow_Int64"(%9 : $Builtin.Int64, %5 : $Builtin.Int64, %10 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %13, %12
  %12 = tuple_extract %11 : $(Builtin.Int64, Builtin.Int1), 0 // user: %15
  %13 = tuple_extract %11 : $(Builtin.Int64, Builtin.Int1), 1 // user: %14
  cond_fail %13 : $Builtin.Int1, "arithmetic overflow" // id: %14
  %15 = struct $Int (%12 : $Builtin.Int64)        // user: %16
  store %15 to %7 : $*Int                         // id: %16
  %17 = tuple ()
  end_access %7 : $*Int                           // id: %18
  %19 = integer_literal $Builtin.Word, 1          // user: %21
  // function_ref _allocateUninitializedArray<A>(_:)
  %20 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %21
  %21 = apply %20<Any>(%19) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %23, %22
  %22 = tuple_extract %21 : $(Array<Any>, Builtin.RawPointer), 0 // users: %83, %80
  %23 = tuple_extract %21 : $(Array<Any>, Builtin.RawPointer), 1 // user: %24
  %24 = pointer_to_address %23 : $Builtin.RawPointer to [strict] $*Any // user: %73
  %25 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %66, %33, %69, %68, %40, %50, %61
  %26 = integer_literal $Builtin.Int64, 3         // user: %27
  %27 = struct $Int (%26 : $Builtin.Int64)        // user: %32
  %28 = integer_literal $Builtin.Int64, 1         // user: %29
  %29 = struct $Int (%28 : $Builtin.Int64)        // user: %32
  %30 = metatype $@thin DefaultStringInterpolation.Type // user: %32
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %31 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %32
  %32 = apply %31(%27, %29, %30) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %33
  store %32 to %25 : $*DefaultStringInterpolation // id: %33
  %34 = string_literal utf8 "v: "                 // user: %39
  %35 = integer_literal $Builtin.Word, 3          // user: %39
  %36 = integer_literal $Builtin.Int1, -1         // user: %39
  %37 = metatype $@thin String.Type               // user: %39
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %38 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %39
  %39 = apply %38(%34, %35, %36, %37) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %44, %42
  %40 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %43, %42
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %41 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %42
  %42 = apply %41(%39, %40) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %40 : $*DefaultStringInterpolation   // id: %43
  release_value %39 : $String                     // id: %44
  %45 = begin_access [read] [dynamic] %3 : $*Int  // users: %46, %47
  %46 = load %45 : $*Int                          // user: %49
  end_access %45 : $*Int                          // id: %47
  %48 = alloc_stack $Int                          // users: %49, %54, %52
  store %46 to %48 : $*Int                        // id: %49
  %50 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %53, %52
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %51 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %52
  %52 = apply %51<Int>(%48, %50) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %50 : $*DefaultStringInterpolation   // id: %53
  dealloc_stack %48 : $*Int                       // id: %54
  %55 = string_literal utf8 ""                    // user: %60
  %56 = integer_literal $Builtin.Word, 0          // user: %60
  %57 = integer_literal $Builtin.Int1, -1         // user: %60
  %58 = metatype $@thin String.Type               // user: %60
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %59 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %60
  %60 = apply %59(%55, %56, %57, %58) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %65, %63
  %61 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %64, %63
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %62 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %63
  %63 = apply %62(%60, %61) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %61 : $*DefaultStringInterpolation   // id: %64
  release_value %60 : $String                     // id: %65
  %66 = load %25 : $*DefaultStringInterpolation   // users: %72, %67
  retain_value %66 : $DefaultStringInterpolation  // id: %67
  destroy_addr %25 : $*DefaultStringInterpolation // id: %68
  dealloc_stack %25 : $*DefaultStringInterpolation // id: %69
  %70 = metatype $@thin String.Type               // user: %72
  // function_ref String.init(stringInterpolation:)
  %71 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %72
  %72 = apply %71(%66, %70) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %74
  %73 = init_existential_addr %24 : $*Any, $String // user: %74
  store %72 to %73 : $*String                     // id: %74
  // function_ref default argument 1 of print(_:separator:terminator:)
  %75 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %76
  %76 = apply %75() : $@convention(thin) () -> @owned String // users: %82, %80
  // function_ref default argument 2 of print(_:separator:terminator:)
  %77 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %78
  %78 = apply %77() : $@convention(thin) () -> @owned String // users: %81, %80
  // function_ref print(_:separator:terminator:)
  %79 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %80
  %80 = apply %79(%22, %76, %78) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %78 : $String                     // id: %81
  release_value %76 : $String                     // id: %82
  release_value %22 : $Array<Any>                 // id: %83
  %84 = tuple ()                                  // user: %85
  return %84 : $()                                // id: %85
} // end sil function '$s4file3fooyyFyycfU1_'

// closure #4 in foo()
sil private @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () {
// %0 "number"                                    // users: %5, %2
// %1 "empty"                                     // users: %19, %3
bb0(%0 : $Number, %1 : $Empty):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %3
  %4 = integer_literal $Builtin.Int64, 1          // user: %10
  %5 = ref_element_addr %0 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %15, %7, %17
  %7 = struct_element_addr %6 : $*Int, #Int._value // user: %8
  %8 = load %7 : $*Builtin.Int64                  // user: %10
  %9 = integer_literal $Builtin.Int1, -1          // user: %10
  %10 = builtin "sadd_with_overflow_Int64"(%8 : $Builtin.Int64, %4 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %12, %11
  %11 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 0 // user: %14
  %12 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 1 // user: %13
  cond_fail %12 : $Builtin.Int1, "arithmetic overflow" // id: %13
  %14 = struct $Int (%11 : $Builtin.Int64)        // user: %15
  store %14 to %6 : $*Int                         // id: %15
  %16 = tuple ()
  end_access %6 : $*Int                           // id: %17
  // function_ref Empty.foo()
  %18 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %19
  %19 = apply %18(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %20 = tuple ()                                  // user: %21
  return %20 : $()                                // id: %21
} // end sil function '$s4file3fooyyFyycfU2_'

// closure #5 in foo()
sil private @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %8, %3
// %1 "empty"                                     // users: %22, %4
// %2 "value"                                     // user: %5
bb0(%0 : $Number, %1 : $Empty, %2 : ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %49, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = integer_literal $Builtin.Int64, 1          // user: %13
  %8 = ref_element_addr %0 : $Number, #Number.number // user: %9
  %9 = begin_access [modify] [dynamic] %8 : $*Int // users: %18, %10, %20
  %10 = struct_element_addr %9 : $*Int, #Int._value // user: %11
  %11 = load %10 : $*Builtin.Int64                // user: %13
  %12 = integer_literal $Builtin.Int1, -1         // user: %13
  %13 = builtin "sadd_with_overflow_Int64"(%11 : $Builtin.Int64, %7 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %15, %14
  %14 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 0 // user: %17
  %15 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 1 // user: %16
  cond_fail %15 : $Builtin.Int1, "arithmetic overflow" // id: %16
  %17 = struct $Int (%14 : $Builtin.Int64)        // user: %18
  store %17 to %9 : $*Int                         // id: %18
  %19 = tuple ()
  end_access %9 : $*Int                           // id: %20
  // function_ref Empty.foo()
  %21 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %22
  %22 = apply %21(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %23 = integer_literal $Builtin.Word, 1          // user: %25
  // function_ref _allocateUninitializedArray<A>(_:)
  %24 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %25
  %25 = apply %24<Any>(%23) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %27, %26
  %26 = tuple_extract %25 : $(Array<Any>, Builtin.RawPointer), 0 // users: %87, %84
  %27 = tuple_extract %25 : $(Array<Any>, Builtin.RawPointer), 1 // user: %28
  %28 = pointer_to_address %27 : $Builtin.RawPointer to [strict] $*Any // user: %77
  %29 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %70, %37, %73, %72, %44, %54, %65
  %30 = integer_literal $Builtin.Int64, 3         // user: %31
  %31 = struct $Int (%30 : $Builtin.Int64)        // user: %36
  %32 = integer_literal $Builtin.Int64, 1         // user: %33
  %33 = struct $Int (%32 : $Builtin.Int64)        // user: %36
  %34 = metatype $@thin DefaultStringInterpolation.Type // user: %36
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %35 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %36
  %36 = apply %35(%31, %33, %34) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %37
  store %36 to %29 : $*DefaultStringInterpolation // id: %37
  %38 = string_literal utf8 "v: "                 // user: %43
  %39 = integer_literal $Builtin.Word, 3          // user: %43
  %40 = integer_literal $Builtin.Int1, -1         // user: %43
  %41 = metatype $@thin String.Type               // user: %43
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %42 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %43
  %43 = apply %42(%38, %39, %40, %41) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %48, %46
  %44 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %47, %46
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %45 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %46
  %46 = apply %45(%43, %44) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %44 : $*DefaultStringInterpolation   // id: %47
  release_value %43 : $String                     // id: %48
  %49 = begin_access [read] [dynamic] %5 : $*Int  // users: %50, %51
  %50 = load %49 : $*Int                          // user: %53
  end_access %49 : $*Int                          // id: %51
  %52 = alloc_stack $Int                          // users: %53, %58, %56
  store %50 to %52 : $*Int                        // id: %53
  %54 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 ""                    // user: %64
  %60 = integer_literal $Builtin.Word, 0          // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  release_value %64 : $String                     // id: %69
  %70 = load %29 : $*DefaultStringInterpolation   // users: %76, %71
  retain_value %70 : $DefaultStringInterpolation  // id: %71
  destroy_addr %29 : $*DefaultStringInterpolation // id: %72
  dealloc_stack %29 : $*DefaultStringInterpolation // id: %73
  %74 = metatype $@thin String.Type               // user: %76
  // function_ref String.init(stringInterpolation:)
  %75 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %76
  %76 = apply %75(%70, %74) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %78
  %77 = init_existential_addr %28 : $*Any, $String // user: %78
  store %76 to %77 : $*String                     // id: %78
  // function_ref default argument 1 of print(_:separator:terminator:)
  %79 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %80
  %80 = apply %79() : $@convention(thin) () -> @owned String // users: %86, %84
  // function_ref default argument 2 of print(_:separator:terminator:)
  %81 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %82
  %82 = apply %81() : $@convention(thin) () -> @owned String // users: %85, %84
  // function_ref print(_:separator:terminator:)
  %83 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %84
  %84 = apply %83(%26, %80, %82) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %82 : $String                     // id: %85
  release_value %80 : $String                     // id: %86
  release_value %26 : $Array<Any>                 // id: %87
  %88 = tuple ()                                  // user: %89
  return %88 : $()                                // id: %89
} // end sil function '$s4file3fooyyFyycfU3_'

// Array.init()
sil [serialized] [_semantics "array.init.empty"] @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>

// Array.reserveCapacity(_:)
sil [serialized] [_semantics "array.mutate_unknown"] @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()

// Bool.init(_builtinBooleanLiteral:)
sil public_external [transparent] [serialized] @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Builtin.Int1, %1 : $@thin Bool.Type):
  %2 = struct $Bool (%0 : $Builtin.Int1)          // user: %3
  return %2 : $Bool                               // id: %3
} // end sil function '$sSb22_builtinBooleanLiteralSbBi1__tcfC'

// default argument 0 of readLine(strippingNewline:)
sil shared_external [serialized] @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool {
bb0:
  %0 = integer_literal $Builtin.Int1, -1          // user: %1
  %1 = struct $Bool (%0 : $Builtin.Int1)          // user: %2
  return %1 : $Bool                               // id: %2
} // end sil function '$ss8readLine16strippingNewlineSSSgSb_tFfA_'

// readLine(strippingNewline:)
sil @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String>

// ~= infix<A>(_:_:)
sil public_external [transparent] [serialized] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <T where T : Equatable> (@in_guaranteed T, @in_guaranteed T) -> Bool {
// %0                                             // user: %4
// %1                                             // user: %4
bb0(%0 : $*T, %1 : $*T):
  %2 = metatype $@thick T.Type                    // user: %4
  %3 = witness_method $T, #Equatable."==" : <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %4
  %4 = apply %3<T>(%0, %1, %2) : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %5
  return %4 : $Bool                               // id: %5
} // end sil function '$ss2teoiySbx_xtSQRzlF'

// Array.append(_:)
sil [serialized] [_semantics "array.append_element"] @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()

// Collection.isEmpty.getter
sil [serialized] @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool

// static Bool.! prefix(_:)
sil public_external [transparent] [serialized] @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Bool, %1 : $@thin Bool.Type):
  %2 = struct_extract %0 : $Bool, #Bool._value    // user: %4
  %3 = integer_literal $Builtin.Int1, -1          // user: %4
  %4 = builtin "xor_Int1"(%2 : $Builtin.Int1, %3 : $Builtin.Int1) : $Builtin.Int1 // user: %5
  %5 = struct $Bool (%4 : $Builtin.Int1)          // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sSb1nopyS2bFZ'

// RangeReplaceableCollection<>.removeLast()
sil [serialized] @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element

// BidirectionalCollection.last.getter
sil [serialized] @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>

// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
sil shared_external [transparent] [serialized] [thunk] @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thick Optional<τ_0_0>.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Optional<τ_0_0>, %1 : $*Optional<τ_0_0>, %2 : $@thick Optional<τ_0_0>.Type):
  %3 = metatype $@thin Optional<τ_0_0>.Type      // user: %5
  // function_ref static Optional<A>.== infix(_:_:)
  %4 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %5
  %5 = apply %4<τ_0_0>(%0, %1, %3) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW'

// static Optional<A>.== infix(_:_:)
sil [serialized] @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool

sil_vtable Empty {
  #Empty.init!allocator: (Empty.Type) -> () -> Empty : @$s4file5EmptyCACycfC	// Empty.__allocating_init()
  #Empty.deinit!deallocator: @$s4file5EmptyCfD	// Empty.__deallocating_deinit
}

sil_vtable Number {
  #Number.init!allocator: (Number.Type) -> (Int) -> Number : @$s4file6NumberC6numberACSi_tcfC	// Number.__allocating_init(number:)
  #Number.deinit!deallocator: @$s4file6NumberCfD	// Number.__deallocating_deinit
}

sil_vtable Closure {
  #Closure.init!allocator: (Closure.Type) -> (@escaping () -> ()) -> Closure : @$s4file7ClosureCyACyyccfC	// Closure.__allocating_init(_:)
  #Closure.deinit!deallocator: @$s4file7ClosureCfD	// Closure.__deallocating_deinit
}

sil_witness_table public_external [serialized] <Wrapped where Wrapped : Equatable> Optional<Wrapped>: Equatable module Swift {
  method #Equatable."==": <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW	// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
  conditional_conformance (Wrapped: Equatable): dependent
}



*** SIL module before IRGen Preparation ***
sil_stage lowered

import Builtin
import Swift
import SwiftShims

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

// Empty.foo()
sil hidden @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4file5EmptyC3fooyyF'

// Empty.deinit
sil hidden @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Empty to $Builtin.NativeObject // user: %3
  return %2 : $Builtin.NativeObject               // id: %3
} // end sil function '$s4file5EmptyCfd'

// Empty.__deallocating_deinit
sil hidden @$s4file5EmptyCfD : $@convention(method) (@owned Empty) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  // function_ref Empty.deinit
  %2 = function_ref @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Empty // user: %5
  dealloc_ref %4 : $Empty                         // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4file5EmptyCfD'

// Empty.__allocating_init()
sil hidden [exact_self_class] @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty {
// %0 "$metatype"
bb0(%0 : $@thick Empty.Type):
  %1 = alloc_ref $Empty                           // user: %3
  // function_ref Empty.init()
  %2 = function_ref @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Empty) -> @owned Empty // user: %4
  return %3 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfC'

// Empty.init()
sil hidden @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  return %0 : $Empty                              // id: %2
} // end sil function '$s4file5EmptyCACycfc'

// Number.number.getter
sil hidden [transparent] @$s4file6NumberC6numberSivg : $@convention(method) (@guaranteed Number) -> Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*Int   // users: %4, %5
  %4 = load %3 : $*Int                            // user: %6
  end_access %3 : $*Int                           // id: %5
  return %4 : $Int                                // id: %6
} // end sil function '$s4file6NumberC6numberSivg'

// Number.number.setter
sil hidden [transparent] @$s4file6NumberC6numberSivs : $@convention(method) (Int, @guaranteed Number) -> () {
// %0 "value"                                     // users: %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : $Number):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to %5 : $*Int                          // id: %6
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9
} // end sil function '$s4file6NumberC6numberSivs'

// Number.number.modify
sil hidden [transparent] @$s4file6NumberC6numberSivM : $@yield_once @convention(method) (@guaranteed Number) -> @yields @inout Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*Int // users: %5, %8, %4
  yield %3 : $*Int, resume bb1, unwind bb2        // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file6NumberC6numberSivM'

// Number.__allocating_init(number:)
sil hidden [exact_self_class] @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number {
// %0 "number"                                    // user: %4
// %1 "$metatype"
bb0(%0 : $Int, %1 : $@thick Number.Type):
  %2 = alloc_ref $Number                          // user: %4
  // function_ref Number.init(number:)
  %3 = function_ref @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (Int, @owned Number) -> @owned Number // user: %5
  return %4 : $Number                             // id: %5
} // end sil function '$s4file6NumberC6numberACSi_tcfC'

// Number.init(number:)
sil hidden @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %6, %2
// %1 "self"                                      // users: %8, %4, %3
bb0(%0 : $Int, %1 : $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to %5 : $*Int                          // id: %6
  end_access %5 : $*Int                           // id: %7
  return %1 : $Number                             // id: %8
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

// Number.deinit
sil hidden @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Number to $Builtin.NativeObject // user: %3
  return %2 : $Builtin.NativeObject               // id: %3
} // end sil function '$s4file6NumberCfd'

// Number.__deallocating_deinit
sil hidden @$s4file6NumberCfD : $@convention(method) (@owned Number) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  // function_ref Number.deinit
  %2 = function_ref @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Number // user: %5
  dealloc_ref %4 : $Number                        // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4file6NumberCfD'

// Closure.closure.getter
sil hidden [transparent] @$s4file7ClosureC7closureyycvg : $@convention(method) (@guaranteed Closure) -> @owned @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %4, %6
  %4 = load %3 : $*@callee_guaranteed () -> ()    // users: %7, %5
  strong_retain %4 : $@callee_guaranteed () -> () // id: %5
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %6
  return %4 : $@callee_guaranteed () -> ()        // id: %7
} // end sil function '$s4file7ClosureC7closureyycvg'

// Closure.closure.setter
sil hidden [transparent] @$s4file7ClosureC7closureyycvs : $@convention(method) (@owned @callee_guaranteed () -> (), @guaranteed Closure) -> () {
// %0 "value"                                     // users: %11, %8, %4, %2
// %1 "self"                                      // users: %5, %3
bb0(%0 : $@callee_guaranteed () -> (), %1 : $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "value", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  strong_retain %0 : $@callee_guaranteed () -> () // id: %4
  %5 = ref_element_addr %1 : $Closure, #Closure.closure // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*@callee_guaranteed () -> () // users: %8, %7, %10
  %7 = load %6 : $*@callee_guaranteed () -> ()    // user: %9
  store %0 to %6 : $*@callee_guaranteed () -> ()  // id: %8
  strong_release %7 : $@callee_guaranteed () -> () // id: %9
  end_access %6 : $*@callee_guaranteed () -> ()   // id: %10
  strong_release %0 : $@callee_guaranteed () -> () // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file7ClosureC7closureyycvs'

// Closure.closure.modify
sil hidden [transparent] @$s4file7ClosureC7closureyycvM : $@yield_once @convention(method) (@guaranteed Closure) -> @yields @inout @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %8, %4
  yield %3 : $*@callee_guaranteed () -> (), resume bb1, unwind bb2 // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file7ClosureC7closureyycvM'

// Closure.__allocating_init(_:)
sil hidden [exact_self_class] @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure {
// %0 "block"                                     // user: %4
// %1 "$metatype"
bb0(%0 : $@callee_guaranteed () -> (), %1 : $@thick Closure.Type):
  %2 = alloc_ref $Closure                         // user: %4
  // function_ref Closure.init(_:)
  %3 = function_ref @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %5
  return %4 : $Closure                            // id: %5
} // end sil function '$s4file7ClosureCyACyyccfC'

// Closure.init(_:)
sil hidden @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %9, %7, %4, %2
// %1 "self"                                      // users: %10, %5, %3
bb0(%0 : $@callee_guaranteed () -> (), %1 : $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  strong_retain %0 : $@callee_guaranteed () -> () // id: %4
  %5 = ref_element_addr %1 : $Closure, #Closure.closure // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*@callee_guaranteed () -> () // users: %7, %8
  store %0 to %6 : $*@callee_guaranteed () -> ()  // id: %7
  end_access %6 : $*@callee_guaranteed () -> ()   // id: %8
  strong_release %0 : $@callee_guaranteed () -> () // id: %9
  return %1 : $Closure                            // id: %10
} // end sil function '$s4file7ClosureCyACyyccfc'

// Closure.deinit
sil hidden @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %6, %2, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [deinit] [static] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  destroy_addr %3 : $*@callee_guaranteed () -> () // id: %4
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = unchecked_ref_cast %0 : $Closure to $Builtin.NativeObject // user: %7
  return %6 : $Builtin.NativeObject               // id: %7
} // end sil function '$s4file7ClosureCfd'

// Closure.__deallocating_deinit
sil hidden @$s4file7ClosureCfD : $@convention(method) (@owned Closure) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  // function_ref Closure.deinit
  %2 = function_ref @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Closure // user: %5
  dealloc_ref %4 : $Closure                       // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4file7ClosureCfD'

// foo()
sil hidden @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %573, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %572, %100, %98, %96, %93, %92, %88, %86, %85, %82, %81, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %11
  %8 = integer_literal $Builtin.Int64, 0          // user: %9
  %9 = struct $Int (%8 : $Builtin.Int64)          // user: %11
  // function_ref Number.__allocating_init(number:)
  %10 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %11
  %11 = apply %10(%9, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %571, %101, %98, %95, %91, %90, %89, %86, %84, %80, %79, %78, %76, %74, %72, %71, %70, %68, %67, %65, %64, %12
  debug_value %11 : $Number, let, name "number"   // id: %12
  %13 = integer_literal $Builtin.Word, 1          // user: %15
  // function_ref _allocateUninitializedArray<A>(_:)
  %14 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %15
  %15 = apply %14<Any>(%13) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %17, %16
  %16 = tuple_extract %15 : $(Array<Any>, Builtin.RawPointer), 0 // users: %35, %32
  %17 = tuple_extract %15 : $(Array<Any>, Builtin.RawPointer), 1 // user: %18
  %18 = pointer_to_address %17 : $Builtin.RawPointer to [strict] $*Any // user: %25
  %19 = string_literal utf8 "===== Did init"      // user: %24
  %20 = integer_literal $Builtin.Word, 14         // user: %24
  %21 = integer_literal $Builtin.Int1, -1         // user: %24
  %22 = metatype $@thin String.Type               // user: %24
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %23 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %24
  %24 = apply %23(%19, %20, %21, %22) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %25 = init_existential_addr %18 : $*Any, $String // user: %26
  store %24 to %25 : $*String                     // id: %26
  // function_ref default argument 1 of print(_:separator:terminator:)
  %27 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %28
  %28 = apply %27() : $@convention(thin) () -> @owned String // users: %34, %32
  // function_ref default argument 2 of print(_:separator:terminator:)
  %29 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %30
  %30 = apply %29() : $@convention(thin) () -> @owned String // users: %33, %32
  // function_ref print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %32
  %32 = apply %31(%16, %28, %30) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %30 : $String                     // id: %33
  release_value %28 : $String                     // id: %34
  release_value %16 : $Array<Any>                 // id: %35
  %36 = integer_literal $Builtin.Word, 1          // user: %38
  // function_ref _allocateUninitializedArray<A>(_:)
  %37 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %38
  %38 = apply %37<Any>(%36) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %40, %39
  %39 = tuple_extract %38 : $(Array<Any>, Builtin.RawPointer), 0 // users: %58, %55
  %40 = tuple_extract %38 : $(Array<Any>, Builtin.RawPointer), 1 // user: %41
  %41 = pointer_to_address %40 : $Builtin.RawPointer to [strict] $*Any // user: %48
  %42 = string_literal utf8 "===== Did hook"      // user: %47
  %43 = integer_literal $Builtin.Word, 14         // user: %47
  %44 = integer_literal $Builtin.Int1, -1         // user: %47
  %45 = metatype $@thin String.Type               // user: %47
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %46 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %47
  %47 = apply %46(%42, %43, %44, %45) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %49
  %48 = init_existential_addr %41 : $*Any, $String // user: %49
  store %47 to %48 : $*String                     // id: %49
  // function_ref default argument 1 of print(_:separator:terminator:)
  %50 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %51
  %51 = apply %50() : $@convention(thin) () -> @owned String // users: %57, %55
  // function_ref default argument 2 of print(_:separator:terminator:)
  %52 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %53
  %53 = apply %52() : $@convention(thin) () -> @owned String // users: %56, %55
  // function_ref print(_:separator:terminator:)
  %54 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %55
  %55 = apply %54(%39, %51, %53) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %53 : $String                     // id: %56
  release_value %51 : $String                     // id: %57
  release_value %39 : $Array<Any>                 // id: %58
  %59 = alloc_box ${ var Int }, var, name "value" // users: %570, %98, %97, %76, %75, %60
  %60 = project_box %59 : ${ var Int }, 0         // users: %63, %412
  %61 = integer_literal $Builtin.Int64, 0         // user: %62
  %62 = struct $Int (%61 : $Builtin.Int64)        // user: %63
  store %62 to %60 : $*Int                        // id: %63
  strong_retain %11 : $Number                     // id: %64
  debug_value %11 : $Number, let, name "number"   // id: %65
  // function_ref closure #2 in foo()
  %66 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %68
  strong_retain %11 : $Number                     // id: %67
  %68 = partial_apply [callee_guaranteed] %66(%11) : $@convention(thin) (@guaranteed Number) -> () // users: %569, %222, %220, %69
  debug_value %68 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %69
  strong_release %11 : $Number                    // id: %70
  strong_retain %11 : $Number                     // id: %71
  debug_value %11 : $Number, let, name "number"   // id: %72
  // function_ref closure #3 in foo()
  %73 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %76
  strong_retain %11 : $Number                     // id: %74
  strong_retain %59 : ${ var Int }                // id: %75
  %76 = partial_apply [callee_guaranteed] %73(%11, %59) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %568, %257, %255, %77
  debug_value %76 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %77
  strong_release %11 : $Number                    // id: %78
  strong_retain %11 : $Number                     // id: %79
  debug_value %11 : $Number, let, name "number"   // id: %80
  strong_retain %5 : $Empty                       // id: %81
  debug_value %5 : $Empty, let, name "empty"      // id: %82
  // function_ref closure #4 in foo()
  %83 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %86
  strong_retain %11 : $Number                     // id: %84
  strong_retain %5 : $Empty                       // id: %85
  %86 = partial_apply [callee_guaranteed] %83(%11, %5) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %567, %292, %290, %87
  debug_value %86 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %87
  strong_release %5 : $Empty                      // id: %88
  strong_release %11 : $Number                    // id: %89
  strong_retain %11 : $Number                     // id: %90
  debug_value %11 : $Number, let, name "number"   // id: %91
  strong_retain %5 : $Empty                       // id: %92
  debug_value %5 : $Empty, let, name "empty"      // id: %93
  // function_ref closure #5 in foo()
  %94 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %98
  strong_retain %11 : $Number                     // id: %95
  strong_retain %5 : $Empty                       // id: %96
  strong_retain %59 : ${ var Int }                // id: %97
  %98 = partial_apply [callee_guaranteed] %94(%11, %5, %59) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %566, %327, %325, %99
  debug_value %98 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %99
  strong_release %5 : $Empty                      // id: %100
  strong_release %11 : $Number                    // id: %101
  %102 = integer_literal $Builtin.Word, 1         // user: %104
  // function_ref _allocateUninitializedArray<A>(_:)
  %103 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %104
  %104 = apply %103<Any>(%102) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %106, %105
  %105 = tuple_extract %104 : $(Array<Any>, Builtin.RawPointer), 0 // users: %124, %121
  %106 = tuple_extract %104 : $(Array<Any>, Builtin.RawPointer), 1 // user: %107
  %107 = pointer_to_address %106 : $Builtin.RawPointer to [strict] $*Any // user: %114
  %108 = string_literal utf8 "===== Did init closures" // user: %113
  %109 = integer_literal $Builtin.Word, 23        // user: %113
  %110 = integer_literal $Builtin.Int1, -1        // user: %113
  %111 = metatype $@thin String.Type              // user: %113
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %112 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %113
  %113 = apply %112(%108, %109, %110, %111) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %115
  %114 = init_existential_addr %107 : $*Any, $String // user: %115
  store %113 to %114 : $*String                   // id: %115
  // function_ref default argument 1 of print(_:separator:terminator:)
  %116 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %117
  %117 = apply %116() : $@convention(thin) () -> @owned String // users: %123, %121
  // function_ref default argument 2 of print(_:separator:terminator:)
  %118 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %119
  %119 = apply %118() : $@convention(thin) () -> @owned String // users: %122, %121
  // function_ref print(_:separator:terminator:)
  %120 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %121
  %121 = apply %120(%105, %117, %119) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %119 : $String                    // id: %122
  release_value %117 : $String                    // id: %123
  release_value %105 : $Array<Any>                // id: %124
  %125 = alloc_stack $Array<Closure>, var, name "storage" // users: %129, %565, %564, %132, %225, %260, %295, %330, %359, %378, %448
  %126 = metatype $@thin Array<Closure>.Type      // user: %128
  // function_ref Array.init()
  %127 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %128
  %128 = apply %127<Closure>(%126) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %129
  store %128 to %125 : $*Array<Closure>           // id: %129
  %130 = integer_literal $Builtin.Int64, 100      // user: %131
  %131 = struct $Int (%130 : $Builtin.Int64)      // user: %134
  %132 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %135, %134
  // function_ref Array.reserveCapacity(_:)
  %133 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %134
  %134 = apply %133<Closure>(%131, %132) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %132 : $*Array<Closure>              // id: %135
  %136 = integer_literal $Builtin.Word, 1         // user: %138
  // function_ref _allocateUninitializedArray<A>(_:)
  %137 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %138
  %138 = apply %137<Any>(%136) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %140, %139
  %139 = tuple_extract %138 : $(Array<Any>, Builtin.RawPointer), 0 // users: %158, %155
  %140 = tuple_extract %138 : $(Array<Any>, Builtin.RawPointer), 1 // user: %141
  %141 = pointer_to_address %140 : $Builtin.RawPointer to [strict] $*Any // user: %148
  %142 = string_literal utf8 "===== Did init array" // user: %147
  %143 = integer_literal $Builtin.Word, 20        // user: %147
  %144 = integer_literal $Builtin.Int1, -1        // user: %147
  %145 = metatype $@thin String.Type              // user: %147
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %146 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %147
  %147 = apply %146(%142, %143, %144, %145) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %149
  %148 = init_existential_addr %141 : $*Any, $String // user: %149
  store %147 to %148 : $*String                   // id: %149
  // function_ref default argument 1 of print(_:separator:terminator:)
  %150 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %151
  %151 = apply %150() : $@convention(thin) () -> @owned String // users: %157, %155
  // function_ref default argument 2 of print(_:separator:terminator:)
  %152 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %153
  %153 = apply %152() : $@convention(thin) () -> @owned String // users: %156, %155
  // function_ref print(_:separator:terminator:)
  %154 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %155
  %155 = apply %154(%139, %151, %153) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %153 : $String                    // id: %156
  release_value %151 : $String                    // id: %157
  release_value %139 : $Array<Any>                // id: %158
  %159 = alloc_stack $Bool, var, name "run"       // users: %162, %563, %164, %509
  %160 = integer_literal $Builtin.Int1, -1        // user: %161
  %161 = struct $Bool (%160 : $Builtin.Int1)      // user: %162
  store %161 to %159 : $*Bool                     // id: %162
  br bb1                                          // id: %163

bb1:                                              // Preds: bb25 bb0
  %164 = begin_access [read] [static] %159 : $*Bool // users: %165, %167
  %165 = struct_element_addr %164 : $*Bool, #Bool._value // user: %166
  %166 = load %165 : $*Builtin.Int1               // user: %168
  end_access %164 : $*Bool                        // id: %167
  cond_br %166, bb2, bb26                         // id: %168

bb2:                                              // Preds: bb1
  %169 = integer_literal $Builtin.Word, 1         // user: %171
  // function_ref _allocateUninitializedArray<A>(_:)
  %170 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %171
  %171 = apply %170<Any>(%169) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %173, %172
  %172 = tuple_extract %171 : $(Array<Any>, Builtin.RawPointer), 0 // users: %191, %188
  %173 = tuple_extract %171 : $(Array<Any>, Builtin.RawPointer), 1 // user: %174
  %174 = pointer_to_address %173 : $Builtin.RawPointer to [strict] $*Any // user: %181
  %175 = string_literal utf8 "===== Ask"          // user: %180
  %176 = integer_literal $Builtin.Word, 9         // user: %180
  %177 = integer_literal $Builtin.Int1, -1        // user: %180
  %178 = metatype $@thin String.Type              // user: %180
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %179 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %180
  %180 = apply %179(%175, %176, %177, %178) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %182
  %181 = init_existential_addr %174 : $*Any, $String // user: %182
  store %180 to %181 : $*String                   // id: %182
  // function_ref default argument 1 of print(_:separator:terminator:)
  %183 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %184
  %184 = apply %183() : $@convention(thin) () -> @owned String // users: %190, %188
  // function_ref default argument 2 of print(_:separator:terminator:)
  %185 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %186
  %186 = apply %185() : $@convention(thin) () -> @owned String // users: %189, %188
  // function_ref print(_:separator:terminator:)
  %187 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %188
  %188 = apply %187(%172, %184, %186) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %186 : $String                    // id: %189
  release_value %184 : $String                    // id: %190
  release_value %172 : $Array<Any>                // id: %191
  // function_ref default argument 0 of readLine(strippingNewline:)
  %192 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %193
  %193 = apply %192() : $@convention(thin) () -> Bool // user: %195
  // function_ref readLine(strippingNewline:)
  %194 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %195
  %195 = apply %194(%193) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %538, %513, %506, %497, %486, %485, %484, %447, %438, %427, %426, %425, %410, %401, %390, %389, %387, %358, %349, %338, %337, %336, %323, %314, %303, %302, %301, %288, %279, %268, %267, %266, %253, %244, %233, %232, %231, %218, %209, %198, %197, %196
  debug_value %195 : $Optional<String>, let, name "line" // id: %196
  retain_value %195 : $Optional<String>           // id: %197
  debug_value %195 : $Optional<String>, let, name "$match" // id: %198
  %199 = string_literal utf8 "push1"              // user: %204
  %200 = integer_literal $Builtin.Word, 5         // user: %204
  %201 = integer_literal $Builtin.Int1, -1        // user: %204
  %202 = metatype $@thin String.Type              // user: %204
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %203 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %204
  %204 = apply %203(%199, %200, %201, %202) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %205
  %205 = enum $Optional<String>, #Optional.some!enumelt, %204 : $String // user: %207
  %206 = alloc_stack $Optional<String>            // users: %207, %212, %215, %214
  store %205 to %206 : $*Optional<String>         // id: %207
  %208 = alloc_stack $Optional<String>            // users: %209, %212, %213
  store %195 to %208 : $*Optional<String>         // id: %209
  %210 = metatype $@thin Optional<String>.Type    // user: %212
  // function_ref static Optional<A>.== infix(_:_:)
  %211 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %212
  %212 = apply %211<String>(%206, %208, %210) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %216
  dealloc_stack %208 : $*Optional<String>         // id: %213
  destroy_addr %206 : $*Optional<String>          // id: %214
  dealloc_stack %206 : $*Optional<String>         // id: %215
  %216 = struct_extract %212 : $Bool, #Bool._value // user: %217
  cond_br %216, bb3, bb4                          // id: %217

bb3:                                              // Preds: bb2
  release_value %195 : $Optional<String>          // id: %218
  %219 = metatype $@thick Closure.Type            // user: %222
  strong_retain %68 : $@callee_guaranteed () -> () // id: %220
  // function_ref Closure.__allocating_init(_:)
  %221 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %222
  %222 = apply %221(%68, %219) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %224
  %223 = alloc_stack $Closure                     // users: %224, %229, %227
  store %222 to %223 : $*Closure                  // id: %224
  %225 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %228, %227
  // function_ref Array.append(_:)
  %226 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %227
  %227 = apply %226<Closure>(%223, %225) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %225 : $*Array<Closure>              // id: %228
  dealloc_stack %223 : $*Closure                  // id: %229
  br bb25                                         // id: %230

bb4:                                              // Preds: bb2
  release_value %195 : $Optional<String>          // id: %231
  retain_value %195 : $Optional<String>           // id: %232
  debug_value %195 : $Optional<String>, let, name "$match" // id: %233
  %234 = string_literal utf8 "push1_1"            // user: %239
  %235 = integer_literal $Builtin.Word, 7         // user: %239
  %236 = integer_literal $Builtin.Int1, -1        // user: %239
  %237 = metatype $@thin String.Type              // user: %239
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %238 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %239
  %239 = apply %238(%234, %235, %236, %237) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %240
  %240 = enum $Optional<String>, #Optional.some!enumelt, %239 : $String // user: %242
  %241 = alloc_stack $Optional<String>            // users: %242, %247, %250, %249
  store %240 to %241 : $*Optional<String>         // id: %242
  %243 = alloc_stack $Optional<String>            // users: %244, %247, %248
  store %195 to %243 : $*Optional<String>         // id: %244
  %245 = metatype $@thin Optional<String>.Type    // user: %247
  // function_ref static Optional<A>.== infix(_:_:)
  %246 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %247
  %247 = apply %246<String>(%241, %243, %245) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %251
  dealloc_stack %243 : $*Optional<String>         // id: %248
  destroy_addr %241 : $*Optional<String>          // id: %249
  dealloc_stack %241 : $*Optional<String>         // id: %250
  %251 = struct_extract %247 : $Bool, #Bool._value // user: %252
  cond_br %251, bb5, bb6                          // id: %252

bb5:                                              // Preds: bb4
  release_value %195 : $Optional<String>          // id: %253
  %254 = metatype $@thick Closure.Type            // user: %257
  strong_retain %76 : $@callee_guaranteed () -> () // id: %255
  // function_ref Closure.__allocating_init(_:)
  %256 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %257
  %257 = apply %256(%76, %254) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %259
  %258 = alloc_stack $Closure                     // users: %259, %264, %262
  store %257 to %258 : $*Closure                  // id: %259
  %260 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %263, %262
  // function_ref Array.append(_:)
  %261 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %262
  %262 = apply %261<Closure>(%258, %260) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %260 : $*Array<Closure>              // id: %263
  dealloc_stack %258 : $*Closure                  // id: %264
  br bb25                                         // id: %265

bb6:                                              // Preds: bb4
  release_value %195 : $Optional<String>          // id: %266
  retain_value %195 : $Optional<String>           // id: %267
  debug_value %195 : $Optional<String>, let, name "$match" // id: %268
  %269 = string_literal utf8 "push2"              // user: %274
  %270 = integer_literal $Builtin.Word, 5         // user: %274
  %271 = integer_literal $Builtin.Int1, -1        // user: %274
  %272 = metatype $@thin String.Type              // user: %274
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %273 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %274
  %274 = apply %273(%269, %270, %271, %272) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %275
  %275 = enum $Optional<String>, #Optional.some!enumelt, %274 : $String // user: %277
  %276 = alloc_stack $Optional<String>            // users: %277, %282, %285, %284
  store %275 to %276 : $*Optional<String>         // id: %277
  %278 = alloc_stack $Optional<String>            // users: %279, %282, %283
  store %195 to %278 : $*Optional<String>         // id: %279
  %280 = metatype $@thin Optional<String>.Type    // user: %282
  // function_ref static Optional<A>.== infix(_:_:)
  %281 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %282
  %282 = apply %281<String>(%276, %278, %280) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %286
  dealloc_stack %278 : $*Optional<String>         // id: %283
  destroy_addr %276 : $*Optional<String>          // id: %284
  dealloc_stack %276 : $*Optional<String>         // id: %285
  %286 = struct_extract %282 : $Bool, #Bool._value // user: %287
  cond_br %286, bb7, bb8                          // id: %287

bb7:                                              // Preds: bb6
  release_value %195 : $Optional<String>          // id: %288
  %289 = metatype $@thick Closure.Type            // user: %292
  strong_retain %86 : $@callee_guaranteed () -> () // id: %290
  // function_ref Closure.__allocating_init(_:)
  %291 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %292
  %292 = apply %291(%86, %289) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %294
  %293 = alloc_stack $Closure                     // users: %294, %299, %297
  store %292 to %293 : $*Closure                  // id: %294
  %295 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %298, %297
  // function_ref Array.append(_:)
  %296 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %297
  %297 = apply %296<Closure>(%293, %295) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %295 : $*Array<Closure>              // id: %298
  dealloc_stack %293 : $*Closure                  // id: %299
  br bb25                                         // id: %300

bb8:                                              // Preds: bb6
  release_value %195 : $Optional<String>          // id: %301
  retain_value %195 : $Optional<String>           // id: %302
  debug_value %195 : $Optional<String>, let, name "$match" // id: %303
  %304 = string_literal utf8 "push2_1"            // user: %309
  %305 = integer_literal $Builtin.Word, 7         // user: %309
  %306 = integer_literal $Builtin.Int1, -1        // user: %309
  %307 = metatype $@thin String.Type              // user: %309
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %308 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %309
  %309 = apply %308(%304, %305, %306, %307) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %310
  %310 = enum $Optional<String>, #Optional.some!enumelt, %309 : $String // user: %312
  %311 = alloc_stack $Optional<String>            // users: %312, %317, %320, %319
  store %310 to %311 : $*Optional<String>         // id: %312
  %313 = alloc_stack $Optional<String>            // users: %314, %317, %318
  store %195 to %313 : $*Optional<String>         // id: %314
  %315 = metatype $@thin Optional<String>.Type    // user: %317
  // function_ref static Optional<A>.== infix(_:_:)
  %316 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %317
  %317 = apply %316<String>(%311, %313, %315) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %321
  dealloc_stack %313 : $*Optional<String>         // id: %318
  destroy_addr %311 : $*Optional<String>          // id: %319
  dealloc_stack %311 : $*Optional<String>         // id: %320
  %321 = struct_extract %317 : $Bool, #Bool._value // user: %322
  cond_br %321, bb9, bb10                         // id: %322

bb9:                                              // Preds: bb8
  release_value %195 : $Optional<String>          // id: %323
  %324 = metatype $@thick Closure.Type            // user: %327
  strong_retain %98 : $@callee_guaranteed () -> () // id: %325
  // function_ref Closure.__allocating_init(_:)
  %326 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %327
  %327 = apply %326(%98, %324) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %329
  %328 = alloc_stack $Closure                     // users: %329, %334, %332
  store %327 to %328 : $*Closure                  // id: %329
  %330 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %333, %332
  // function_ref Array.append(_:)
  %331 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %332
  %332 = apply %331<Closure>(%328, %330) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %330 : $*Array<Closure>              // id: %333
  dealloc_stack %328 : $*Closure                  // id: %334
  br bb25                                         // id: %335

bb10:                                             // Preds: bb8
  release_value %195 : $Optional<String>          // id: %336
  retain_value %195 : $Optional<String>           // id: %337
  debug_value %195 : $Optional<String>, let, name "$match" // id: %338
  %339 = string_literal utf8 "pop"                // user: %344
  %340 = integer_literal $Builtin.Word, 3         // user: %344
  %341 = integer_literal $Builtin.Int1, -1        // user: %344
  %342 = metatype $@thin String.Type              // user: %344
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %343 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %344
  %344 = apply %343(%339, %340, %341, %342) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %345
  %345 = enum $Optional<String>, #Optional.some!enumelt, %344 : $String // user: %347
  %346 = alloc_stack $Optional<String>            // users: %347, %352, %355, %354
  store %345 to %346 : $*Optional<String>         // id: %347
  %348 = alloc_stack $Optional<String>            // users: %349, %352, %353
  store %195 to %348 : $*Optional<String>         // id: %349
  %350 = metatype $@thin Optional<String>.Type    // user: %352
  // function_ref static Optional<A>.== infix(_:_:)
  %351 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %352
  %352 = apply %351<String>(%346, %348, %350) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %356
  dealloc_stack %348 : $*Optional<String>         // id: %353
  destroy_addr %346 : $*Optional<String>          // id: %354
  dealloc_stack %346 : $*Optional<String>         // id: %355
  %356 = struct_extract %352 : $Bool, #Bool._value // user: %357
  cond_br %356, bb11, bb14                        // id: %357

bb11:                                             // Preds: bb10
  release_value %195 : $Optional<String>          // id: %358
  %359 = begin_access [read] [static] %125 : $*Array<Closure> // users: %360, %362
  %360 = load %359 : $*Array<Closure>             // users: %371, %364, %361
  retain_value %360 : $Array<Closure>             // id: %361
  end_access %359 : $*Array<Closure>              // id: %362
  %363 = alloc_stack $Array<Closure>              // users: %365, %364, %375
  store %360 to %363 : $*Array<Closure>           // id: %364
  %365 = load %363 : $*Array<Closure>             // user: %367
  %366 = alloc_stack $Array<Closure>              // users: %367, %370, %369
  store %365 to %366 : $*Array<Closure>           // id: %367
  // function_ref Collection.isEmpty.getter
  %368 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %369
  %369 = apply %368<[Closure]>(%366) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %372
  dealloc_stack %366 : $*Array<Closure>           // id: %370
  release_value %360 : $Array<Closure>            // id: %371
  %372 = struct_extract %369 : $Bool, #Bool._value // user: %374
  %373 = integer_literal $Builtin.Int1, -1        // user: %374
  %374 = builtin "xor_Int1"(%372 : $Builtin.Int1, %373 : $Builtin.Int1) : $Builtin.Int1 // user: %376
  dealloc_stack %363 : $*Array<Closure>           // id: %375
  cond_br %374, bb12, bb13                        // id: %376

bb12:                                             // Preds: bb11
  %377 = alloc_stack $Closure                     // users: %382, %384, %380
  %378 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %381, %380
  // function_ref RangeReplaceableCollection<>.removeLast()
  %379 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %380
  %380 = apply %379<[Closure]>(%377, %378) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %378 : $*Array<Closure>              // id: %381
  %382 = load %377 : $*Closure                    // user: %383
  strong_release %382 : $Closure                  // id: %383
  dealloc_stack %377 : $*Closure                  // id: %384
  br bb25                                         // id: %385

bb13:                                             // Preds: bb11
  br bb15                                         // id: %386

bb14:                                             // Preds: bb10
  release_value %195 : $Optional<String>          // id: %387
  br bb15                                         // id: %388

bb15:                                             // Preds: bb13 bb14
  retain_value %195 : $Optional<String>           // id: %389
  debug_value %195 : $Optional<String>, let, name "$match" // id: %390
  %391 = string_literal utf8 "inc"                // user: %396
  %392 = integer_literal $Builtin.Word, 3         // user: %396
  %393 = integer_literal $Builtin.Int1, -1        // user: %396
  %394 = metatype $@thin String.Type              // user: %396
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %395 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %396
  %396 = apply %395(%391, %392, %393, %394) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %397
  %397 = enum $Optional<String>, #Optional.some!enumelt, %396 : $String // user: %399
  %398 = alloc_stack $Optional<String>            // users: %399, %404, %407, %406
  store %397 to %398 : $*Optional<String>         // id: %399
  %400 = alloc_stack $Optional<String>            // users: %401, %404, %405
  store %195 to %400 : $*Optional<String>         // id: %401
  %402 = metatype $@thin Optional<String>.Type    // user: %404
  // function_ref static Optional<A>.== infix(_:_:)
  %403 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %404
  %404 = apply %403<String>(%398, %400, %402) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %408
  dealloc_stack %400 : $*Optional<String>         // id: %405
  destroy_addr %398 : $*Optional<String>          // id: %406
  dealloc_stack %398 : $*Optional<String>         // id: %407
  %408 = struct_extract %404 : $Bool, #Bool._value // user: %409
  cond_br %408, bb16, bb17                        // id: %409

bb16:                                             // Preds: bb15
  release_value %195 : $Optional<String>          // id: %410
  %411 = integer_literal $Builtin.Int64, 1        // user: %416
  %412 = begin_access [modify] [dynamic] %60 : $*Int // users: %421, %413, %423
  %413 = struct_element_addr %412 : $*Int, #Int._value // user: %414
  %414 = load %413 : $*Builtin.Int64              // user: %416
  %415 = integer_literal $Builtin.Int1, -1        // user: %416
  %416 = builtin "sadd_with_overflow_Int64"(%414 : $Builtin.Int64, %411 : $Builtin.Int64, %415 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %418, %417
  %417 = tuple_extract %416 : $(Builtin.Int64, Builtin.Int1), 0 // user: %420
  %418 = tuple_extract %416 : $(Builtin.Int64, Builtin.Int1), 1 // user: %419
  cond_fail %418 : $Builtin.Int1, "arithmetic overflow" // id: %419
  %420 = struct $Int (%417 : $Builtin.Int64)      // user: %421
  store %420 to %412 : $*Int                      // id: %421
  %422 = tuple ()
  end_access %412 : $*Int                         // id: %423
  br bb25                                         // id: %424

bb17:                                             // Preds: bb15
  release_value %195 : $Optional<String>          // id: %425
  retain_value %195 : $Optional<String>           // id: %426
  debug_value %195 : $Optional<String>, let, name "$match" // id: %427
  %428 = string_literal utf8 "exec"               // user: %433
  %429 = integer_literal $Builtin.Word, 4         // user: %433
  %430 = integer_literal $Builtin.Int1, -1        // user: %433
  %431 = metatype $@thin String.Type              // user: %433
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %432 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %433
  %433 = apply %432(%428, %429, %430, %431) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %434
  %434 = enum $Optional<String>, #Optional.some!enumelt, %433 : $String // user: %436
  %435 = alloc_stack $Optional<String>            // users: %436, %441, %444, %443
  store %434 to %435 : $*Optional<String>         // id: %436
  %437 = alloc_stack $Optional<String>            // users: %438, %441, %442
  store %195 to %437 : $*Optional<String>         // id: %438
  %439 = metatype $@thin Optional<String>.Type    // user: %441
  // function_ref static Optional<A>.== infix(_:_:)
  %440 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %441
  %441 = apply %440<String>(%435, %437, %439) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %445
  dealloc_stack %437 : $*Optional<String>         // id: %442
  destroy_addr %435 : $*Optional<String>          // id: %443
  dealloc_stack %435 : $*Optional<String>         // id: %444
  %445 = struct_extract %441 : $Bool, #Bool._value // user: %446
  cond_br %445, bb18, bb22                        // id: %446

bb18:                                             // Preds: bb17
  release_value %195 : $Optional<String>          // id: %447
  %448 = begin_access [read] [static] %125 : $*Array<Closure> // users: %449, %451
  %449 = load %448 : $*Array<Closure>             // users: %462, %453, %450
  retain_value %449 : $Array<Closure>             // id: %450
  end_access %448 : $*Array<Closure>              // id: %451
  %452 = alloc_stack $Array<Closure>              // users: %454, %453, %476, %481
  store %449 to %452 : $*Array<Closure>           // id: %453
  %454 = load %452 : $*Array<Closure>             // user: %457
  %455 = alloc_stack $Optional<Closure>           // users: %461, %475, %480, %459
  %456 = alloc_stack $Array<Closure>              // users: %457, %460, %459
  store %454 to %456 : $*Array<Closure>           // id: %457
  // function_ref BidirectionalCollection.last.getter
  %458 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %459
  %459 = apply %458<[Closure]>(%455, %456) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %456 : $*Array<Closure>           // id: %460
  %461 = load %455 : $*Optional<Closure>          // user: %463
  release_value %449 : $Array<Closure>            // id: %462
  switch_enum %461 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %463

// %464                                           // users: %470, %465
bb19(%464 : $Closure):                            // Preds: bb18
  %465 = ref_element_addr %464 : $Closure, #Closure.closure // user: %466
  %466 = begin_access [read] [dynamic] %465 : $*@callee_guaranteed () -> () // users: %467, %469
  %467 = load %466 : $*@callee_guaranteed () -> () // users: %474, %471, %468
  strong_retain %467 : $@callee_guaranteed () -> () // id: %468
  end_access %466 : $*@callee_guaranteed () -> () // id: %469
  strong_release %464 : $Closure                  // id: %470
  %471 = apply %467() : $@callee_guaranteed () -> ()
  %472 = tuple ()                                 // user: %473
  %473 = enum $Optional<()>, #Optional.some!enumelt, %472 : $() // user: %477
  strong_release %467 : $@callee_guaranteed () -> () // id: %474
  dealloc_stack %455 : $*Optional<Closure>        // id: %475
  dealloc_stack %452 : $*Array<Closure>           // id: %476
  br bb20(%473 : $Optional<()>)                   // id: %477

bb20(%478 : $Optional<()>):                       // Preds: bb21 bb19
  br bb25                                         // id: %479

bb21:                                             // Preds: bb18
  dealloc_stack %455 : $*Optional<Closure>        // id: %480
  dealloc_stack %452 : $*Array<Closure>           // id: %481
  %482 = enum $Optional<()>, #Optional.none!enumelt // user: %483
  br bb20(%482 : $Optional<()>)                   // id: %483

bb22:                                             // Preds: bb17
  release_value %195 : $Optional<String>          // id: %484
  retain_value %195 : $Optional<String>           // id: %485
  debug_value %195 : $Optional<String>, let, name "$match" // id: %486
  %487 = string_literal utf8 "exit"               // user: %492
  %488 = integer_literal $Builtin.Word, 4         // user: %492
  %489 = integer_literal $Builtin.Int1, -1        // user: %492
  %490 = metatype $@thin String.Type              // user: %492
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %491 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %492
  %492 = apply %491(%487, %488, %489, %490) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %493
  %493 = enum $Optional<String>, #Optional.some!enumelt, %492 : $String // user: %495
  %494 = alloc_stack $Optional<String>            // users: %495, %500, %503, %502
  store %493 to %494 : $*Optional<String>         // id: %495
  %496 = alloc_stack $Optional<String>            // users: %497, %500, %501
  store %195 to %496 : $*Optional<String>         // id: %497
  %498 = metatype $@thin Optional<String>.Type    // user: %500
  // function_ref static Optional<A>.== infix(_:_:)
  %499 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %500
  %500 = apply %499<String>(%494, %496, %498) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %504
  dealloc_stack %496 : $*Optional<String>         // id: %501
  destroy_addr %494 : $*Optional<String>          // id: %502
  dealloc_stack %494 : $*Optional<String>         // id: %503
  %504 = struct_extract %500 : $Bool, #Bool._value // user: %505
  cond_br %504, bb23, bb24                        // id: %505

bb23:                                             // Preds: bb22
  release_value %195 : $Optional<String>          // id: %506
  %507 = integer_literal $Builtin.Int1, 0         // user: %508
  %508 = struct $Bool (%507 : $Builtin.Int1)      // user: %510
  %509 = begin_access [modify] [static] %159 : $*Bool // users: %510, %511
  store %508 to %509 : $*Bool                     // id: %510
  end_access %509 : $*Bool                        // id: %511
  br bb25                                         // id: %512

bb24:                                             // Preds: bb22
  release_value %195 : $Optional<String>          // id: %513
  %514 = integer_literal $Builtin.Word, 1         // user: %516
  // function_ref _allocateUninitializedArray<A>(_:)
  %515 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %516
  %516 = apply %515<Any>(%514) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %518, %517
  %517 = tuple_extract %516 : $(Array<Any>, Builtin.RawPointer), 0 // users: %536, %533
  %518 = tuple_extract %516 : $(Array<Any>, Builtin.RawPointer), 1 // user: %519
  %519 = pointer_to_address %518 : $Builtin.RawPointer to [strict] $*Any // user: %526
  %520 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %525
  %521 = integer_literal $Builtin.Word, 44        // user: %525
  %522 = integer_literal $Builtin.Int1, 0         // user: %525
  %523 = metatype $@thin String.Type              // user: %525
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %524 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %525
  %525 = apply %524(%520, %521, %522, %523) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %527
  %526 = init_existential_addr %519 : $*Any, $String // user: %527
  store %525 to %526 : $*String                   // id: %527
  // function_ref default argument 1 of print(_:separator:terminator:)
  %528 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %529
  %529 = apply %528() : $@convention(thin) () -> @owned String // users: %535, %533
  // function_ref default argument 2 of print(_:separator:terminator:)
  %530 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %531
  %531 = apply %530() : $@convention(thin) () -> @owned String // users: %534, %533
  // function_ref print(_:separator:terminator:)
  %532 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %533
  %533 = apply %532(%517, %529, %531) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %531 : $String                    // id: %534
  release_value %529 : $String                    // id: %535
  release_value %517 : $Array<Any>                // id: %536
  br bb25                                         // id: %537

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  release_value %195 : $Optional<String>          // id: %538
  br bb1                                          // id: %539

bb26:                                             // Preds: bb1
  %540 = integer_literal $Builtin.Word, 1         // user: %542
  // function_ref _allocateUninitializedArray<A>(_:)
  %541 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %542
  %542 = apply %541<Any>(%540) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %544, %543
  %543 = tuple_extract %542 : $(Array<Any>, Builtin.RawPointer), 0 // users: %562, %559
  %544 = tuple_extract %542 : $(Array<Any>, Builtin.RawPointer), 1 // user: %545
  %545 = pointer_to_address %544 : $Builtin.RawPointer to [strict] $*Any // user: %552
  %546 = string_literal utf8 "===== will end"     // user: %551
  %547 = integer_literal $Builtin.Word, 14        // user: %551
  %548 = integer_literal $Builtin.Int1, -1        // user: %551
  %549 = metatype $@thin String.Type              // user: %551
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %550 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %551
  %551 = apply %550(%546, %547, %548, %549) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %553
  %552 = init_existential_addr %545 : $*Any, $String // user: %553
  store %551 to %552 : $*String                   // id: %553
  // function_ref default argument 1 of print(_:separator:terminator:)
  %554 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %555
  %555 = apply %554() : $@convention(thin) () -> @owned String // users: %561, %559
  // function_ref default argument 2 of print(_:separator:terminator:)
  %556 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %557
  %557 = apply %556() : $@convention(thin) () -> @owned String // users: %560, %559
  // function_ref print(_:separator:terminator:)
  %558 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %559
  %559 = apply %558(%543, %555, %557) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %557 : $String                    // id: %560
  release_value %555 : $String                    // id: %561
  release_value %543 : $Array<Any>                // id: %562
  dealloc_stack %159 : $*Bool                     // id: %563
  destroy_addr %125 : $*Array<Closure>            // id: %564
  dealloc_stack %125 : $*Array<Closure>           // id: %565
  strong_release %98 : $@callee_guaranteed () -> () // id: %566
  strong_release %86 : $@callee_guaranteed () -> () // id: %567
  strong_release %76 : $@callee_guaranteed () -> () // id: %568
  strong_release %68 : $@callee_guaranteed () -> () // id: %569
  strong_release %59 : ${ var Int }               // id: %570
  strong_release %11 : $Number                    // id: %571
  strong_release %5 : $Empty                      // id: %572
  strong_release %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %573
  %574 = tuple ()                                 // user: %575
  return %574 : $()                               // id: %575
} // end sil function '$s4file3fooyyF'

// closure #1 in foo()
sil private @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () {
// %0 "name"                                      // users: %4, %3, %1
bb0(%0 : $String):
  debug_value %0 : $String, let, name "name", argno 1 // id: %1
  // function_ref closure #1 in closure #1 in foo()
  %2 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %4
  retain_value %0 : $String                       // id: %3
  %4 = partial_apply [callee_guaranteed] %2(%0) : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %5
  return %4 : $@callee_guaranteed (Int, Int, Int) -> () // id: %5
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_'

// closure #1 in closure #1 in foo()
sil private @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %53, %4
// %1 "weak"                                      // users: %71, %5
// %2 "unowned"                                   // users: %89, %6
// %3 "name"                                      // users: %35, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %12, %11
  %11 = tuple_extract %10 : $(Array<Any>, Builtin.RawPointer), 0 // users: %123, %120
  %12 = tuple_extract %10 : $(Array<Any>, Builtin.RawPointer), 1 // user: %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %113
  %14 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %106, %22, %109, %108, %29, %36, %47, %54, %65, %72, %83, %90, %101
  %15 = integer_literal $Builtin.Int64, 39        // user: %16
  %16 = struct $Int (%15 : $Builtin.Int64)        // user: %21
  %17 = integer_literal $Builtin.Int64, 4         // user: %18
  %18 = struct $Int (%17 : $Builtin.Int64)        // user: %21
  %19 = metatype $@thin DefaultStringInterpolation.Type // user: %21
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %20 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %21
  %21 = apply %20(%16, %18, %19) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %22
  store %21 to %14 : $*DefaultStringInterpolation // id: %22
  %23 = string_literal utf8 "Name: "              // user: %28
  %24 = integer_literal $Builtin.Word, 6          // user: %28
  %25 = integer_literal $Builtin.Int1, -1         // user: %28
  %26 = metatype $@thin String.Type               // user: %28
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %27 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %28 = apply %27(%23, %24, %25, %26) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %33, %31
  %29 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %32, %31
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %30 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %31
  %31 = apply %30(%28, %29) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %29 : $*DefaultStringInterpolation   // id: %32
  release_value %28 : $String                     // id: %33
  %34 = alloc_stack $String                       // users: %35, %40, %38
  store %3 to %34 : $*String                      // id: %35
  %36 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %39, %38
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %37 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %38
  %38 = apply %37<String>(%34, %36) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %36 : $*DefaultStringInterpolation   // id: %39
  dealloc_stack %34 : $*String                    // id: %40
  %41 = string_literal utf8 "; Strong: ("         // user: %46
  %42 = integer_literal $Builtin.Word, 11         // user: %46
  %43 = integer_literal $Builtin.Int1, -1         // user: %46
  %44 = metatype $@thin String.Type               // user: %46
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %45 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %46
  %46 = apply %45(%41, %42, %43, %44) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %51, %49
  %47 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %50, %49
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %48 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %49
  %49 = apply %48(%46, %47) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %47 : $*DefaultStringInterpolation   // id: %50
  release_value %46 : $String                     // id: %51
  %52 = alloc_stack $Int                          // users: %53, %58, %56
  store %0 to %52 : $*Int                         // id: %53
  %54 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 "); Weak: ("          // user: %64
  %60 = integer_literal $Builtin.Word, 10         // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  release_value %64 : $String                     // id: %69
  %70 = alloc_stack $Int                          // users: %71, %76, %74
  store %1 to %70 : $*Int                         // id: %71
  %72 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %75, %74
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %73 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %74
  %74 = apply %73<Int>(%70, %72) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %72 : $*DefaultStringInterpolation   // id: %75
  dealloc_stack %70 : $*Int                       // id: %76
  %77 = string_literal utf8 "); Unowned("         // user: %82
  %78 = integer_literal $Builtin.Word, 11         // user: %82
  %79 = integer_literal $Builtin.Int1, -1         // user: %82
  %80 = metatype $@thin String.Type               // user: %82
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %81 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %82
  %82 = apply %81(%77, %78, %79, %80) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %87, %85
  %83 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %86, %85
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %84 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %85
  %85 = apply %84(%82, %83) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %83 : $*DefaultStringInterpolation   // id: %86
  release_value %82 : $String                     // id: %87
  %88 = alloc_stack $Int                          // users: %89, %94, %92
  store %2 to %88 : $*Int                         // id: %89
  %90 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %93, %92
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %91 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %92
  %92 = apply %91<Int>(%88, %90) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %90 : $*DefaultStringInterpolation   // id: %93
  dealloc_stack %88 : $*Int                       // id: %94
  %95 = string_literal utf8 ")"                   // user: %100
  %96 = integer_literal $Builtin.Word, 1          // user: %100
  %97 = integer_literal $Builtin.Int1, -1         // user: %100
  %98 = metatype $@thin String.Type               // user: %100
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %99 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %100
  %100 = apply %99(%95, %96, %97, %98) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %105, %103
  %101 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %104, %103
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %102 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %103
  %103 = apply %102(%100, %101) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %101 : $*DefaultStringInterpolation  // id: %104
  release_value %100 : $String                    // id: %105
  %106 = load %14 : $*DefaultStringInterpolation  // users: %112, %107
  retain_value %106 : $DefaultStringInterpolation // id: %107
  destroy_addr %14 : $*DefaultStringInterpolation // id: %108
  dealloc_stack %14 : $*DefaultStringInterpolation // id: %109
  %110 = metatype $@thin String.Type              // user: %112
  // function_ref String.init(stringInterpolation:)
  %111 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %112
  %112 = apply %111(%106, %110) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %114
  %113 = init_existential_addr %13 : $*Any, $String // user: %114
  store %112 to %113 : $*String                   // id: %114
  // function_ref default argument 1 of print(_:separator:terminator:)
  %115 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %116
  %116 = apply %115() : $@convention(thin) () -> @owned String // users: %122, %120
  // function_ref default argument 2 of print(_:separator:terminator:)
  %117 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %118
  %118 = apply %117() : $@convention(thin) () -> @owned String // users: %121, %120
  // function_ref print(_:separator:terminator:)
  %119 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %120
  %120 = apply %119(%11, %116, %118) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %118 : $String                    // id: %121
  release_value %116 : $String                    // id: %122
  release_value %11 : $Array<Any>                 // id: %123
  %124 = tuple ()                                 // user: %125
  return %124 : $()                               // id: %125
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] [_semantics "array.uninitialized_intrinsic"] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer)

// Int.init(_builtinIntegerLiteral:)
sil public_external [transparent] [serialized] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int {
// %0                                             // user: %2
bb0(%0 : $Builtin.IntLiteral, %1 : $@thin Int.Type):
  %2 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%0 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %3
  %3 = tuple_extract %2 : $(Builtin.Int64, Builtin.Int1), 0 // user: %4
  %4 = struct $Int (%3 : $Builtin.Int64)          // user: %5
  return %4 : $Int                                // id: %5
} // end sil function '$sSi22_builtinIntegerLiteralSiBI_tcfC'

// DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
sil [serialized] @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// DefaultStringInterpolation.appendLiteral(_:)
sil [serialized] @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// String.init(stringInterpolation:)
sil [serialized] [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String

// default argument 1 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 " "                    // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA0_'

// default argument 2 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 "\n"                   // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA1_'

// print(_:separator:terminator:)
sil @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()

// closure #2 in foo()
sil private @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () {
// %0 "number"                                    // users: %3, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %1
  %2 = integer_literal $Builtin.Int64, 1          // user: %8
  %3 = ref_element_addr %0 : $Number, #Number.number // user: %4
  %4 = begin_access [modify] [dynamic] %3 : $*Int // users: %13, %5, %15
  %5 = struct_element_addr %4 : $*Int, #Int._value // user: %6
  %6 = load %5 : $*Builtin.Int64                  // user: %8
  %7 = integer_literal $Builtin.Int1, -1          // user: %8
  %8 = builtin "sadd_with_overflow_Int64"(%6 : $Builtin.Int64, %2 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %10, %9
  %9 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 0 // user: %12
  %10 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 1 // user: %11
  cond_fail %10 : $Builtin.Int1, "arithmetic overflow" // id: %11
  %12 = struct $Int (%9 : $Builtin.Int64)         // user: %13
  store %12 to %4 : $*Int                         // id: %13
  %14 = tuple ()
  end_access %4 : $*Int                           // id: %15
  %16 = tuple ()                                  // user: %17
  return %16 : $()                                // id: %17
} // end sil function '$s4file3fooyyFyycfU0_'

// static Int.+= infix(_:_:)
sil public_external [transparent] [serialized] @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () {
// %0                                             // users: %14, %3
// %1                                             // user: %5
bb0(%0 : $*Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_element_addr %0 : $*Int, #Int._value // user: %4
  %4 = load %3 : $*Builtin.Int64                  // user: %7
  %5 = struct_extract %1 : $Int, #Int._value      // user: %7
  %6 = integer_literal $Builtin.Int1, -1          // user: %7
  %7 = builtin "sadd_with_overflow_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %9, %8
  %8 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 0 // user: %13
  %9 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 1 // user: %12
  br bb1                                          // id: %10

bb1:                                              // Preds: bb0
  br bb2                                          // id: %11

bb2:                                              // Preds: bb1
  cond_fail %9 : $Builtin.Int1, "arithmetic overflow" // id: %12
  %13 = struct $Int (%8 : $Builtin.Int64)         // user: %14
  store %13 to %0 : $*Int                         // id: %14
  %15 = tuple ()                                  // user: %16
  return %15 : $()                                // id: %16
} // end sil function '$sSi2peoiyySiz_SitFZ'

// closure #3 in foo()
sil private @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %6, %2
// %1 "value"                                     // user: %3
bb0(%0 : $Number, %1 : ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %45, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = integer_literal $Builtin.Int64, 1          // user: %11
  %6 = ref_element_addr %0 : $Number, #Number.number // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*Int // users: %16, %8, %18
  %8 = struct_element_addr %7 : $*Int, #Int._value // user: %9
  %9 = load %8 : $*Builtin.Int64                  // user: %11
  %10 = integer_literal $Builtin.Int1, -1         // user: %11
  %11 = builtin "sadd_with_overflow_Int64"(%9 : $Builtin.Int64, %5 : $Builtin.Int64, %10 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %13, %12
  %12 = tuple_extract %11 : $(Builtin.Int64, Builtin.Int1), 0 // user: %15
  %13 = tuple_extract %11 : $(Builtin.Int64, Builtin.Int1), 1 // user: %14
  cond_fail %13 : $Builtin.Int1, "arithmetic overflow" // id: %14
  %15 = struct $Int (%12 : $Builtin.Int64)        // user: %16
  store %15 to %7 : $*Int                         // id: %16
  %17 = tuple ()
  end_access %7 : $*Int                           // id: %18
  %19 = integer_literal $Builtin.Word, 1          // user: %21
  // function_ref _allocateUninitializedArray<A>(_:)
  %20 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %21
  %21 = apply %20<Any>(%19) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %23, %22
  %22 = tuple_extract %21 : $(Array<Any>, Builtin.RawPointer), 0 // users: %83, %80
  %23 = tuple_extract %21 : $(Array<Any>, Builtin.RawPointer), 1 // user: %24
  %24 = pointer_to_address %23 : $Builtin.RawPointer to [strict] $*Any // user: %73
  %25 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %66, %33, %69, %68, %40, %50, %61
  %26 = integer_literal $Builtin.Int64, 3         // user: %27
  %27 = struct $Int (%26 : $Builtin.Int64)        // user: %32
  %28 = integer_literal $Builtin.Int64, 1         // user: %29
  %29 = struct $Int (%28 : $Builtin.Int64)        // user: %32
  %30 = metatype $@thin DefaultStringInterpolation.Type // user: %32
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %31 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %32
  %32 = apply %31(%27, %29, %30) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %33
  store %32 to %25 : $*DefaultStringInterpolation // id: %33
  %34 = string_literal utf8 "v: "                 // user: %39
  %35 = integer_literal $Builtin.Word, 3          // user: %39
  %36 = integer_literal $Builtin.Int1, -1         // user: %39
  %37 = metatype $@thin String.Type               // user: %39
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %38 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %39
  %39 = apply %38(%34, %35, %36, %37) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %44, %42
  %40 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %43, %42
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %41 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %42
  %42 = apply %41(%39, %40) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %40 : $*DefaultStringInterpolation   // id: %43
  release_value %39 : $String                     // id: %44
  %45 = begin_access [read] [dynamic] %3 : $*Int  // users: %46, %47
  %46 = load %45 : $*Int                          // user: %49
  end_access %45 : $*Int                          // id: %47
  %48 = alloc_stack $Int                          // users: %49, %54, %52
  store %46 to %48 : $*Int                        // id: %49
  %50 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %53, %52
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %51 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %52
  %52 = apply %51<Int>(%48, %50) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %50 : $*DefaultStringInterpolation   // id: %53
  dealloc_stack %48 : $*Int                       // id: %54
  %55 = string_literal utf8 ""                    // user: %60
  %56 = integer_literal $Builtin.Word, 0          // user: %60
  %57 = integer_literal $Builtin.Int1, -1         // user: %60
  %58 = metatype $@thin String.Type               // user: %60
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %59 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %60
  %60 = apply %59(%55, %56, %57, %58) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %65, %63
  %61 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %64, %63
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %62 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %63
  %63 = apply %62(%60, %61) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %61 : $*DefaultStringInterpolation   // id: %64
  release_value %60 : $String                     // id: %65
  %66 = load %25 : $*DefaultStringInterpolation   // users: %72, %67
  retain_value %66 : $DefaultStringInterpolation  // id: %67
  destroy_addr %25 : $*DefaultStringInterpolation // id: %68
  dealloc_stack %25 : $*DefaultStringInterpolation // id: %69
  %70 = metatype $@thin String.Type               // user: %72
  // function_ref String.init(stringInterpolation:)
  %71 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %72
  %72 = apply %71(%66, %70) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %74
  %73 = init_existential_addr %24 : $*Any, $String // user: %74
  store %72 to %73 : $*String                     // id: %74
  // function_ref default argument 1 of print(_:separator:terminator:)
  %75 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %76
  %76 = apply %75() : $@convention(thin) () -> @owned String // users: %82, %80
  // function_ref default argument 2 of print(_:separator:terminator:)
  %77 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %78
  %78 = apply %77() : $@convention(thin) () -> @owned String // users: %81, %80
  // function_ref print(_:separator:terminator:)
  %79 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %80
  %80 = apply %79(%22, %76, %78) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %78 : $String                     // id: %81
  release_value %76 : $String                     // id: %82
  release_value %22 : $Array<Any>                 // id: %83
  %84 = tuple ()                                  // user: %85
  return %84 : $()                                // id: %85
} // end sil function '$s4file3fooyyFyycfU1_'

// closure #4 in foo()
sil private @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () {
// %0 "number"                                    // users: %5, %2
// %1 "empty"                                     // users: %19, %3
bb0(%0 : $Number, %1 : $Empty):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %3
  %4 = integer_literal $Builtin.Int64, 1          // user: %10
  %5 = ref_element_addr %0 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %15, %7, %17
  %7 = struct_element_addr %6 : $*Int, #Int._value // user: %8
  %8 = load %7 : $*Builtin.Int64                  // user: %10
  %9 = integer_literal $Builtin.Int1, -1          // user: %10
  %10 = builtin "sadd_with_overflow_Int64"(%8 : $Builtin.Int64, %4 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %12, %11
  %11 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 0 // user: %14
  %12 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 1 // user: %13
  cond_fail %12 : $Builtin.Int1, "arithmetic overflow" // id: %13
  %14 = struct $Int (%11 : $Builtin.Int64)        // user: %15
  store %14 to %6 : $*Int                         // id: %15
  %16 = tuple ()
  end_access %6 : $*Int                           // id: %17
  // function_ref Empty.foo()
  %18 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %19
  %19 = apply %18(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %20 = tuple ()                                  // user: %21
  return %20 : $()                                // id: %21
} // end sil function '$s4file3fooyyFyycfU2_'

// closure #5 in foo()
sil private @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %8, %3
// %1 "empty"                                     // users: %22, %4
// %2 "value"                                     // user: %5
bb0(%0 : $Number, %1 : $Empty, %2 : ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %49, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = integer_literal $Builtin.Int64, 1          // user: %13
  %8 = ref_element_addr %0 : $Number, #Number.number // user: %9
  %9 = begin_access [modify] [dynamic] %8 : $*Int // users: %18, %10, %20
  %10 = struct_element_addr %9 : $*Int, #Int._value // user: %11
  %11 = load %10 : $*Builtin.Int64                // user: %13
  %12 = integer_literal $Builtin.Int1, -1         // user: %13
  %13 = builtin "sadd_with_overflow_Int64"(%11 : $Builtin.Int64, %7 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %15, %14
  %14 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 0 // user: %17
  %15 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 1 // user: %16
  cond_fail %15 : $Builtin.Int1, "arithmetic overflow" // id: %16
  %17 = struct $Int (%14 : $Builtin.Int64)        // user: %18
  store %17 to %9 : $*Int                         // id: %18
  %19 = tuple ()
  end_access %9 : $*Int                           // id: %20
  // function_ref Empty.foo()
  %21 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %22
  %22 = apply %21(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %23 = integer_literal $Builtin.Word, 1          // user: %25
  // function_ref _allocateUninitializedArray<A>(_:)
  %24 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %25
  %25 = apply %24<Any>(%23) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %27, %26
  %26 = tuple_extract %25 : $(Array<Any>, Builtin.RawPointer), 0 // users: %87, %84
  %27 = tuple_extract %25 : $(Array<Any>, Builtin.RawPointer), 1 // user: %28
  %28 = pointer_to_address %27 : $Builtin.RawPointer to [strict] $*Any // user: %77
  %29 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %70, %37, %73, %72, %44, %54, %65
  %30 = integer_literal $Builtin.Int64, 3         // user: %31
  %31 = struct $Int (%30 : $Builtin.Int64)        // user: %36
  %32 = integer_literal $Builtin.Int64, 1         // user: %33
  %33 = struct $Int (%32 : $Builtin.Int64)        // user: %36
  %34 = metatype $@thin DefaultStringInterpolation.Type // user: %36
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %35 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %36
  %36 = apply %35(%31, %33, %34) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %37
  store %36 to %29 : $*DefaultStringInterpolation // id: %37
  %38 = string_literal utf8 "v: "                 // user: %43
  %39 = integer_literal $Builtin.Word, 3          // user: %43
  %40 = integer_literal $Builtin.Int1, -1         // user: %43
  %41 = metatype $@thin String.Type               // user: %43
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %42 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %43
  %43 = apply %42(%38, %39, %40, %41) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %48, %46
  %44 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %47, %46
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %45 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %46
  %46 = apply %45(%43, %44) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %44 : $*DefaultStringInterpolation   // id: %47
  release_value %43 : $String                     // id: %48
  %49 = begin_access [read] [dynamic] %5 : $*Int  // users: %50, %51
  %50 = load %49 : $*Int                          // user: %53
  end_access %49 : $*Int                          // id: %51
  %52 = alloc_stack $Int                          // users: %53, %58, %56
  store %50 to %52 : $*Int                        // id: %53
  %54 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 ""                    // user: %64
  %60 = integer_literal $Builtin.Word, 0          // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  release_value %64 : $String                     // id: %69
  %70 = load %29 : $*DefaultStringInterpolation   // users: %76, %71
  retain_value %70 : $DefaultStringInterpolation  // id: %71
  destroy_addr %29 : $*DefaultStringInterpolation // id: %72
  dealloc_stack %29 : $*DefaultStringInterpolation // id: %73
  %74 = metatype $@thin String.Type               // user: %76
  // function_ref String.init(stringInterpolation:)
  %75 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %76
  %76 = apply %75(%70, %74) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %78
  %77 = init_existential_addr %28 : $*Any, $String // user: %78
  store %76 to %77 : $*String                     // id: %78
  // function_ref default argument 1 of print(_:separator:terminator:)
  %79 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %80
  %80 = apply %79() : $@convention(thin) () -> @owned String // users: %86, %84
  // function_ref default argument 2 of print(_:separator:terminator:)
  %81 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %82
  %82 = apply %81() : $@convention(thin) () -> @owned String // users: %85, %84
  // function_ref print(_:separator:terminator:)
  %83 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %84
  %84 = apply %83(%26, %80, %82) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %82 : $String                     // id: %85
  release_value %80 : $String                     // id: %86
  release_value %26 : $Array<Any>                 // id: %87
  %88 = tuple ()                                  // user: %89
  return %88 : $()                                // id: %89
} // end sil function '$s4file3fooyyFyycfU3_'

// Array.init()
sil [serialized] [_semantics "array.init.empty"] @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>

// Array.reserveCapacity(_:)
sil [serialized] [_semantics "array.mutate_unknown"] @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()

// Bool.init(_builtinBooleanLiteral:)
sil public_external [transparent] [serialized] @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Builtin.Int1, %1 : $@thin Bool.Type):
  %2 = struct $Bool (%0 : $Builtin.Int1)          // user: %3
  return %2 : $Bool                               // id: %3
} // end sil function '$sSb22_builtinBooleanLiteralSbBi1__tcfC'

// default argument 0 of readLine(strippingNewline:)
sil shared_external [serialized] @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool {
bb0:
  %0 = integer_literal $Builtin.Int1, -1          // user: %1
  %1 = struct $Bool (%0 : $Builtin.Int1)          // user: %2
  return %1 : $Bool                               // id: %2
} // end sil function '$ss8readLine16strippingNewlineSSSgSb_tFfA_'

// readLine(strippingNewline:)
sil @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String>

// ~= infix<A>(_:_:)
sil public_external [transparent] [serialized] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <T where T : Equatable> (@in_guaranteed T, @in_guaranteed T) -> Bool {
// %0                                             // user: %4
// %1                                             // user: %4
bb0(%0 : $*T, %1 : $*T):
  %2 = metatype $@thick T.Type                    // user: %4
  %3 = witness_method $T, #Equatable."==" : <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %4
  %4 = apply %3<T>(%0, %1, %2) : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %5
  return %4 : $Bool                               // id: %5
} // end sil function '$ss2teoiySbx_xtSQRzlF'

// Array.append(_:)
sil [serialized] [_semantics "array.append_element"] @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()

// Collection.isEmpty.getter
sil [serialized] @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool

// static Bool.! prefix(_:)
sil public_external [transparent] [serialized] @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Bool, %1 : $@thin Bool.Type):
  %2 = struct_extract %0 : $Bool, #Bool._value    // user: %4
  %3 = integer_literal $Builtin.Int1, -1          // user: %4
  %4 = builtin "xor_Int1"(%2 : $Builtin.Int1, %3 : $Builtin.Int1) : $Builtin.Int1 // user: %5
  %5 = struct $Bool (%4 : $Builtin.Int1)          // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sSb1nopyS2bFZ'

// RangeReplaceableCollection<>.removeLast()
sil [serialized] @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element

// BidirectionalCollection.last.getter
sil [serialized] @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>

// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
sil shared_external [transparent] [serialized] [thunk] @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thick Optional<τ_0_0>.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Optional<τ_0_0>, %1 : $*Optional<τ_0_0>, %2 : $@thick Optional<τ_0_0>.Type):
  %3 = metatype $@thin Optional<τ_0_0>.Type      // user: %5
  // function_ref static Optional<A>.== infix(_:_:)
  %4 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %5
  %5 = apply %4<τ_0_0>(%0, %1, %3) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW'

// static Optional<A>.== infix(_:_:)
sil [serialized] @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool

sil_vtable Empty {
  #Empty.init!allocator: (Empty.Type) -> () -> Empty : @$s4file5EmptyCACycfC	// Empty.__allocating_init()
  #Empty.deinit!deallocator: @$s4file5EmptyCfD	// Empty.__deallocating_deinit
}

sil_vtable Number {
  #Number.init!allocator: (Number.Type) -> (Int) -> Number : @$s4file6NumberC6numberACSi_tcfC	// Number.__allocating_init(number:)
  #Number.deinit!deallocator: @$s4file6NumberCfD	// Number.__deallocating_deinit
}

sil_vtable Closure {
  #Closure.init!allocator: (Closure.Type) -> (@escaping () -> ()) -> Closure : @$s4file7ClosureCyACyyccfC	// Closure.__allocating_init(_:)
  #Closure.deinit!deallocator: @$s4file7ClosureCfD	// Closure.__deallocating_deinit
}

sil_witness_table public_external [serialized] <Wrapped where Wrapped : Equatable> Optional<Wrapped>: Equatable module Swift {
  method #Equatable."==": <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW	// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
  conditional_conformance (Wrapped: Equatable): dependent
}



  *** SIL module after #36, stage IRGen Preparation, pass 1: LoadableByAddress (loadable-address)
sil_stage lowered

import Builtin
import Swift
import SwiftShims

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Int32, 0          // user: %3
  %3 = struct $Int32 (%2 : $Builtin.Int32)        // user: %4
  return %3 : $Int32                              // id: %4
} // end sil function 'main'

// Empty.foo()
sil hidden @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () {
// %0 "self"                                      // user: %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = tuple ()                                   // user: %3
  return %2 : $()                                 // id: %3
} // end sil function '$s4file5EmptyC3fooyyF'

// Empty.deinit
sil hidden @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Empty to $Builtin.NativeObject // user: %3
  return %2 : $Builtin.NativeObject               // id: %3
} // end sil function '$s4file5EmptyCfd'

// Empty.__deallocating_deinit
sil hidden @$s4file5EmptyCfD : $@convention(method) (@owned Empty) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  // function_ref Empty.deinit
  %2 = function_ref @$s4file5EmptyCfd : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Empty) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Empty // user: %5
  dealloc_ref %4 : $Empty                         // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4file5EmptyCfD'

// Empty.__allocating_init()
sil hidden [exact_self_class] @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty {
// %0 "$metatype"
bb0(%0 : $@thick Empty.Type):
  %1 = alloc_ref $Empty                           // user: %3
  // function_ref Empty.init()
  %2 = function_ref @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty // user: %3
  %3 = apply %2(%1) : $@convention(method) (@owned Empty) -> @owned Empty // user: %4
  return %3 : $Empty                              // id: %4
} // end sil function '$s4file5EmptyCACycfC'

// Empty.init()
sil hidden @$s4file5EmptyCACycfc : $@convention(method) (@owned Empty) -> @owned Empty {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Empty):
  debug_value %0 : $Empty, let, name "self", argno 1 // id: %1
  return %0 : $Empty                              // id: %2
} // end sil function '$s4file5EmptyCACycfc'

// Number.number.getter
sil hidden [transparent] @$s4file6NumberC6numberSivg : $@convention(method) (@guaranteed Number) -> Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*Int   // users: %4, %5
  %4 = load %3 : $*Int                            // user: %6
  end_access %3 : $*Int                           // id: %5
  return %4 : $Int                                // id: %6
} // end sil function '$s4file6NumberC6numberSivg'

// Number.number.setter
sil hidden [transparent] @$s4file6NumberC6numberSivs : $@convention(method) (Int, @guaranteed Number) -> () {
// %0 "value"                                     // users: %6, %2
// %1 "self"                                      // users: %4, %3
bb0(%0 : $Int, %1 : $Number):
  debug_value %0 : $Int, let, name "value", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to %5 : $*Int                          // id: %6
  end_access %5 : $*Int                           // id: %7
  %8 = tuple ()                                   // user: %9
  return %8 : $()                                 // id: %9
} // end sil function '$s4file6NumberC6numberSivs'

// Number.number.modify
sil hidden [transparent] @$s4file6NumberC6numberSivM : $@yield_once @convention(method) (@guaranteed Number) -> @yields @inout Int {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Number, #Number.number // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*Int // users: %5, %8, %4
  yield %3 : $*Int, resume bb1, unwind bb2        // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*Int                           // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file6NumberC6numberSivM'

// Number.__allocating_init(number:)
sil hidden [exact_self_class] @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number {
// %0 "number"                                    // user: %4
// %1 "$metatype"
bb0(%0 : $Int, %1 : $@thick Number.Type):
  %2 = alloc_ref $Number                          // user: %4
  // function_ref Number.init(number:)
  %3 = function_ref @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (Int, @owned Number) -> @owned Number // user: %5
  return %4 : $Number                             // id: %5
} // end sil function '$s4file6NumberC6numberACSi_tcfC'

// Number.init(number:)
sil hidden @$s4file6NumberC6numberACSi_tcfc : $@convention(method) (Int, @owned Number) -> @owned Number {
// %0 "number"                                    // users: %6, %2
// %1 "self"                                      // users: %8, %4, %3
bb0(%0 : $Int, %1 : $Number):
  debug_value %0 : $Int, let, name "number", argno 1 // id: %2
  debug_value %1 : $Number, let, name "self", argno 2 // id: %3
  %4 = ref_element_addr %1 : $Number, #Number.number // user: %5
  %5 = begin_access [modify] [dynamic] %4 : $*Int // users: %6, %7
  store %0 to %5 : $*Int                          // id: %6
  end_access %5 : $*Int                           // id: %7
  return %1 : $Number                             // id: %8
} // end sil function '$s4file6NumberC6numberACSi_tcfc'

// Number.deinit
sil hidden @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  %2 = unchecked_ref_cast %0 : $Number to $Builtin.NativeObject // user: %3
  return %2 : $Builtin.NativeObject               // id: %3
} // end sil function '$s4file6NumberCfd'

// Number.__deallocating_deinit
sil hidden @$s4file6NumberCfD : $@convention(method) (@owned Number) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "self", argno 1 // id: %1
  // function_ref Number.deinit
  %2 = function_ref @$s4file6NumberCfd : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Number) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Number // user: %5
  dealloc_ref %4 : $Number                        // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4file6NumberCfD'

// Closure.closure.getter
sil hidden [transparent] @$s4file7ClosureC7closureyycvg : $@convention(method) (@guaranteed Closure) -> @owned @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [read] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %4, %6
  %4 = load %3 : $*@callee_guaranteed () -> ()    // users: %7, %5
  strong_retain %4 : $@callee_guaranteed () -> () // id: %5
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %6
  return %4 : $@callee_guaranteed () -> ()        // id: %7
} // end sil function '$s4file7ClosureC7closureyycvg'

// Closure.closure.setter
sil hidden [transparent] @$s4file7ClosureC7closureyycvs : $@convention(method) (@owned @callee_guaranteed () -> (), @guaranteed Closure) -> () {
// %0 "value"                                     // users: %11, %8, %4, %2
// %1 "self"                                      // users: %5, %3
bb0(%0 : $@callee_guaranteed () -> (), %1 : $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "value", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  strong_retain %0 : $@callee_guaranteed () -> () // id: %4
  %5 = ref_element_addr %1 : $Closure, #Closure.closure // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*@callee_guaranteed () -> () // users: %8, %7, %10
  %7 = load %6 : $*@callee_guaranteed () -> ()    // user: %9
  store %0 to %6 : $*@callee_guaranteed () -> ()  // id: %8
  strong_release %7 : $@callee_guaranteed () -> () // id: %9
  end_access %6 : $*@callee_guaranteed () -> ()   // id: %10
  strong_release %0 : $@callee_guaranteed () -> () // id: %11
  %12 = tuple ()                                  // user: %13
  return %12 : $()                                // id: %13
} // end sil function '$s4file7ClosureC7closureyycvs'

// Closure.closure.modify
sil hidden [transparent] @$s4file7ClosureC7closureyycvM : $@yield_once @convention(method) (@guaranteed Closure) -> @yields @inout @callee_guaranteed () -> () {
// %0 "self"                                      // users: %2, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [modify] [dynamic] %2 : $*@callee_guaranteed () -> () // users: %5, %8, %4
  yield %3 : $*@callee_guaranteed () -> (), resume bb1, unwind bb2 // id: %4

bb1:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7

bb2:                                              // Preds: bb0
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %8
  unwind                                          // id: %9
} // end sil function '$s4file7ClosureC7closureyycvM'

// Closure.__allocating_init(_:)
sil hidden [exact_self_class] @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure {
// %0 "block"                                     // user: %4
// %1 "$metatype"
bb0(%0 : $@callee_guaranteed () -> (), %1 : $@thick Closure.Type):
  %2 = alloc_ref $Closure                         // user: %4
  // function_ref Closure.init(_:)
  %3 = function_ref @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %4
  %4 = apply %3(%0, %2) : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure // user: %5
  return %4 : $Closure                            // id: %5
} // end sil function '$s4file7ClosureCyACyyccfC'

// Closure.init(_:)
sil hidden @$s4file7ClosureCyACyyccfc : $@convention(method) (@owned @callee_guaranteed () -> (), @owned Closure) -> @owned Closure {
// %0 "block"                                     // users: %9, %7, %4, %2
// %1 "self"                                      // users: %10, %5, %3
bb0(%0 : $@callee_guaranteed () -> (), %1 : $Closure):
  debug_value %0 : $@callee_guaranteed () -> (), let, name "block", argno 1 // id: %2
  debug_value %1 : $Closure, let, name "self", argno 2 // id: %3
  strong_retain %0 : $@callee_guaranteed () -> () // id: %4
  %5 = ref_element_addr %1 : $Closure, #Closure.closure // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*@callee_guaranteed () -> () // users: %7, %8
  store %0 to %6 : $*@callee_guaranteed () -> ()  // id: %7
  end_access %6 : $*@callee_guaranteed () -> ()   // id: %8
  strong_release %0 : $@callee_guaranteed () -> () // id: %9
  return %1 : $Closure                            // id: %10
} // end sil function '$s4file7ClosureCyACyyccfc'

// Closure.deinit
sil hidden @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject {
// %0 "self"                                      // users: %6, %2, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  %2 = ref_element_addr %0 : $Closure, #Closure.closure // user: %3
  %3 = begin_access [deinit] [static] %2 : $*@callee_guaranteed () -> () // users: %5, %4
  destroy_addr %3 : $*@callee_guaranteed () -> () // id: %4
  end_access %3 : $*@callee_guaranteed () -> ()   // id: %5
  %6 = unchecked_ref_cast %0 : $Closure to $Builtin.NativeObject // user: %7
  return %6 : $Builtin.NativeObject               // id: %7
} // end sil function '$s4file7ClosureCfd'

// Closure.__deallocating_deinit
sil hidden @$s4file7ClosureCfD : $@convention(method) (@owned Closure) -> () {
// %0 "self"                                      // users: %3, %1
bb0(%0 : $Closure):
  debug_value %0 : $Closure, let, name "self", argno 1 // id: %1
  // function_ref Closure.deinit
  %2 = function_ref @$s4file7ClosureCfd : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %3
  %3 = apply %2(%0) : $@convention(method) (@guaranteed Closure) -> @owned Builtin.NativeObject // user: %4
  %4 = unchecked_ref_cast %3 : $Builtin.NativeObject to $Closure // user: %5
  dealloc_ref %4 : $Closure                       // id: %5
  %6 = tuple ()                                   // user: %7
  return %6 : $()                                 // id: %7
} // end sil function '$s4file7ClosureCfD'

// foo()
sil hidden @$s4file3fooyyF : $@convention(thin) () -> () {
bb0:
  // function_ref closure #1 in foo()
  %0 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // user: %1
  %1 = thin_to_thick_function %0 : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () to $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // users: %573, %2
  debug_value %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> (), let, name "defaultHandler" // id: %2
  %3 = metatype $@thick Empty.Type                // user: %5
  // function_ref Empty.__allocating_init()
  %4 = function_ref @$s4file5EmptyCACycfC : $@convention(method) (@thick Empty.Type) -> @owned Empty // user: %5
  %5 = apply %4(%3) : $@convention(method) (@thick Empty.Type) -> @owned Empty // users: %572, %100, %98, %96, %93, %92, %88, %86, %85, %82, %81, %6
  debug_value %5 : $Empty, let, name "empty"      // id: %6
  %7 = metatype $@thick Number.Type               // user: %11
  %8 = integer_literal $Builtin.Int64, 0          // user: %9
  %9 = struct $Int (%8 : $Builtin.Int64)          // user: %11
  // function_ref Number.__allocating_init(number:)
  %10 = function_ref @$s4file6NumberC6numberACSi_tcfC : $@convention(method) (Int, @thick Number.Type) -> @owned Number // user: %11
  %11 = apply %10(%9, %7) : $@convention(method) (Int, @thick Number.Type) -> @owned Number // users: %571, %101, %98, %95, %91, %90, %89, %86, %84, %80, %79, %78, %76, %74, %72, %71, %70, %68, %67, %65, %64, %12
  debug_value %11 : $Number, let, name "number"   // id: %12
  %13 = integer_literal $Builtin.Word, 1          // user: %15
  // function_ref _allocateUninitializedArray<A>(_:)
  %14 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %15
  %15 = apply %14<Any>(%13) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %17, %16
  %16 = tuple_extract %15 : $(Array<Any>, Builtin.RawPointer), 0 // users: %35, %32
  %17 = tuple_extract %15 : $(Array<Any>, Builtin.RawPointer), 1 // user: %18
  %18 = pointer_to_address %17 : $Builtin.RawPointer to [strict] $*Any // user: %25
  %19 = string_literal utf8 "===== Did init"      // user: %24
  %20 = integer_literal $Builtin.Word, 14         // user: %24
  %21 = integer_literal $Builtin.Int1, -1         // user: %24
  %22 = metatype $@thin String.Type               // user: %24
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %23 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %24
  %24 = apply %23(%19, %20, %21, %22) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %26
  %25 = init_existential_addr %18 : $*Any, $String // user: %26
  store %24 to %25 : $*String                     // id: %26
  // function_ref default argument 1 of print(_:separator:terminator:)
  %27 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %28
  %28 = apply %27() : $@convention(thin) () -> @owned String // users: %34, %32
  // function_ref default argument 2 of print(_:separator:terminator:)
  %29 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %30
  %30 = apply %29() : $@convention(thin) () -> @owned String // users: %33, %32
  // function_ref print(_:separator:terminator:)
  %31 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %32
  %32 = apply %31(%16, %28, %30) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %30 : $String                     // id: %33
  release_value %28 : $String                     // id: %34
  release_value %16 : $Array<Any>                 // id: %35
  %36 = integer_literal $Builtin.Word, 1          // user: %38
  // function_ref _allocateUninitializedArray<A>(_:)
  %37 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %38
  %38 = apply %37<Any>(%36) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %40, %39
  %39 = tuple_extract %38 : $(Array<Any>, Builtin.RawPointer), 0 // users: %58, %55
  %40 = tuple_extract %38 : $(Array<Any>, Builtin.RawPointer), 1 // user: %41
  %41 = pointer_to_address %40 : $Builtin.RawPointer to [strict] $*Any // user: %48
  %42 = string_literal utf8 "===== Did hook"      // user: %47
  %43 = integer_literal $Builtin.Word, 14         // user: %47
  %44 = integer_literal $Builtin.Int1, -1         // user: %47
  %45 = metatype $@thin String.Type               // user: %47
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %46 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %47
  %47 = apply %46(%42, %43, %44, %45) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %49
  %48 = init_existential_addr %41 : $*Any, $String // user: %49
  store %47 to %48 : $*String                     // id: %49
  // function_ref default argument 1 of print(_:separator:terminator:)
  %50 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %51
  %51 = apply %50() : $@convention(thin) () -> @owned String // users: %57, %55
  // function_ref default argument 2 of print(_:separator:terminator:)
  %52 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %53
  %53 = apply %52() : $@convention(thin) () -> @owned String // users: %56, %55
  // function_ref print(_:separator:terminator:)
  %54 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %55
  %55 = apply %54(%39, %51, %53) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %53 : $String                     // id: %56
  release_value %51 : $String                     // id: %57
  release_value %39 : $Array<Any>                 // id: %58
  %59 = alloc_box ${ var Int }, var, name "value" // users: %570, %98, %97, %76, %75, %60
  %60 = project_box %59 : ${ var Int }, 0         // users: %63, %412
  %61 = integer_literal $Builtin.Int64, 0         // user: %62
  %62 = struct $Int (%61 : $Builtin.Int64)        // user: %63
  store %62 to %60 : $*Int                        // id: %63
  strong_retain %11 : $Number                     // id: %64
  debug_value %11 : $Number, let, name "number"   // id: %65
  // function_ref closure #2 in foo()
  %66 = function_ref @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () // user: %68
  strong_retain %11 : $Number                     // id: %67
  %68 = partial_apply [callee_guaranteed] %66(%11) : $@convention(thin) (@guaranteed Number) -> () // users: %569, %222, %220, %69
  debug_value %68 : $@callee_guaranteed () -> (), let, name "closureRet1" // id: %69
  strong_release %11 : $Number                    // id: %70
  strong_retain %11 : $Number                     // id: %71
  debug_value %11 : $Number, let, name "number"   // id: %72
  // function_ref closure #3 in foo()
  %73 = function_ref @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // user: %76
  strong_retain %11 : $Number                     // id: %74
  strong_retain %59 : ${ var Int }                // id: %75
  %76 = partial_apply [callee_guaranteed] %73(%11, %59) : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () // users: %568, %257, %255, %77
  debug_value %76 : $@callee_guaranteed () -> (), let, name "closureRet1_1" // id: %77
  strong_release %11 : $Number                    // id: %78
  strong_retain %11 : $Number                     // id: %79
  debug_value %11 : $Number, let, name "number"   // id: %80
  strong_retain %5 : $Empty                       // id: %81
  debug_value %5 : $Empty, let, name "empty"      // id: %82
  // function_ref closure #4 in foo()
  %83 = function_ref @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // user: %86
  strong_retain %11 : $Number                     // id: %84
  strong_retain %5 : $Empty                       // id: %85
  %86 = partial_apply [callee_guaranteed] %83(%11, %5) : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () // users: %567, %292, %290, %87
  debug_value %86 : $@callee_guaranteed () -> (), let, name "captureRet2" // id: %87
  strong_release %5 : $Empty                      // id: %88
  strong_release %11 : $Number                    // id: %89
  strong_retain %11 : $Number                     // id: %90
  debug_value %11 : $Number, let, name "number"   // id: %91
  strong_retain %5 : $Empty                       // id: %92
  debug_value %5 : $Empty, let, name "empty"      // id: %93
  // function_ref closure #5 in foo()
  %94 = function_ref @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // user: %98
  strong_retain %11 : $Number                     // id: %95
  strong_retain %5 : $Empty                       // id: %96
  strong_retain %59 : ${ var Int }                // id: %97
  %98 = partial_apply [callee_guaranteed] %94(%11, %5, %59) : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () // users: %566, %327, %325, %99
  debug_value %98 : $@callee_guaranteed () -> (), let, name "closureRet2_1" // id: %99
  strong_release %5 : $Empty                      // id: %100
  strong_release %11 : $Number                    // id: %101
  %102 = integer_literal $Builtin.Word, 1         // user: %104
  // function_ref _allocateUninitializedArray<A>(_:)
  %103 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %104
  %104 = apply %103<Any>(%102) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %106, %105
  %105 = tuple_extract %104 : $(Array<Any>, Builtin.RawPointer), 0 // users: %124, %121
  %106 = tuple_extract %104 : $(Array<Any>, Builtin.RawPointer), 1 // user: %107
  %107 = pointer_to_address %106 : $Builtin.RawPointer to [strict] $*Any // user: %114
  %108 = string_literal utf8 "===== Did init closures" // user: %113
  %109 = integer_literal $Builtin.Word, 23        // user: %113
  %110 = integer_literal $Builtin.Int1, -1        // user: %113
  %111 = metatype $@thin String.Type              // user: %113
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %112 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %113
  %113 = apply %112(%108, %109, %110, %111) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %115
  %114 = init_existential_addr %107 : $*Any, $String // user: %115
  store %113 to %114 : $*String                   // id: %115
  // function_ref default argument 1 of print(_:separator:terminator:)
  %116 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %117
  %117 = apply %116() : $@convention(thin) () -> @owned String // users: %123, %121
  // function_ref default argument 2 of print(_:separator:terminator:)
  %118 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %119
  %119 = apply %118() : $@convention(thin) () -> @owned String // users: %122, %121
  // function_ref print(_:separator:terminator:)
  %120 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %121
  %121 = apply %120(%105, %117, %119) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %119 : $String                    // id: %122
  release_value %117 : $String                    // id: %123
  release_value %105 : $Array<Any>                // id: %124
  %125 = alloc_stack $Array<Closure>, var, name "storage" // users: %129, %565, %564, %132, %225, %260, %295, %330, %359, %378, %448
  %126 = metatype $@thin Array<Closure>.Type      // user: %128
  // function_ref Array.init()
  %127 = function_ref @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %128
  %128 = apply %127<Closure>(%126) : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0> // user: %129
  store %128 to %125 : $*Array<Closure>           // id: %129
  %130 = integer_literal $Builtin.Int64, 100      // user: %131
  %131 = struct $Int (%130 : $Builtin.Int64)      // user: %134
  %132 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %135, %134
  // function_ref Array.reserveCapacity(_:)
  %133 = function_ref @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> () // user: %134
  %134 = apply %133<Closure>(%131, %132) : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()
  end_access %132 : $*Array<Closure>              // id: %135
  %136 = integer_literal $Builtin.Word, 1         // user: %138
  // function_ref _allocateUninitializedArray<A>(_:)
  %137 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %138
  %138 = apply %137<Any>(%136) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %140, %139
  %139 = tuple_extract %138 : $(Array<Any>, Builtin.RawPointer), 0 // users: %158, %155
  %140 = tuple_extract %138 : $(Array<Any>, Builtin.RawPointer), 1 // user: %141
  %141 = pointer_to_address %140 : $Builtin.RawPointer to [strict] $*Any // user: %148
  %142 = string_literal utf8 "===== Did init array" // user: %147
  %143 = integer_literal $Builtin.Word, 20        // user: %147
  %144 = integer_literal $Builtin.Int1, -1        // user: %147
  %145 = metatype $@thin String.Type              // user: %147
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %146 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %147
  %147 = apply %146(%142, %143, %144, %145) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %149
  %148 = init_existential_addr %141 : $*Any, $String // user: %149
  store %147 to %148 : $*String                   // id: %149
  // function_ref default argument 1 of print(_:separator:terminator:)
  %150 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %151
  %151 = apply %150() : $@convention(thin) () -> @owned String // users: %157, %155
  // function_ref default argument 2 of print(_:separator:terminator:)
  %152 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %153
  %153 = apply %152() : $@convention(thin) () -> @owned String // users: %156, %155
  // function_ref print(_:separator:terminator:)
  %154 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %155
  %155 = apply %154(%139, %151, %153) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %153 : $String                    // id: %156
  release_value %151 : $String                    // id: %157
  release_value %139 : $Array<Any>                // id: %158
  %159 = alloc_stack $Bool, var, name "run"       // users: %162, %563, %164, %509
  %160 = integer_literal $Builtin.Int1, -1        // user: %161
  %161 = struct $Bool (%160 : $Builtin.Int1)      // user: %162
  store %161 to %159 : $*Bool                     // id: %162
  br bb1                                          // id: %163

bb1:                                              // Preds: bb25 bb0
  %164 = begin_access [read] [static] %159 : $*Bool // users: %165, %167
  %165 = struct_element_addr %164 : $*Bool, #Bool._value // user: %166
  %166 = load %165 : $*Builtin.Int1               // user: %168
  end_access %164 : $*Bool                        // id: %167
  cond_br %166, bb2, bb26                         // id: %168

bb2:                                              // Preds: bb1
  %169 = integer_literal $Builtin.Word, 1         // user: %171
  // function_ref _allocateUninitializedArray<A>(_:)
  %170 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %171
  %171 = apply %170<Any>(%169) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %173, %172
  %172 = tuple_extract %171 : $(Array<Any>, Builtin.RawPointer), 0 // users: %191, %188
  %173 = tuple_extract %171 : $(Array<Any>, Builtin.RawPointer), 1 // user: %174
  %174 = pointer_to_address %173 : $Builtin.RawPointer to [strict] $*Any // user: %181
  %175 = string_literal utf8 "===== Ask"          // user: %180
  %176 = integer_literal $Builtin.Word, 9         // user: %180
  %177 = integer_literal $Builtin.Int1, -1        // user: %180
  %178 = metatype $@thin String.Type              // user: %180
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %179 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %180
  %180 = apply %179(%175, %176, %177, %178) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %182
  %181 = init_existential_addr %174 : $*Any, $String // user: %182
  store %180 to %181 : $*String                   // id: %182
  // function_ref default argument 1 of print(_:separator:terminator:)
  %183 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %184
  %184 = apply %183() : $@convention(thin) () -> @owned String // users: %190, %188
  // function_ref default argument 2 of print(_:separator:terminator:)
  %185 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %186
  %186 = apply %185() : $@convention(thin) () -> @owned String // users: %189, %188
  // function_ref print(_:separator:terminator:)
  %187 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %188
  %188 = apply %187(%172, %184, %186) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %186 : $String                    // id: %189
  release_value %184 : $String                    // id: %190
  release_value %172 : $Array<Any>                // id: %191
  // function_ref default argument 0 of readLine(strippingNewline:)
  %192 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool // user: %193
  %193 = apply %192() : $@convention(thin) () -> Bool // user: %195
  // function_ref readLine(strippingNewline:)
  %194 = function_ref @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String> // user: %195
  %195 = apply %194(%193) : $@convention(thin) (Bool) -> @owned Optional<String> // users: %538, %513, %506, %497, %486, %485, %484, %447, %438, %427, %426, %425, %410, %401, %390, %389, %387, %358, %349, %338, %337, %336, %323, %314, %303, %302, %301, %288, %279, %268, %267, %266, %253, %244, %233, %232, %231, %218, %209, %198, %197, %196
  debug_value %195 : $Optional<String>, let, name "line" // id: %196
  retain_value %195 : $Optional<String>           // id: %197
  debug_value %195 : $Optional<String>, let, name "$match" // id: %198
  %199 = string_literal utf8 "push1"              // user: %204
  %200 = integer_literal $Builtin.Word, 5         // user: %204
  %201 = integer_literal $Builtin.Int1, -1        // user: %204
  %202 = metatype $@thin String.Type              // user: %204
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %203 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %204
  %204 = apply %203(%199, %200, %201, %202) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %205
  %205 = enum $Optional<String>, #Optional.some!enumelt, %204 : $String // user: %207
  %206 = alloc_stack $Optional<String>            // users: %207, %212, %215, %214
  store %205 to %206 : $*Optional<String>         // id: %207
  %208 = alloc_stack $Optional<String>            // users: %209, %212, %213
  store %195 to %208 : $*Optional<String>         // id: %209
  %210 = metatype $@thin Optional<String>.Type    // user: %212
  // function_ref static Optional<A>.== infix(_:_:)
  %211 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %212
  %212 = apply %211<String>(%206, %208, %210) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %216
  dealloc_stack %208 : $*Optional<String>         // id: %213
  destroy_addr %206 : $*Optional<String>          // id: %214
  dealloc_stack %206 : $*Optional<String>         // id: %215
  %216 = struct_extract %212 : $Bool, #Bool._value // user: %217
  cond_br %216, bb3, bb4                          // id: %217

bb3:                                              // Preds: bb2
  release_value %195 : $Optional<String>          // id: %218
  %219 = metatype $@thick Closure.Type            // user: %222
  strong_retain %68 : $@callee_guaranteed () -> () // id: %220
  // function_ref Closure.__allocating_init(_:)
  %221 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %222
  %222 = apply %221(%68, %219) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %224
  %223 = alloc_stack $Closure                     // users: %224, %229, %227
  store %222 to %223 : $*Closure                  // id: %224
  %225 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %228, %227
  // function_ref Array.append(_:)
  %226 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %227
  %227 = apply %226<Closure>(%223, %225) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %225 : $*Array<Closure>              // id: %228
  dealloc_stack %223 : $*Closure                  // id: %229
  br bb25                                         // id: %230

bb4:                                              // Preds: bb2
  release_value %195 : $Optional<String>          // id: %231
  retain_value %195 : $Optional<String>           // id: %232
  debug_value %195 : $Optional<String>, let, name "$match" // id: %233
  %234 = string_literal utf8 "push1_1"            // user: %239
  %235 = integer_literal $Builtin.Word, 7         // user: %239
  %236 = integer_literal $Builtin.Int1, -1        // user: %239
  %237 = metatype $@thin String.Type              // user: %239
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %238 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %239
  %239 = apply %238(%234, %235, %236, %237) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %240
  %240 = enum $Optional<String>, #Optional.some!enumelt, %239 : $String // user: %242
  %241 = alloc_stack $Optional<String>            // users: %242, %247, %250, %249
  store %240 to %241 : $*Optional<String>         // id: %242
  %243 = alloc_stack $Optional<String>            // users: %244, %247, %248
  store %195 to %243 : $*Optional<String>         // id: %244
  %245 = metatype $@thin Optional<String>.Type    // user: %247
  // function_ref static Optional<A>.== infix(_:_:)
  %246 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %247
  %247 = apply %246<String>(%241, %243, %245) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %251
  dealloc_stack %243 : $*Optional<String>         // id: %248
  destroy_addr %241 : $*Optional<String>          // id: %249
  dealloc_stack %241 : $*Optional<String>         // id: %250
  %251 = struct_extract %247 : $Bool, #Bool._value // user: %252
  cond_br %251, bb5, bb6                          // id: %252

bb5:                                              // Preds: bb4
  release_value %195 : $Optional<String>          // id: %253
  %254 = metatype $@thick Closure.Type            // user: %257
  strong_retain %76 : $@callee_guaranteed () -> () // id: %255
  // function_ref Closure.__allocating_init(_:)
  %256 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %257
  %257 = apply %256(%76, %254) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %259
  %258 = alloc_stack $Closure                     // users: %259, %264, %262
  store %257 to %258 : $*Closure                  // id: %259
  %260 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %263, %262
  // function_ref Array.append(_:)
  %261 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %262
  %262 = apply %261<Closure>(%258, %260) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %260 : $*Array<Closure>              // id: %263
  dealloc_stack %258 : $*Closure                  // id: %264
  br bb25                                         // id: %265

bb6:                                              // Preds: bb4
  release_value %195 : $Optional<String>          // id: %266
  retain_value %195 : $Optional<String>           // id: %267
  debug_value %195 : $Optional<String>, let, name "$match" // id: %268
  %269 = string_literal utf8 "push2"              // user: %274
  %270 = integer_literal $Builtin.Word, 5         // user: %274
  %271 = integer_literal $Builtin.Int1, -1        // user: %274
  %272 = metatype $@thin String.Type              // user: %274
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %273 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %274
  %274 = apply %273(%269, %270, %271, %272) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %275
  %275 = enum $Optional<String>, #Optional.some!enumelt, %274 : $String // user: %277
  %276 = alloc_stack $Optional<String>            // users: %277, %282, %285, %284
  store %275 to %276 : $*Optional<String>         // id: %277
  %278 = alloc_stack $Optional<String>            // users: %279, %282, %283
  store %195 to %278 : $*Optional<String>         // id: %279
  %280 = metatype $@thin Optional<String>.Type    // user: %282
  // function_ref static Optional<A>.== infix(_:_:)
  %281 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %282
  %282 = apply %281<String>(%276, %278, %280) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %286
  dealloc_stack %278 : $*Optional<String>         // id: %283
  destroy_addr %276 : $*Optional<String>          // id: %284
  dealloc_stack %276 : $*Optional<String>         // id: %285
  %286 = struct_extract %282 : $Bool, #Bool._value // user: %287
  cond_br %286, bb7, bb8                          // id: %287

bb7:                                              // Preds: bb6
  release_value %195 : $Optional<String>          // id: %288
  %289 = metatype $@thick Closure.Type            // user: %292
  strong_retain %86 : $@callee_guaranteed () -> () // id: %290
  // function_ref Closure.__allocating_init(_:)
  %291 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %292
  %292 = apply %291(%86, %289) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %294
  %293 = alloc_stack $Closure                     // users: %294, %299, %297
  store %292 to %293 : $*Closure                  // id: %294
  %295 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %298, %297
  // function_ref Array.append(_:)
  %296 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %297
  %297 = apply %296<Closure>(%293, %295) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %295 : $*Array<Closure>              // id: %298
  dealloc_stack %293 : $*Closure                  // id: %299
  br bb25                                         // id: %300

bb8:                                              // Preds: bb6
  release_value %195 : $Optional<String>          // id: %301
  retain_value %195 : $Optional<String>           // id: %302
  debug_value %195 : $Optional<String>, let, name "$match" // id: %303
  %304 = string_literal utf8 "push2_1"            // user: %309
  %305 = integer_literal $Builtin.Word, 7         // user: %309
  %306 = integer_literal $Builtin.Int1, -1        // user: %309
  %307 = metatype $@thin String.Type              // user: %309
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %308 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %309
  %309 = apply %308(%304, %305, %306, %307) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %310
  %310 = enum $Optional<String>, #Optional.some!enumelt, %309 : $String // user: %312
  %311 = alloc_stack $Optional<String>            // users: %312, %317, %320, %319
  store %310 to %311 : $*Optional<String>         // id: %312
  %313 = alloc_stack $Optional<String>            // users: %314, %317, %318
  store %195 to %313 : $*Optional<String>         // id: %314
  %315 = metatype $@thin Optional<String>.Type    // user: %317
  // function_ref static Optional<A>.== infix(_:_:)
  %316 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %317
  %317 = apply %316<String>(%311, %313, %315) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %321
  dealloc_stack %313 : $*Optional<String>         // id: %318
  destroy_addr %311 : $*Optional<String>          // id: %319
  dealloc_stack %311 : $*Optional<String>         // id: %320
  %321 = struct_extract %317 : $Bool, #Bool._value // user: %322
  cond_br %321, bb9, bb10                         // id: %322

bb9:                                              // Preds: bb8
  release_value %195 : $Optional<String>          // id: %323
  %324 = metatype $@thick Closure.Type            // user: %327
  strong_retain %98 : $@callee_guaranteed () -> () // id: %325
  // function_ref Closure.__allocating_init(_:)
  %326 = function_ref @$s4file7ClosureCyACyyccfC : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %327
  %327 = apply %326(%98, %324) : $@convention(method) (@owned @callee_guaranteed () -> (), @thick Closure.Type) -> @owned Closure // user: %329
  %328 = alloc_stack $Closure                     // users: %329, %334, %332
  store %327 to %328 : $*Closure                  // id: %329
  %330 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %333, %332
  // function_ref Array.append(_:)
  %331 = function_ref @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> () // user: %332
  %332 = apply %331<Closure>(%328, %330) : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()
  end_access %330 : $*Array<Closure>              // id: %333
  dealloc_stack %328 : $*Closure                  // id: %334
  br bb25                                         // id: %335

bb10:                                             // Preds: bb8
  release_value %195 : $Optional<String>          // id: %336
  retain_value %195 : $Optional<String>           // id: %337
  debug_value %195 : $Optional<String>, let, name "$match" // id: %338
  %339 = string_literal utf8 "pop"                // user: %344
  %340 = integer_literal $Builtin.Word, 3         // user: %344
  %341 = integer_literal $Builtin.Int1, -1        // user: %344
  %342 = metatype $@thin String.Type              // user: %344
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %343 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %344
  %344 = apply %343(%339, %340, %341, %342) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %345
  %345 = enum $Optional<String>, #Optional.some!enumelt, %344 : $String // user: %347
  %346 = alloc_stack $Optional<String>            // users: %347, %352, %355, %354
  store %345 to %346 : $*Optional<String>         // id: %347
  %348 = alloc_stack $Optional<String>            // users: %349, %352, %353
  store %195 to %348 : $*Optional<String>         // id: %349
  %350 = metatype $@thin Optional<String>.Type    // user: %352
  // function_ref static Optional<A>.== infix(_:_:)
  %351 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %352
  %352 = apply %351<String>(%346, %348, %350) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %356
  dealloc_stack %348 : $*Optional<String>         // id: %353
  destroy_addr %346 : $*Optional<String>          // id: %354
  dealloc_stack %346 : $*Optional<String>         // id: %355
  %356 = struct_extract %352 : $Bool, #Bool._value // user: %357
  cond_br %356, bb11, bb14                        // id: %357

bb11:                                             // Preds: bb10
  release_value %195 : $Optional<String>          // id: %358
  %359 = begin_access [read] [static] %125 : $*Array<Closure> // users: %360, %362
  %360 = load %359 : $*Array<Closure>             // users: %371, %364, %361
  retain_value %360 : $Array<Closure>             // id: %361
  end_access %359 : $*Array<Closure>              // id: %362
  %363 = alloc_stack $Array<Closure>              // users: %365, %364, %375
  store %360 to %363 : $*Array<Closure>           // id: %364
  %365 = load %363 : $*Array<Closure>             // user: %367
  %366 = alloc_stack $Array<Closure>              // users: %367, %370, %369
  store %365 to %366 : $*Array<Closure>           // id: %367
  // function_ref Collection.isEmpty.getter
  %368 = function_ref @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %369
  %369 = apply %368<[Closure]>(%366) : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool // user: %372
  dealloc_stack %366 : $*Array<Closure>           // id: %370
  release_value %360 : $Array<Closure>            // id: %371
  %372 = struct_extract %369 : $Bool, #Bool._value // user: %374
  %373 = integer_literal $Builtin.Int1, -1        // user: %374
  %374 = builtin "xor_Int1"(%372 : $Builtin.Int1, %373 : $Builtin.Int1) : $Builtin.Int1 // user: %376
  dealloc_stack %363 : $*Array<Closure>           // id: %375
  cond_br %374, bb12, bb13                        // id: %376

bb12:                                             // Preds: bb11
  %377 = alloc_stack $Closure                     // users: %382, %384, %380
  %378 = begin_access [modify] [static] %125 : $*Array<Closure> // users: %381, %380
  // function_ref RangeReplaceableCollection<>.removeLast()
  %379 = function_ref @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element // user: %380
  %380 = apply %379<[Closure]>(%377, %378) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element
  end_access %378 : $*Array<Closure>              // id: %381
  %382 = load %377 : $*Closure                    // user: %383
  strong_release %382 : $Closure                  // id: %383
  dealloc_stack %377 : $*Closure                  // id: %384
  br bb25                                         // id: %385

bb13:                                             // Preds: bb11
  br bb15                                         // id: %386

bb14:                                             // Preds: bb10
  release_value %195 : $Optional<String>          // id: %387
  br bb15                                         // id: %388

bb15:                                             // Preds: bb13 bb14
  retain_value %195 : $Optional<String>           // id: %389
  debug_value %195 : $Optional<String>, let, name "$match" // id: %390
  %391 = string_literal utf8 "inc"                // user: %396
  %392 = integer_literal $Builtin.Word, 3         // user: %396
  %393 = integer_literal $Builtin.Int1, -1        // user: %396
  %394 = metatype $@thin String.Type              // user: %396
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %395 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %396
  %396 = apply %395(%391, %392, %393, %394) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %397
  %397 = enum $Optional<String>, #Optional.some!enumelt, %396 : $String // user: %399
  %398 = alloc_stack $Optional<String>            // users: %399, %404, %407, %406
  store %397 to %398 : $*Optional<String>         // id: %399
  %400 = alloc_stack $Optional<String>            // users: %401, %404, %405
  store %195 to %400 : $*Optional<String>         // id: %401
  %402 = metatype $@thin Optional<String>.Type    // user: %404
  // function_ref static Optional<A>.== infix(_:_:)
  %403 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %404
  %404 = apply %403<String>(%398, %400, %402) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %408
  dealloc_stack %400 : $*Optional<String>         // id: %405
  destroy_addr %398 : $*Optional<String>          // id: %406
  dealloc_stack %398 : $*Optional<String>         // id: %407
  %408 = struct_extract %404 : $Bool, #Bool._value // user: %409
  cond_br %408, bb16, bb17                        // id: %409

bb16:                                             // Preds: bb15
  release_value %195 : $Optional<String>          // id: %410
  %411 = integer_literal $Builtin.Int64, 1        // user: %416
  %412 = begin_access [modify] [dynamic] %60 : $*Int // users: %421, %413, %423
  %413 = struct_element_addr %412 : $*Int, #Int._value // user: %414
  %414 = load %413 : $*Builtin.Int64              // user: %416
  %415 = integer_literal $Builtin.Int1, -1        // user: %416
  %416 = builtin "sadd_with_overflow_Int64"(%414 : $Builtin.Int64, %411 : $Builtin.Int64, %415 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %418, %417
  %417 = tuple_extract %416 : $(Builtin.Int64, Builtin.Int1), 0 // user: %420
  %418 = tuple_extract %416 : $(Builtin.Int64, Builtin.Int1), 1 // user: %419
  cond_fail %418 : $Builtin.Int1, "arithmetic overflow" // id: %419
  %420 = struct $Int (%417 : $Builtin.Int64)      // user: %421
  store %420 to %412 : $*Int                      // id: %421
  %422 = tuple ()
  end_access %412 : $*Int                         // id: %423
  br bb25                                         // id: %424

bb17:                                             // Preds: bb15
  release_value %195 : $Optional<String>          // id: %425
  retain_value %195 : $Optional<String>           // id: %426
  debug_value %195 : $Optional<String>, let, name "$match" // id: %427
  %428 = string_literal utf8 "exec"               // user: %433
  %429 = integer_literal $Builtin.Word, 4         // user: %433
  %430 = integer_literal $Builtin.Int1, -1        // user: %433
  %431 = metatype $@thin String.Type              // user: %433
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %432 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %433
  %433 = apply %432(%428, %429, %430, %431) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %434
  %434 = enum $Optional<String>, #Optional.some!enumelt, %433 : $String // user: %436
  %435 = alloc_stack $Optional<String>            // users: %436, %441, %444, %443
  store %434 to %435 : $*Optional<String>         // id: %436
  %437 = alloc_stack $Optional<String>            // users: %438, %441, %442
  store %195 to %437 : $*Optional<String>         // id: %438
  %439 = metatype $@thin Optional<String>.Type    // user: %441
  // function_ref static Optional<A>.== infix(_:_:)
  %440 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %441
  %441 = apply %440<String>(%435, %437, %439) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %445
  dealloc_stack %437 : $*Optional<String>         // id: %442
  destroy_addr %435 : $*Optional<String>          // id: %443
  dealloc_stack %435 : $*Optional<String>         // id: %444
  %445 = struct_extract %441 : $Bool, #Bool._value // user: %446
  cond_br %445, bb18, bb22                        // id: %446

bb18:                                             // Preds: bb17
  release_value %195 : $Optional<String>          // id: %447
  %448 = begin_access [read] [static] %125 : $*Array<Closure> // users: %449, %451
  %449 = load %448 : $*Array<Closure>             // users: %462, %453, %450
  retain_value %449 : $Array<Closure>             // id: %450
  end_access %448 : $*Array<Closure>              // id: %451
  %452 = alloc_stack $Array<Closure>              // users: %454, %453, %476, %481
  store %449 to %452 : $*Array<Closure>           // id: %453
  %454 = load %452 : $*Array<Closure>             // user: %457
  %455 = alloc_stack $Optional<Closure>           // users: %461, %475, %480, %459
  %456 = alloc_stack $Array<Closure>              // users: %457, %460, %459
  store %454 to %456 : $*Array<Closure>           // id: %457
  // function_ref BidirectionalCollection.last.getter
  %458 = function_ref @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element> // user: %459
  %459 = apply %458<[Closure]>(%455, %456) : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>
  dealloc_stack %456 : $*Array<Closure>           // id: %460
  %461 = load %455 : $*Optional<Closure>          // user: %463
  release_value %449 : $Array<Closure>            // id: %462
  switch_enum %461 : $Optional<Closure>, case #Optional.some!enumelt: bb19, case #Optional.none!enumelt: bb21 // id: %463

// %464                                           // users: %470, %465
bb19(%464 : $Closure):                            // Preds: bb18
  %465 = ref_element_addr %464 : $Closure, #Closure.closure // user: %466
  %466 = begin_access [read] [dynamic] %465 : $*@callee_guaranteed () -> () // users: %467, %469
  %467 = load %466 : $*@callee_guaranteed () -> () // users: %474, %471, %468
  strong_retain %467 : $@callee_guaranteed () -> () // id: %468
  end_access %466 : $*@callee_guaranteed () -> () // id: %469
  strong_release %464 : $Closure                  // id: %470
  %471 = apply %467() : $@callee_guaranteed () -> ()
  %472 = tuple ()                                 // user: %473
  %473 = enum $Optional<()>, #Optional.some!enumelt, %472 : $() // user: %477
  strong_release %467 : $@callee_guaranteed () -> () // id: %474
  dealloc_stack %455 : $*Optional<Closure>        // id: %475
  dealloc_stack %452 : $*Array<Closure>           // id: %476
  br bb20(%473 : $Optional<()>)                   // id: %477

bb20(%478 : $Optional<()>):                       // Preds: bb21 bb19
  br bb25                                         // id: %479

bb21:                                             // Preds: bb18
  dealloc_stack %455 : $*Optional<Closure>        // id: %480
  dealloc_stack %452 : $*Array<Closure>           // id: %481
  %482 = enum $Optional<()>, #Optional.none!enumelt // user: %483
  br bb20(%482 : $Optional<()>)                   // id: %483

bb22:                                             // Preds: bb17
  release_value %195 : $Optional<String>          // id: %484
  retain_value %195 : $Optional<String>           // id: %485
  debug_value %195 : $Optional<String>, let, name "$match" // id: %486
  %487 = string_literal utf8 "exit"               // user: %492
  %488 = integer_literal $Builtin.Word, 4         // user: %492
  %489 = integer_literal $Builtin.Int1, -1        // user: %492
  %490 = metatype $@thin String.Type              // user: %492
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %491 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %492
  %492 = apply %491(%487, %488, %489, %490) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %493
  %493 = enum $Optional<String>, #Optional.some!enumelt, %492 : $String // user: %495
  %494 = alloc_stack $Optional<String>            // users: %495, %500, %503, %502
  store %493 to %494 : $*Optional<String>         // id: %495
  %496 = alloc_stack $Optional<String>            // users: %497, %500, %501
  store %195 to %496 : $*Optional<String>         // id: %497
  %498 = metatype $@thin Optional<String>.Type    // user: %500
  // function_ref static Optional<A>.== infix(_:_:)
  %499 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %500
  %500 = apply %499<String>(%494, %496, %498) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %504
  dealloc_stack %496 : $*Optional<String>         // id: %501
  destroy_addr %494 : $*Optional<String>          // id: %502
  dealloc_stack %494 : $*Optional<String>         // id: %503
  %504 = struct_extract %500 : $Bool, #Bool._value // user: %505
  cond_br %504, bb23, bb24                        // id: %505

bb23:                                             // Preds: bb22
  release_value %195 : $Optional<String>          // id: %506
  %507 = integer_literal $Builtin.Int1, 0         // user: %508
  %508 = struct $Bool (%507 : $Builtin.Int1)      // user: %510
  %509 = begin_access [modify] [static] %159 : $*Bool // users: %510, %511
  store %508 to %509 : $*Bool                     // id: %510
  end_access %509 : $*Bool                        // id: %511
  br bb25                                         // id: %512

bb24:                                             // Preds: bb22
  release_value %195 : $Optional<String>          // id: %513
  %514 = integer_literal $Builtin.Word, 1         // user: %516
  // function_ref _allocateUninitializedArray<A>(_:)
  %515 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %516
  %516 = apply %515<Any>(%514) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %518, %517
  %517 = tuple_extract %516 : $(Array<Any>, Builtin.RawPointer), 0 // users: %536, %533
  %518 = tuple_extract %516 : $(Array<Any>, Builtin.RawPointer), 1 // user: %519
  %519 = pointer_to_address %518 : $Builtin.RawPointer to [strict] $*Any // user: %526
  %520 = string_literal utf8 "Mé možnosti jsou omezené, zeptej se jinak" // user: %525
  %521 = integer_literal $Builtin.Word, 44        // user: %525
  %522 = integer_literal $Builtin.Int1, 0         // user: %525
  %523 = metatype $@thin String.Type              // user: %525
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %524 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %525
  %525 = apply %524(%520, %521, %522, %523) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %527
  %526 = init_existential_addr %519 : $*Any, $String // user: %527
  store %525 to %526 : $*String                   // id: %527
  // function_ref default argument 1 of print(_:separator:terminator:)
  %528 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %529
  %529 = apply %528() : $@convention(thin) () -> @owned String // users: %535, %533
  // function_ref default argument 2 of print(_:separator:terminator:)
  %530 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %531
  %531 = apply %530() : $@convention(thin) () -> @owned String // users: %534, %533
  // function_ref print(_:separator:terminator:)
  %532 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %533
  %533 = apply %532(%517, %529, %531) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %531 : $String                    // id: %534
  release_value %529 : $String                    // id: %535
  release_value %517 : $Array<Any>                // id: %536
  br bb25                                         // id: %537

bb25:                                             // Preds: bb24 bb23 bb20 bb16 bb12 bb9 bb7 bb5 bb3
  release_value %195 : $Optional<String>          // id: %538
  br bb1                                          // id: %539

bb26:                                             // Preds: bb1
  %540 = integer_literal $Builtin.Word, 1         // user: %542
  // function_ref _allocateUninitializedArray<A>(_:)
  %541 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %542
  %542 = apply %541<Any>(%540) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %544, %543
  %543 = tuple_extract %542 : $(Array<Any>, Builtin.RawPointer), 0 // users: %562, %559
  %544 = tuple_extract %542 : $(Array<Any>, Builtin.RawPointer), 1 // user: %545
  %545 = pointer_to_address %544 : $Builtin.RawPointer to [strict] $*Any // user: %552
  %546 = string_literal utf8 "===== will end"     // user: %551
  %547 = integer_literal $Builtin.Word, 14        // user: %551
  %548 = integer_literal $Builtin.Int1, -1        // user: %551
  %549 = metatype $@thin String.Type              // user: %551
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %550 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %551
  %551 = apply %550(%546, %547, %548, %549) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %553
  %552 = init_existential_addr %545 : $*Any, $String // user: %553
  store %551 to %552 : $*String                   // id: %553
  // function_ref default argument 1 of print(_:separator:terminator:)
  %554 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %555
  %555 = apply %554() : $@convention(thin) () -> @owned String // users: %561, %559
  // function_ref default argument 2 of print(_:separator:terminator:)
  %556 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %557
  %557 = apply %556() : $@convention(thin) () -> @owned String // users: %560, %559
  // function_ref print(_:separator:terminator:)
  %558 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %559
  %559 = apply %558(%543, %555, %557) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %557 : $String                    // id: %560
  release_value %555 : $String                    // id: %561
  release_value %543 : $Array<Any>                // id: %562
  dealloc_stack %159 : $*Bool                     // id: %563
  destroy_addr %125 : $*Array<Closure>            // id: %564
  dealloc_stack %125 : $*Array<Closure>           // id: %565
  strong_release %98 : $@callee_guaranteed () -> () // id: %566
  strong_release %86 : $@callee_guaranteed () -> () // id: %567
  strong_release %76 : $@callee_guaranteed () -> () // id: %568
  strong_release %68 : $@callee_guaranteed () -> () // id: %569
  strong_release %59 : ${ var Int }               // id: %570
  strong_release %11 : $Number                    // id: %571
  strong_release %5 : $Empty                      // id: %572
  strong_release %1 : $@callee_guaranteed (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () // id: %573
  %574 = tuple ()                                 // user: %575
  return %574 : $()                               // id: %575
} // end sil function '$s4file3fooyyF'

// closure #1 in foo()
sil private @$s4file3fooyyFySi_S2itcSScfU_ : $@convention(thin) (@guaranteed String) -> @owned @callee_guaranteed (Int, Int, Int) -> () {
// %0 "name"                                      // users: %4, %3, %1
bb0(%0 : $String):
  debug_value %0 : $String, let, name "name", argno 1 // id: %1
  // function_ref closure #1 in closure #1 in foo()
  %2 = function_ref @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %4
  retain_value %0 : $String                       // id: %3
  %4 = partial_apply [callee_guaranteed] %2(%0) : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () // user: %5
  return %4 : $@callee_guaranteed (Int, Int, Int) -> () // id: %5
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_'

// closure #1 in closure #1 in foo()
sil private @$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_ : $@convention(thin) (Int, Int, Int, @guaranteed String) -> () {
// %0 "strong"                                    // users: %53, %4
// %1 "weak"                                      // users: %71, %5
// %2 "unowned"                                   // users: %89, %6
// %3 "name"                                      // users: %35, %7
bb0(%0 : $Int, %1 : $Int, %2 : $Int, %3 : $String):
  debug_value %0 : $Int, let, name "strong", argno 1 // id: %4
  debug_value %1 : $Int, let, name "weak", argno 2 // id: %5
  debug_value %2 : $Int, let, name "unowned", argno 3 // id: %6
  debug_value %3 : $String, let, name "name", argno 4 // id: %7
  %8 = integer_literal $Builtin.Word, 1           // user: %10
  // function_ref _allocateUninitializedArray<A>(_:)
  %9 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %10
  %10 = apply %9<Any>(%8) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %12, %11
  %11 = tuple_extract %10 : $(Array<Any>, Builtin.RawPointer), 0 // users: %123, %120
  %12 = tuple_extract %10 : $(Array<Any>, Builtin.RawPointer), 1 // user: %13
  %13 = pointer_to_address %12 : $Builtin.RawPointer to [strict] $*Any // user: %113
  %14 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %106, %22, %109, %108, %29, %36, %47, %54, %65, %72, %83, %90, %101
  %15 = integer_literal $Builtin.Int64, 39        // user: %16
  %16 = struct $Int (%15 : $Builtin.Int64)        // user: %21
  %17 = integer_literal $Builtin.Int64, 4         // user: %18
  %18 = struct $Int (%17 : $Builtin.Int64)        // user: %21
  %19 = metatype $@thin DefaultStringInterpolation.Type // user: %21
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %20 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %21
  %21 = apply %20(%16, %18, %19) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %22
  store %21 to %14 : $*DefaultStringInterpolation // id: %22
  %23 = string_literal utf8 "Name: "              // user: %28
  %24 = integer_literal $Builtin.Word, 6          // user: %28
  %25 = integer_literal $Builtin.Int1, -1         // user: %28
  %26 = metatype $@thin String.Type               // user: %28
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %27 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %28
  %28 = apply %27(%23, %24, %25, %26) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %33, %31
  %29 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %32, %31
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %30 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %31
  %31 = apply %30(%28, %29) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %29 : $*DefaultStringInterpolation   // id: %32
  release_value %28 : $String                     // id: %33
  %34 = alloc_stack $String                       // users: %35, %40, %38
  store %3 to %34 : $*String                      // id: %35
  %36 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %39, %38
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %37 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %38
  %38 = apply %37<String>(%34, %36) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %36 : $*DefaultStringInterpolation   // id: %39
  dealloc_stack %34 : $*String                    // id: %40
  %41 = string_literal utf8 "; Strong: ("         // user: %46
  %42 = integer_literal $Builtin.Word, 11         // user: %46
  %43 = integer_literal $Builtin.Int1, -1         // user: %46
  %44 = metatype $@thin String.Type               // user: %46
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %45 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %46
  %46 = apply %45(%41, %42, %43, %44) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %51, %49
  %47 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %50, %49
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %48 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %49
  %49 = apply %48(%46, %47) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %47 : $*DefaultStringInterpolation   // id: %50
  release_value %46 : $String                     // id: %51
  %52 = alloc_stack $Int                          // users: %53, %58, %56
  store %0 to %52 : $*Int                         // id: %53
  %54 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 "); Weak: ("          // user: %64
  %60 = integer_literal $Builtin.Word, 10         // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  release_value %64 : $String                     // id: %69
  %70 = alloc_stack $Int                          // users: %71, %76, %74
  store %1 to %70 : $*Int                         // id: %71
  %72 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %75, %74
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %73 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %74
  %74 = apply %73<Int>(%70, %72) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %72 : $*DefaultStringInterpolation   // id: %75
  dealloc_stack %70 : $*Int                       // id: %76
  %77 = string_literal utf8 "); Unowned("         // user: %82
  %78 = integer_literal $Builtin.Word, 11         // user: %82
  %79 = integer_literal $Builtin.Int1, -1         // user: %82
  %80 = metatype $@thin String.Type               // user: %82
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %81 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %82
  %82 = apply %81(%77, %78, %79, %80) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %87, %85
  %83 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %86, %85
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %84 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %85
  %85 = apply %84(%82, %83) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %83 : $*DefaultStringInterpolation   // id: %86
  release_value %82 : $String                     // id: %87
  %88 = alloc_stack $Int                          // users: %89, %94, %92
  store %2 to %88 : $*Int                         // id: %89
  %90 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %93, %92
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %91 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %92
  %92 = apply %91<Int>(%88, %90) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %90 : $*DefaultStringInterpolation   // id: %93
  dealloc_stack %88 : $*Int                       // id: %94
  %95 = string_literal utf8 ")"                   // user: %100
  %96 = integer_literal $Builtin.Word, 1          // user: %100
  %97 = integer_literal $Builtin.Int1, -1         // user: %100
  %98 = metatype $@thin String.Type               // user: %100
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %99 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %100
  %100 = apply %99(%95, %96, %97, %98) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %105, %103
  %101 = begin_access [modify] [static] %14 : $*DefaultStringInterpolation // users: %104, %103
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %102 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %103
  %103 = apply %102(%100, %101) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %101 : $*DefaultStringInterpolation  // id: %104
  release_value %100 : $String                    // id: %105
  %106 = load %14 : $*DefaultStringInterpolation  // users: %112, %107
  retain_value %106 : $DefaultStringInterpolation // id: %107
  destroy_addr %14 : $*DefaultStringInterpolation // id: %108
  dealloc_stack %14 : $*DefaultStringInterpolation // id: %109
  %110 = metatype $@thin String.Type              // user: %112
  // function_ref String.init(stringInterpolation:)
  %111 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %112
  %112 = apply %111(%106, %110) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %114
  %113 = init_existential_addr %13 : $*Any, $String // user: %114
  store %112 to %113 : $*String                   // id: %114
  // function_ref default argument 1 of print(_:separator:terminator:)
  %115 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %116
  %116 = apply %115() : $@convention(thin) () -> @owned String // users: %122, %120
  // function_ref default argument 2 of print(_:separator:terminator:)
  %117 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %118
  %118 = apply %117() : $@convention(thin) () -> @owned String // users: %121, %120
  // function_ref print(_:separator:terminator:)
  %119 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %120
  %120 = apply %119(%11, %116, %118) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %118 : $String                    // id: %121
  release_value %116 : $String                    // id: %122
  release_value %11 : $Array<Any>                 // id: %123
  %124 = tuple ()                                 // user: %125
  return %124 : $()                               // id: %125
} // end sil function '$s4file3fooyyFySi_S2itcSScfU_ySi_S2itcfU_'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] [_semantics "array.uninitialized_intrinsic"] @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer)

// Int.init(_builtinIntegerLiteral:)
sil public_external [transparent] [serialized] @$sSi22_builtinIntegerLiteralSiBI_tcfC : $@convention(method) (Builtin.IntLiteral, @thin Int.Type) -> Int {
// %0                                             // user: %2
bb0(%0 : $Builtin.IntLiteral, %1 : $@thin Int.Type):
  %2 = builtin "s_to_s_checked_trunc_IntLiteral_Int64"(%0 : $Builtin.IntLiteral) : $(Builtin.Int64, Builtin.Int1) // user: %3
  %3 = tuple_extract %2 : $(Builtin.Int64, Builtin.Int1), 0 // user: %4
  %4 = struct $Int (%3 : $Builtin.Int64)          // user: %5
  return %4 : $Int                                // id: %5
} // end sil function '$sSi22_builtinIntegerLiteralSiBI_tcfC'

// DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
sil [serialized] @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [serialized] [always_inline] [readonly] [_semantics "string.makeUTF8"] @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// DefaultStringInterpolation.appendLiteral(_:)
sil [serialized] @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzs20TextOutputStreamableRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible, τ_0_0 : TextOutputStreamable> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// DefaultStringInterpolation.appendInterpolation<A>(_:)
sil [serialized] @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()

// String.init(stringInterpolation:)
sil [serialized] [readonly] @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String

// default argument 1 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 " "                    // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA0_'

// default argument 2 of print(_:separator:terminator:)
sil shared_external [serialized] @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String {
bb0:
  %0 = string_literal utf8 "\n"                   // user: %5
  %1 = integer_literal $Builtin.Word, 1           // user: %5
  %2 = integer_literal $Builtin.Int1, -1          // user: %5
  %3 = metatype $@thin String.Type                // user: %5
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %4 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %5
  %5 = apply %4(%0, %1, %2, %3) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %6
  return %5 : $String                             // id: %6
} // end sil function '$ss5print_9separator10terminatoryypd_S2StFfA1_'

// print(_:separator:terminator:)
sil @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()

// closure #2 in foo()
sil private @$s4file3fooyyFyycfU0_ : $@convention(thin) (@guaranteed Number) -> () {
// %0 "number"                                    // users: %3, %1
bb0(%0 : $Number):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %1
  %2 = integer_literal $Builtin.Int64, 1          // user: %8
  %3 = ref_element_addr %0 : $Number, #Number.number // user: %4
  %4 = begin_access [modify] [dynamic] %3 : $*Int // users: %13, %5, %15
  %5 = struct_element_addr %4 : $*Int, #Int._value // user: %6
  %6 = load %5 : $*Builtin.Int64                  // user: %8
  %7 = integer_literal $Builtin.Int1, -1          // user: %8
  %8 = builtin "sadd_with_overflow_Int64"(%6 : $Builtin.Int64, %2 : $Builtin.Int64, %7 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %10, %9
  %9 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 0 // user: %12
  %10 = tuple_extract %8 : $(Builtin.Int64, Builtin.Int1), 1 // user: %11
  cond_fail %10 : $Builtin.Int1, "arithmetic overflow" // id: %11
  %12 = struct $Int (%9 : $Builtin.Int64)         // user: %13
  store %12 to %4 : $*Int                         // id: %13
  %14 = tuple ()
  end_access %4 : $*Int                           // id: %15
  %16 = tuple ()                                  // user: %17
  return %16 : $()                                // id: %17
} // end sil function '$s4file3fooyyFyycfU0_'

// static Int.+= infix(_:_:)
sil public_external [transparent] [serialized] @$sSi2peoiyySiz_SitFZ : $@convention(method) (@inout Int, Int, @thin Int.Type) -> () {
// %0                                             // users: %14, %3
// %1                                             // user: %5
bb0(%0 : $*Int, %1 : $Int, %2 : $@thin Int.Type):
  %3 = struct_element_addr %0 : $*Int, #Int._value // user: %4
  %4 = load %3 : $*Builtin.Int64                  // user: %7
  %5 = struct_extract %1 : $Int, #Int._value      // user: %7
  %6 = integer_literal $Builtin.Int1, -1          // user: %7
  %7 = builtin "sadd_with_overflow_Int64"(%4 : $Builtin.Int64, %5 : $Builtin.Int64, %6 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %9, %8
  %8 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 0 // user: %13
  %9 = tuple_extract %7 : $(Builtin.Int64, Builtin.Int1), 1 // user: %12
  br bb1                                          // id: %10

bb1:                                              // Preds: bb0
  br bb2                                          // id: %11

bb2:                                              // Preds: bb1
  cond_fail %9 : $Builtin.Int1, "arithmetic overflow" // id: %12
  %13 = struct $Int (%8 : $Builtin.Int64)         // user: %14
  store %13 to %0 : $*Int                         // id: %14
  %15 = tuple ()                                  // user: %16
  return %15 : $()                                // id: %16
} // end sil function '$sSi2peoiyySiz_SitFZ'

// closure #3 in foo()
sil private @$s4file3fooyyFyycfU1_ : $@convention(thin) (@guaranteed Number, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %6, %2
// %1 "value"                                     // user: %3
bb0(%0 : $Number, %1 : ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  %3 = project_box %1 : ${ var Int }, 0           // users: %45, %4
  debug_value_addr %3 : $*Int, var, name "value", argno 2 // id: %4
  %5 = integer_literal $Builtin.Int64, 1          // user: %11
  %6 = ref_element_addr %0 : $Number, #Number.number // user: %7
  %7 = begin_access [modify] [dynamic] %6 : $*Int // users: %16, %8, %18
  %8 = struct_element_addr %7 : $*Int, #Int._value // user: %9
  %9 = load %8 : $*Builtin.Int64                  // user: %11
  %10 = integer_literal $Builtin.Int1, -1         // user: %11
  %11 = builtin "sadd_with_overflow_Int64"(%9 : $Builtin.Int64, %5 : $Builtin.Int64, %10 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %13, %12
  %12 = tuple_extract %11 : $(Builtin.Int64, Builtin.Int1), 0 // user: %15
  %13 = tuple_extract %11 : $(Builtin.Int64, Builtin.Int1), 1 // user: %14
  cond_fail %13 : $Builtin.Int1, "arithmetic overflow" // id: %14
  %15 = struct $Int (%12 : $Builtin.Int64)        // user: %16
  store %15 to %7 : $*Int                         // id: %16
  %17 = tuple ()
  end_access %7 : $*Int                           // id: %18
  %19 = integer_literal $Builtin.Word, 1          // user: %21
  // function_ref _allocateUninitializedArray<A>(_:)
  %20 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %21
  %21 = apply %20<Any>(%19) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %23, %22
  %22 = tuple_extract %21 : $(Array<Any>, Builtin.RawPointer), 0 // users: %83, %80
  %23 = tuple_extract %21 : $(Array<Any>, Builtin.RawPointer), 1 // user: %24
  %24 = pointer_to_address %23 : $Builtin.RawPointer to [strict] $*Any // user: %73
  %25 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %66, %33, %69, %68, %40, %50, %61
  %26 = integer_literal $Builtin.Int64, 3         // user: %27
  %27 = struct $Int (%26 : $Builtin.Int64)        // user: %32
  %28 = integer_literal $Builtin.Int64, 1         // user: %29
  %29 = struct $Int (%28 : $Builtin.Int64)        // user: %32
  %30 = metatype $@thin DefaultStringInterpolation.Type // user: %32
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %31 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %32
  %32 = apply %31(%27, %29, %30) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %33
  store %32 to %25 : $*DefaultStringInterpolation // id: %33
  %34 = string_literal utf8 "v: "                 // user: %39
  %35 = integer_literal $Builtin.Word, 3          // user: %39
  %36 = integer_literal $Builtin.Int1, -1         // user: %39
  %37 = metatype $@thin String.Type               // user: %39
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %38 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %39
  %39 = apply %38(%34, %35, %36, %37) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %44, %42
  %40 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %43, %42
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %41 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %42
  %42 = apply %41(%39, %40) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %40 : $*DefaultStringInterpolation   // id: %43
  release_value %39 : $String                     // id: %44
  %45 = begin_access [read] [dynamic] %3 : $*Int  // users: %46, %47
  %46 = load %45 : $*Int                          // user: %49
  end_access %45 : $*Int                          // id: %47
  %48 = alloc_stack $Int                          // users: %49, %54, %52
  store %46 to %48 : $*Int                        // id: %49
  %50 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %53, %52
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %51 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %52
  %52 = apply %51<Int>(%48, %50) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %50 : $*DefaultStringInterpolation   // id: %53
  dealloc_stack %48 : $*Int                       // id: %54
  %55 = string_literal utf8 ""                    // user: %60
  %56 = integer_literal $Builtin.Word, 0          // user: %60
  %57 = integer_literal $Builtin.Int1, -1         // user: %60
  %58 = metatype $@thin String.Type               // user: %60
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %59 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %60
  %60 = apply %59(%55, %56, %57, %58) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %65, %63
  %61 = begin_access [modify] [static] %25 : $*DefaultStringInterpolation // users: %64, %63
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %62 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %63
  %63 = apply %62(%60, %61) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %61 : $*DefaultStringInterpolation   // id: %64
  release_value %60 : $String                     // id: %65
  %66 = load %25 : $*DefaultStringInterpolation   // users: %72, %67
  retain_value %66 : $DefaultStringInterpolation  // id: %67
  destroy_addr %25 : $*DefaultStringInterpolation // id: %68
  dealloc_stack %25 : $*DefaultStringInterpolation // id: %69
  %70 = metatype $@thin String.Type               // user: %72
  // function_ref String.init(stringInterpolation:)
  %71 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %72
  %72 = apply %71(%66, %70) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %74
  %73 = init_existential_addr %24 : $*Any, $String // user: %74
  store %72 to %73 : $*String                     // id: %74
  // function_ref default argument 1 of print(_:separator:terminator:)
  %75 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %76
  %76 = apply %75() : $@convention(thin) () -> @owned String // users: %82, %80
  // function_ref default argument 2 of print(_:separator:terminator:)
  %77 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %78
  %78 = apply %77() : $@convention(thin) () -> @owned String // users: %81, %80
  // function_ref print(_:separator:terminator:)
  %79 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %80
  %80 = apply %79(%22, %76, %78) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %78 : $String                     // id: %81
  release_value %76 : $String                     // id: %82
  release_value %22 : $Array<Any>                 // id: %83
  %84 = tuple ()                                  // user: %85
  return %84 : $()                                // id: %85
} // end sil function '$s4file3fooyyFyycfU1_'

// closure #4 in foo()
sil private @$s4file3fooyyFyycfU2_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty) -> () {
// %0 "number"                                    // users: %5, %2
// %1 "empty"                                     // users: %19, %3
bb0(%0 : $Number, %1 : $Empty):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %2
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %3
  %4 = integer_literal $Builtin.Int64, 1          // user: %10
  %5 = ref_element_addr %0 : $Number, #Number.number // user: %6
  %6 = begin_access [modify] [dynamic] %5 : $*Int // users: %15, %7, %17
  %7 = struct_element_addr %6 : $*Int, #Int._value // user: %8
  %8 = load %7 : $*Builtin.Int64                  // user: %10
  %9 = integer_literal $Builtin.Int1, -1          // user: %10
  %10 = builtin "sadd_with_overflow_Int64"(%8 : $Builtin.Int64, %4 : $Builtin.Int64, %9 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %12, %11
  %11 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 0 // user: %14
  %12 = tuple_extract %10 : $(Builtin.Int64, Builtin.Int1), 1 // user: %13
  cond_fail %12 : $Builtin.Int1, "arithmetic overflow" // id: %13
  %14 = struct $Int (%11 : $Builtin.Int64)        // user: %15
  store %14 to %6 : $*Int                         // id: %15
  %16 = tuple ()
  end_access %6 : $*Int                           // id: %17
  // function_ref Empty.foo()
  %18 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %19
  %19 = apply %18(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %20 = tuple ()                                  // user: %21
  return %20 : $()                                // id: %21
} // end sil function '$s4file3fooyyFyycfU2_'

// closure #5 in foo()
sil private @$s4file3fooyyFyycfU3_ : $@convention(thin) (@guaranteed Number, @guaranteed Empty, @guaranteed { var Int }) -> () {
// %0 "number"                                    // users: %8, %3
// %1 "empty"                                     // users: %22, %4
// %2 "value"                                     // user: %5
bb0(%0 : $Number, %1 : $Empty, %2 : ${ var Int }):
  debug_value %0 : $Number, let, name "number", argno 1 // id: %3
  debug_value %1 : $Empty, let, name "empty", argno 2 // id: %4
  %5 = project_box %2 : ${ var Int }, 0           // users: %49, %6
  debug_value_addr %5 : $*Int, var, name "value", argno 3 // id: %6
  %7 = integer_literal $Builtin.Int64, 1          // user: %13
  %8 = ref_element_addr %0 : $Number, #Number.number // user: %9
  %9 = begin_access [modify] [dynamic] %8 : $*Int // users: %18, %10, %20
  %10 = struct_element_addr %9 : $*Int, #Int._value // user: %11
  %11 = load %10 : $*Builtin.Int64                // user: %13
  %12 = integer_literal $Builtin.Int1, -1         // user: %13
  %13 = builtin "sadd_with_overflow_Int64"(%11 : $Builtin.Int64, %7 : $Builtin.Int64, %12 : $Builtin.Int1) : $(Builtin.Int64, Builtin.Int1) // users: %15, %14
  %14 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 0 // user: %17
  %15 = tuple_extract %13 : $(Builtin.Int64, Builtin.Int1), 1 // user: %16
  cond_fail %15 : $Builtin.Int1, "arithmetic overflow" // id: %16
  %17 = struct $Int (%14 : $Builtin.Int64)        // user: %18
  store %17 to %9 : $*Int                         // id: %18
  %19 = tuple ()
  end_access %9 : $*Int                           // id: %20
  // function_ref Empty.foo()
  %21 = function_ref @$s4file5EmptyC3fooyyF : $@convention(method) (@guaranteed Empty) -> () // user: %22
  %22 = apply %21(%1) : $@convention(method) (@guaranteed Empty) -> ()
  %23 = integer_literal $Builtin.Word, 1          // user: %25
  // function_ref _allocateUninitializedArray<A>(_:)
  %24 = function_ref @$ss27_allocateUninitializedArrayySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %25
  %25 = apply %24<Any>(%23) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %27, %26
  %26 = tuple_extract %25 : $(Array<Any>, Builtin.RawPointer), 0 // users: %87, %84
  %27 = tuple_extract %25 : $(Array<Any>, Builtin.RawPointer), 1 // user: %28
  %28 = pointer_to_address %27 : $Builtin.RawPointer to [strict] $*Any // user: %77
  %29 = alloc_stack $DefaultStringInterpolation, var, name "$interpolation" // users: %70, %37, %73, %72, %44, %54, %65
  %30 = integer_literal $Builtin.Int64, 3         // user: %31
  %31 = struct $Int (%30 : $Builtin.Int64)        // user: %36
  %32 = integer_literal $Builtin.Int64, 1         // user: %33
  %33 = struct $Int (%32 : $Builtin.Int64)        // user: %36
  %34 = metatype $@thin DefaultStringInterpolation.Type // user: %36
  // function_ref DefaultStringInterpolation.init(literalCapacity:interpolationCount:)
  %35 = function_ref @$ss26DefaultStringInterpolationV15literalCapacity18interpolationCountABSi_SitcfC : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %36
  %36 = apply %35(%31, %33, %34) : $@convention(method) (Int, Int, @thin DefaultStringInterpolation.Type) -> @owned DefaultStringInterpolation // user: %37
  store %36 to %29 : $*DefaultStringInterpolation // id: %37
  %38 = string_literal utf8 "v: "                 // user: %43
  %39 = integer_literal $Builtin.Word, 3          // user: %43
  %40 = integer_literal $Builtin.Int1, -1         // user: %43
  %41 = metatype $@thin String.Type               // user: %43
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %42 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %43
  %43 = apply %42(%38, %39, %40, %41) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %48, %46
  %44 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %47, %46
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %45 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %46
  %46 = apply %45(%43, %44) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %44 : $*DefaultStringInterpolation   // id: %47
  release_value %43 : $String                     // id: %48
  %49 = begin_access [read] [dynamic] %5 : $*Int  // users: %50, %51
  %50 = load %49 : $*Int                          // user: %53
  end_access %49 : $*Int                          // id: %51
  %52 = alloc_stack $Int                          // users: %53, %58, %56
  store %50 to %52 : $*Int                        // id: %53
  %54 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %57, %56
  // function_ref DefaultStringInterpolation.appendInterpolation<A>(_:)
  %55 = function_ref @$ss26DefaultStringInterpolationV06appendC0yyxs06CustomB11ConvertibleRzlF : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> () // user: %56
  %56 = apply %55<Int>(%52, %54) : $@convention(method) <τ_0_0 where τ_0_0 : CustomStringConvertible> (@in_guaranteed τ_0_0, @inout DefaultStringInterpolation) -> ()
  end_access %54 : $*DefaultStringInterpolation   // id: %57
  dealloc_stack %52 : $*Int                       // id: %58
  %59 = string_literal utf8 ""                    // user: %64
  %60 = integer_literal $Builtin.Word, 0          // user: %64
  %61 = integer_literal $Builtin.Int1, -1         // user: %64
  %62 = metatype $@thin String.Type               // user: %64
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %63 = function_ref @$sSS21_builtinStringLiteral17utf8CodeUnitCount7isASCIISSBp_BwBi1_tcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %64
  %64 = apply %63(%59, %60, %61, %62) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // users: %69, %67
  %65 = begin_access [modify] [static] %29 : $*DefaultStringInterpolation // users: %68, %67
  // function_ref DefaultStringInterpolation.appendLiteral(_:)
  %66 = function_ref @$ss26DefaultStringInterpolationV13appendLiteralyySSF : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> () // user: %67
  %67 = apply %66(%64, %65) : $@convention(method) (@guaranteed String, @inout DefaultStringInterpolation) -> ()
  end_access %65 : $*DefaultStringInterpolation   // id: %68
  release_value %64 : $String                     // id: %69
  %70 = load %29 : $*DefaultStringInterpolation   // users: %76, %71
  retain_value %70 : $DefaultStringInterpolation  // id: %71
  destroy_addr %29 : $*DefaultStringInterpolation // id: %72
  dealloc_stack %29 : $*DefaultStringInterpolation // id: %73
  %74 = metatype $@thin String.Type               // user: %76
  // function_ref String.init(stringInterpolation:)
  %75 = function_ref @$sSS19stringInterpolationSSs013DefaultStringB0V_tcfC : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %76
  %76 = apply %75(%70, %74) : $@convention(method) (@owned DefaultStringInterpolation, @thin String.Type) -> @owned String // user: %78
  %77 = init_existential_addr %28 : $*Any, $String // user: %78
  store %76 to %77 : $*String                     // id: %78
  // function_ref default argument 1 of print(_:separator:terminator:)
  %79 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA0_ : $@convention(thin) () -> @owned String // user: %80
  %80 = apply %79() : $@convention(thin) () -> @owned String // users: %86, %84
  // function_ref default argument 2 of print(_:separator:terminator:)
  %81 = function_ref @$ss5print_9separator10terminatoryypd_S2StFfA1_ : $@convention(thin) () -> @owned String // user: %82
  %82 = apply %81() : $@convention(thin) () -> @owned String // users: %85, %84
  // function_ref print(_:separator:terminator:)
  %83 = function_ref @$ss5print_9separator10terminatoryypd_S2StF : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> () // user: %84
  %84 = apply %83(%26, %80, %82) : $@convention(thin) (@guaranteed Array<Any>, @guaranteed String, @guaranteed String) -> ()
  release_value %82 : $String                     // id: %85
  release_value %80 : $String                     // id: %86
  release_value %26 : $Array<Any>                 // id: %87
  %88 = tuple ()                                  // user: %89
  return %88 : $()                                // id: %89
} // end sil function '$s4file3fooyyFyycfU3_'

// Array.init()
sil [serialized] [_semantics "array.init.empty"] @$sS2ayxGycfC : $@convention(method) <τ_0_0> (@thin Array<τ_0_0>.Type) -> @owned Array<τ_0_0>

// Array.reserveCapacity(_:)
sil [serialized] [_semantics "array.mutate_unknown"] @$sSa15reserveCapacityyySiF : $@convention(method) <τ_0_0> (Int, @inout Array<τ_0_0>) -> ()

// Bool.init(_builtinBooleanLiteral:)
sil public_external [transparent] [serialized] @$sSb22_builtinBooleanLiteralSbBi1__tcfC : $@convention(method) (Builtin.Int1, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Builtin.Int1, %1 : $@thin Bool.Type):
  %2 = struct $Bool (%0 : $Builtin.Int1)          // user: %3
  return %2 : $Bool                               // id: %3
} // end sil function '$sSb22_builtinBooleanLiteralSbBi1__tcfC'

// default argument 0 of readLine(strippingNewline:)
sil shared_external [serialized] @$ss8readLine16strippingNewlineSSSgSb_tFfA_ : $@convention(thin) () -> Bool {
bb0:
  %0 = integer_literal $Builtin.Int1, -1          // user: %1
  %1 = struct $Bool (%0 : $Builtin.Int1)          // user: %2
  return %1 : $Bool                               // id: %2
} // end sil function '$ss8readLine16strippingNewlineSSSgSb_tFfA_'

// readLine(strippingNewline:)
sil @$ss8readLine16strippingNewlineSSSgSb_tF : $@convention(thin) (Bool) -> @owned Optional<String>

// ~= infix<A>(_:_:)
sil public_external [transparent] [serialized] @$ss2teoiySbx_xtSQRzlF : $@convention(thin) <T where T : Equatable> (@in_guaranteed T, @in_guaranteed T) -> Bool {
// %0                                             // user: %4
// %1                                             // user: %4
bb0(%0 : $*T, %1 : $*T):
  %2 = metatype $@thick T.Type                    // user: %4
  %3 = witness_method $T, #Equatable."==" : <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %4
  %4 = apply %3<T>(%0, %1, %2) : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed τ_0_0, @in_guaranteed τ_0_0, @thick τ_0_0.Type) -> Bool // user: %5
  return %4 : $Bool                               // id: %5
} // end sil function '$ss2teoiySbx_xtSQRzlF'

// Array.append(_:)
sil [serialized] [_semantics "array.append_element"] @$sSa6appendyyxnF : $@convention(method) <τ_0_0> (@in τ_0_0, @inout Array<τ_0_0>) -> ()

// Collection.isEmpty.getter
sil [serialized] @$sSlsE7isEmptySbvg : $@convention(method) <τ_0_0 where τ_0_0 : Collection> (@in_guaranteed τ_0_0) -> Bool

// static Bool.! prefix(_:)
sil public_external [transparent] [serialized] @$sSb1nopyS2bFZ : $@convention(method) (Bool, @thin Bool.Type) -> Bool {
// %0                                             // user: %2
bb0(%0 : $Bool, %1 : $@thin Bool.Type):
  %2 = struct_extract %0 : $Bool, #Bool._value    // user: %4
  %3 = integer_literal $Builtin.Int1, -1          // user: %4
  %4 = builtin "xor_Int1"(%2 : $Builtin.Int1, %3 : $Builtin.Int1) : $Builtin.Int1 // user: %5
  %5 = struct $Bool (%4 : $Builtin.Int1)          // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sSb1nopyS2bFZ'

// RangeReplaceableCollection<>.removeLast()
sil [serialized] @$sSmsSKRzrlE10removeLast7ElementSTQzyF : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection, τ_0_0 : RangeReplaceableCollection> (@inout τ_0_0) -> @out τ_0_0.Element

// BidirectionalCollection.last.getter
sil [serialized] @$sSKsE4last7ElementQzSgvg : $@convention(method) <τ_0_0 where τ_0_0 : BidirectionalCollection> (@in_guaranteed τ_0_0) -> @out Optional<τ_0_0.Element>

// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
sil shared_external [transparent] [serialized] [thunk] @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW : $@convention(witness_method: Equatable) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thick Optional<τ_0_0>.Type) -> Bool {
// %0                                             // user: %5
// %1                                             // user: %5
bb0(%0 : $*Optional<τ_0_0>, %1 : $*Optional<τ_0_0>, %2 : $@thick Optional<τ_0_0>.Type):
  %3 = metatype $@thin Optional<τ_0_0>.Type      // user: %5
  // function_ref static Optional<A>.== infix(_:_:)
  %4 = function_ref @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %5
  %5 = apply %4<τ_0_0>(%0, %1, %3) : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool // user: %6
  return %5 : $Bool                               // id: %6
} // end sil function '$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW'

// static Optional<A>.== infix(_:_:)
sil [serialized] @$sSqsSQRzlE2eeoiySbxSg_ABtFZ : $@convention(method) <τ_0_0 where τ_0_0 : Equatable> (@in_guaranteed Optional<τ_0_0>, @in_guaranteed Optional<τ_0_0>, @thin Optional<τ_0_0>.Type) -> Bool

sil_vtable Empty {
  #Empty.init!allocator: (Empty.Type) -> () -> Empty : @$s4file5EmptyCACycfC	// Empty.__allocating_init()
  #Empty.deinit!deallocator: @$s4file5EmptyCfD	// Empty.__deallocating_deinit
}

sil_vtable Number {
  #Number.init!allocator: (Number.Type) -> (Int) -> Number : @$s4file6NumberC6numberACSi_tcfC	// Number.__allocating_init(number:)
  #Number.deinit!deallocator: @$s4file6NumberCfD	// Number.__deallocating_deinit
}

sil_vtable Closure {
  #Closure.init!allocator: (Closure.Type) -> (@escaping () -> ()) -> Closure : @$s4file7ClosureCyACyyccfC	// Closure.__allocating_init(_:)
  #Closure.deinit!deallocator: @$s4file7ClosureCfD	// Closure.__deallocating_deinit
}

sil_witness_table public_external [serialized] <Wrapped where Wrapped : Equatable> Optional<Wrapped>: Equatable module Swift {
  method #Equatable."==": <Self where Self : Equatable> (Self.Type) -> (Self, Self) -> Bool : @$sxSgSQsSQRzlSQ2eeoiySbx_xtFZTW	// protocol witness for static Equatable.== infix(_:_:) in conformance <A> A?
  conditional_conformance (Wrapped: Equatable): dependent
}


